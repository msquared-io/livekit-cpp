// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: livekit_metrics.proto
// Protobuf C++ Version: 6.30.1

#ifndef livekit_5fmetrics_2eproto_2epb_2eh
#define livekit_5fmetrics_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6030001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "google/protobuf/timestamp.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_livekit_5fmetrics_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_livekit_5fmetrics_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
extern const ::google::protobuf::internal::DescriptorTable descriptor_table_livekit_5fmetrics_2eproto;
}  // extern "C"
namespace livekit {
enum MetricLabel : int;
extern const uint32_t MetricLabel_internal_data_[];
class EventMetric;
struct EventMetricDefaultTypeInternal;
extern EventMetricDefaultTypeInternal _EventMetric_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull EventMetric_class_data_;
class MetricSample;
struct MetricSampleDefaultTypeInternal;
extern MetricSampleDefaultTypeInternal _MetricSample_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull MetricSample_class_data_;
class MetricsBatch;
struct MetricsBatchDefaultTypeInternal;
extern MetricsBatchDefaultTypeInternal _MetricsBatch_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull MetricsBatch_class_data_;
class TimeSeriesMetric;
struct TimeSeriesMetricDefaultTypeInternal;
extern TimeSeriesMetricDefaultTypeInternal _TimeSeriesMetric_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull TimeSeriesMetric_class_data_;
}  // namespace livekit
namespace google {
namespace protobuf {
template <>
internal::EnumTraitsT<::livekit::MetricLabel_internal_data_>
    internal::EnumTraitsImpl::value<::livekit::MetricLabel>;
}  // namespace protobuf
}  // namespace google

namespace livekit {
enum MetricLabel : int {
  AGENTS_LLM_TTFT = 0,
  AGENTS_STT_TTFT = 1,
  AGENTS_TTS_TTFB = 2,
  CLIENT_VIDEO_SUBSCRIBER_FREEZE_COUNT = 3,
  CLIENT_VIDEO_SUBSCRIBER_TOTAL_FREEZE_DURATION = 4,
  CLIENT_VIDEO_SUBSCRIBER_PAUSE_COUNT = 5,
  CLIENT_VIDEO_SUBSCRIBER_TOTAL_PAUSES_DURATION = 6,
  CLIENT_AUDIO_SUBSCRIBER_CONCEALED_SAMPLES = 7,
  CLIENT_AUDIO_SUBSCRIBER_SILENT_CONCEALED_SAMPLES = 8,
  CLIENT_AUDIO_SUBSCRIBER_CONCEALMENT_EVENTS = 9,
  CLIENT_AUDIO_SUBSCRIBER_INTERRUPTION_COUNT = 10,
  CLIENT_AUDIO_SUBSCRIBER_TOTAL_INTERRUPTION_DURATION = 11,
  CLIENT_SUBSCRIBER_JITTER_BUFFER_DELAY = 12,
  CLIENT_SUBSCRIBER_JITTER_BUFFER_EMITTED_COUNT = 13,
  CLIENT_VIDEO_PUBLISHER_QUALITY_LIMITATION_DURATION_BANDWIDTH = 14,
  CLIENT_VIDEO_PUBLISHER_QUALITY_LIMITATION_DURATION_CPU = 15,
  CLIENT_VIDEO_PUBLISHER_QUALITY_LIMITATION_DURATION_OTHER = 16,
  PUBLISHER_RTT = 17,
  SERVER_MESH_RTT = 18,
  SUBSCRIBER_RTT = 19,
  METRIC_LABEL_PREDEFINED_MAX_VALUE = 4096,
  MetricLabel_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  MetricLabel_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

extern const uint32_t MetricLabel_internal_data_[];
inline constexpr MetricLabel MetricLabel_MIN =
    static_cast<MetricLabel>(0);
inline constexpr MetricLabel MetricLabel_MAX =
    static_cast<MetricLabel>(4096);
inline bool MetricLabel_IsValid(int value) {
  return ::google::protobuf::internal::ValidateEnum(value, MetricLabel_internal_data_);
}
inline constexpr int MetricLabel_ARRAYSIZE = 4096 + 1;
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL MetricLabel_descriptor();
template <typename T>
const std::string& MetricLabel_Name(T value) {
  static_assert(std::is_same<T, MetricLabel>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to MetricLabel_Name().");
  return ::google::protobuf::internal::NameOfEnum(MetricLabel_descriptor(), value);
}
inline bool MetricLabel_Parse(
    absl::string_view name, MetricLabel* PROTOBUF_NONNULL value) {
  return ::google::protobuf::internal::ParseNamedEnum<MetricLabel>(MetricLabel_descriptor(), name,
                                           value);
}

// ===================================================================


// -------------------------------------------------------------------

class MetricSample final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:livekit.MetricSample) */ {
 public:
  inline MetricSample() : MetricSample(nullptr) {}
  ~MetricSample() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MetricSample* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MetricSample));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MetricSample(::google::protobuf::internal::ConstantInitialized);

  inline MetricSample(const MetricSample& from) : MetricSample(nullptr, from) {}
  inline MetricSample(MetricSample&& from) noexcept
      : MetricSample(nullptr, std::move(from)) {}
  inline MetricSample& operator=(const MetricSample& from) {
    CopyFrom(from);
    return *this;
  }
  inline MetricSample& operator=(MetricSample&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MetricSample& default_instance() {
    return *reinterpret_cast<const MetricSample*>(
        &_MetricSample_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(MetricSample& a, MetricSample& b) { a.Swap(&b); }
  inline void Swap(MetricSample* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MetricSample* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MetricSample* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MetricSample>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MetricSample& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MetricSample& from) { MetricSample::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MetricSample* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "livekit.MetricSample"; }

 protected:
  explicit MetricSample(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  MetricSample(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const MetricSample& from);
  MetricSample(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, MetricSample&& from) noexcept
      : MetricSample(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNormalizedTimestampFieldNumber = 2,
    kTimestampMsFieldNumber = 1,
    kValueFieldNumber = 3,
  };
  // .google.protobuf.Timestamp normalized_timestamp = 2;
  bool has_normalized_timestamp() const;
  void clear_normalized_timestamp() ;
  const ::google::protobuf::Timestamp& normalized_timestamp() const;
  [[nodiscard]] ::google::protobuf::Timestamp* PROTOBUF_NULLABLE release_normalized_timestamp();
  ::google::protobuf::Timestamp* PROTOBUF_NONNULL mutable_normalized_timestamp();
  void set_allocated_normalized_timestamp(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_normalized_timestamp(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value);
  ::google::protobuf::Timestamp* PROTOBUF_NULLABLE unsafe_arena_release_normalized_timestamp();

  private:
  const ::google::protobuf::Timestamp& _internal_normalized_timestamp() const;
  ::google::protobuf::Timestamp* PROTOBUF_NONNULL _internal_mutable_normalized_timestamp();

  public:
  // int64 timestamp_ms = 1;
  void clear_timestamp_ms() ;
  ::int64_t timestamp_ms() const;
  void set_timestamp_ms(::int64_t value);

  private:
  ::int64_t _internal_timestamp_ms() const;
  void _internal_set_timestamp_ms(::int64_t value);

  public:
  // float value = 3;
  void clear_value() ;
  float value() const;
  void set_value(float value);

  private:
  float _internal_value() const;
  void _internal_set_value(float value);

  public:
  // @@protoc_insertion_point(class_scope:livekit.MetricSample)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   1, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const MetricSample& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::Timestamp* PROTOBUF_NULLABLE normalized_timestamp_;
    ::int64_t timestamp_ms_;
    float value_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_livekit_5fmetrics_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull MetricSample_class_data_;
// -------------------------------------------------------------------

class EventMetric final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:livekit.EventMetric) */ {
 public:
  inline EventMetric() : EventMetric(nullptr) {}
  ~EventMetric() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(EventMetric* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(EventMetric));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR EventMetric(::google::protobuf::internal::ConstantInitialized);

  inline EventMetric(const EventMetric& from) : EventMetric(nullptr, from) {}
  inline EventMetric(EventMetric&& from) noexcept
      : EventMetric(nullptr, std::move(from)) {}
  inline EventMetric& operator=(const EventMetric& from) {
    CopyFrom(from);
    return *this;
  }
  inline EventMetric& operator=(EventMetric&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EventMetric& default_instance() {
    return *reinterpret_cast<const EventMetric*>(
        &_EventMetric_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(EventMetric& a, EventMetric& b) { a.Swap(&b); }
  inline void Swap(EventMetric* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EventMetric* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EventMetric* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<EventMetric>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const EventMetric& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const EventMetric& from) { EventMetric::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(EventMetric* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "livekit.EventMetric"; }

 protected:
  explicit EventMetric(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  EventMetric(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const EventMetric& from);
  EventMetric(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, EventMetric&& from) noexcept
      : EventMetric(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMetadataFieldNumber = 8,
    kNormalizedStartTimestampFieldNumber = 6,
    kNormalizedEndTimestampFieldNumber = 7,
    kLabelFieldNumber = 1,
    kParticipantIdentityFieldNumber = 2,
    kStartTimestampMsFieldNumber = 4,
    kEndTimestampMsFieldNumber = 5,
    kTrackSidFieldNumber = 3,
    kRidFieldNumber = 9,
  };
  // string metadata = 8;
  void clear_metadata() ;
  const std::string& metadata() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_metadata(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_metadata();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_metadata();
  void set_allocated_metadata(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_metadata() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_metadata(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_metadata();

  public:
  // .google.protobuf.Timestamp normalized_start_timestamp = 6;
  bool has_normalized_start_timestamp() const;
  void clear_normalized_start_timestamp() ;
  const ::google::protobuf::Timestamp& normalized_start_timestamp() const;
  [[nodiscard]] ::google::protobuf::Timestamp* PROTOBUF_NULLABLE release_normalized_start_timestamp();
  ::google::protobuf::Timestamp* PROTOBUF_NONNULL mutable_normalized_start_timestamp();
  void set_allocated_normalized_start_timestamp(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_normalized_start_timestamp(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value);
  ::google::protobuf::Timestamp* PROTOBUF_NULLABLE unsafe_arena_release_normalized_start_timestamp();

  private:
  const ::google::protobuf::Timestamp& _internal_normalized_start_timestamp() const;
  ::google::protobuf::Timestamp* PROTOBUF_NONNULL _internal_mutable_normalized_start_timestamp();

  public:
  // optional .google.protobuf.Timestamp normalized_end_timestamp = 7;
  bool has_normalized_end_timestamp() const;
  void clear_normalized_end_timestamp() ;
  const ::google::protobuf::Timestamp& normalized_end_timestamp() const;
  [[nodiscard]] ::google::protobuf::Timestamp* PROTOBUF_NULLABLE release_normalized_end_timestamp();
  ::google::protobuf::Timestamp* PROTOBUF_NONNULL mutable_normalized_end_timestamp();
  void set_allocated_normalized_end_timestamp(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_normalized_end_timestamp(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value);
  ::google::protobuf::Timestamp* PROTOBUF_NULLABLE unsafe_arena_release_normalized_end_timestamp();

  private:
  const ::google::protobuf::Timestamp& _internal_normalized_end_timestamp() const;
  ::google::protobuf::Timestamp* PROTOBUF_NONNULL _internal_mutable_normalized_end_timestamp();

  public:
  // uint32 label = 1;
  void clear_label() ;
  ::uint32_t label() const;
  void set_label(::uint32_t value);

  private:
  ::uint32_t _internal_label() const;
  void _internal_set_label(::uint32_t value);

  public:
  // uint32 participant_identity = 2;
  void clear_participant_identity() ;
  ::uint32_t participant_identity() const;
  void set_participant_identity(::uint32_t value);

  private:
  ::uint32_t _internal_participant_identity() const;
  void _internal_set_participant_identity(::uint32_t value);

  public:
  // int64 start_timestamp_ms = 4;
  void clear_start_timestamp_ms() ;
  ::int64_t start_timestamp_ms() const;
  void set_start_timestamp_ms(::int64_t value);

  private:
  ::int64_t _internal_start_timestamp_ms() const;
  void _internal_set_start_timestamp_ms(::int64_t value);

  public:
  // optional int64 end_timestamp_ms = 5;
  bool has_end_timestamp_ms() const;
  void clear_end_timestamp_ms() ;
  ::int64_t end_timestamp_ms() const;
  void set_end_timestamp_ms(::int64_t value);

  private:
  ::int64_t _internal_end_timestamp_ms() const;
  void _internal_set_end_timestamp_ms(::int64_t value);

  public:
  // uint32 track_sid = 3;
  void clear_track_sid() ;
  ::uint32_t track_sid() const;
  void set_track_sid(::uint32_t value);

  private:
  ::uint32_t _internal_track_sid() const;
  void _internal_set_track_sid(::uint32_t value);

  public:
  // uint32 rid = 9;
  void clear_rid() ;
  ::uint32_t rid() const;
  void set_rid(::uint32_t value);

  private:
  ::uint32_t _internal_rid() const;
  void _internal_set_rid(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:livekit.EventMetric)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<4, 9,
                                   2, 44,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const EventMetric& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr metadata_;
    ::google::protobuf::Timestamp* PROTOBUF_NULLABLE normalized_start_timestamp_;
    ::google::protobuf::Timestamp* PROTOBUF_NULLABLE normalized_end_timestamp_;
    ::uint32_t label_;
    ::uint32_t participant_identity_;
    ::int64_t start_timestamp_ms_;
    ::int64_t end_timestamp_ms_;
    ::uint32_t track_sid_;
    ::uint32_t rid_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_livekit_5fmetrics_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull EventMetric_class_data_;
// -------------------------------------------------------------------

class TimeSeriesMetric final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:livekit.TimeSeriesMetric) */ {
 public:
  inline TimeSeriesMetric() : TimeSeriesMetric(nullptr) {}
  ~TimeSeriesMetric() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(TimeSeriesMetric* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(TimeSeriesMetric));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TimeSeriesMetric(::google::protobuf::internal::ConstantInitialized);

  inline TimeSeriesMetric(const TimeSeriesMetric& from) : TimeSeriesMetric(nullptr, from) {}
  inline TimeSeriesMetric(TimeSeriesMetric&& from) noexcept
      : TimeSeriesMetric(nullptr, std::move(from)) {}
  inline TimeSeriesMetric& operator=(const TimeSeriesMetric& from) {
    CopyFrom(from);
    return *this;
  }
  inline TimeSeriesMetric& operator=(TimeSeriesMetric&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TimeSeriesMetric& default_instance() {
    return *reinterpret_cast<const TimeSeriesMetric*>(
        &_TimeSeriesMetric_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(TimeSeriesMetric& a, TimeSeriesMetric& b) { a.Swap(&b); }
  inline void Swap(TimeSeriesMetric* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TimeSeriesMetric* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TimeSeriesMetric* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<TimeSeriesMetric>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TimeSeriesMetric& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TimeSeriesMetric& from) { TimeSeriesMetric::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(TimeSeriesMetric* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "livekit.TimeSeriesMetric"; }

 protected:
  explicit TimeSeriesMetric(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  TimeSeriesMetric(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const TimeSeriesMetric& from);
  TimeSeriesMetric(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, TimeSeriesMetric&& from) noexcept
      : TimeSeriesMetric(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSamplesFieldNumber = 4,
    kLabelFieldNumber = 1,
    kParticipantIdentityFieldNumber = 2,
    kTrackSidFieldNumber = 3,
    kRidFieldNumber = 5,
  };
  // repeated .livekit.MetricSample samples = 4;
  int samples_size() const;
  private:
  int _internal_samples_size() const;

  public:
  void clear_samples() ;
  ::livekit::MetricSample* PROTOBUF_NONNULL mutable_samples(int index);
  ::google::protobuf::RepeatedPtrField<::livekit::MetricSample>* PROTOBUF_NONNULL mutable_samples();

  private:
  const ::google::protobuf::RepeatedPtrField<::livekit::MetricSample>& _internal_samples() const;
  ::google::protobuf::RepeatedPtrField<::livekit::MetricSample>* PROTOBUF_NONNULL _internal_mutable_samples();
  public:
  const ::livekit::MetricSample& samples(int index) const;
  ::livekit::MetricSample* PROTOBUF_NONNULL add_samples();
  const ::google::protobuf::RepeatedPtrField<::livekit::MetricSample>& samples() const;
  // uint32 label = 1;
  void clear_label() ;
  ::uint32_t label() const;
  void set_label(::uint32_t value);

  private:
  ::uint32_t _internal_label() const;
  void _internal_set_label(::uint32_t value);

  public:
  // uint32 participant_identity = 2;
  void clear_participant_identity() ;
  ::uint32_t participant_identity() const;
  void set_participant_identity(::uint32_t value);

  private:
  ::uint32_t _internal_participant_identity() const;
  void _internal_set_participant_identity(::uint32_t value);

  public:
  // uint32 track_sid = 3;
  void clear_track_sid() ;
  ::uint32_t track_sid() const;
  void set_track_sid(::uint32_t value);

  private:
  ::uint32_t _internal_track_sid() const;
  void _internal_set_track_sid(::uint32_t value);

  public:
  // uint32 rid = 5;
  void clear_rid() ;
  ::uint32_t rid() const;
  void set_rid(::uint32_t value);

  private:
  ::uint32_t _internal_rid() const;
  void _internal_set_rid(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:livekit.TimeSeriesMetric)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 5,
                                   1, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const TimeSeriesMetric& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::livekit::MetricSample > samples_;
    ::uint32_t label_;
    ::uint32_t participant_identity_;
    ::uint32_t track_sid_;
    ::uint32_t rid_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_livekit_5fmetrics_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull TimeSeriesMetric_class_data_;
// -------------------------------------------------------------------

class MetricsBatch final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:livekit.MetricsBatch) */ {
 public:
  inline MetricsBatch() : MetricsBatch(nullptr) {}
  ~MetricsBatch() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MetricsBatch* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MetricsBatch));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MetricsBatch(::google::protobuf::internal::ConstantInitialized);

  inline MetricsBatch(const MetricsBatch& from) : MetricsBatch(nullptr, from) {}
  inline MetricsBatch(MetricsBatch&& from) noexcept
      : MetricsBatch(nullptr, std::move(from)) {}
  inline MetricsBatch& operator=(const MetricsBatch& from) {
    CopyFrom(from);
    return *this;
  }
  inline MetricsBatch& operator=(MetricsBatch&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MetricsBatch& default_instance() {
    return *reinterpret_cast<const MetricsBatch*>(
        &_MetricsBatch_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(MetricsBatch& a, MetricsBatch& b) { a.Swap(&b); }
  inline void Swap(MetricsBatch* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MetricsBatch* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MetricsBatch* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MetricsBatch>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MetricsBatch& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MetricsBatch& from) { MetricsBatch::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MetricsBatch* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "livekit.MetricsBatch"; }

 protected:
  explicit MetricsBatch(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  MetricsBatch(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const MetricsBatch& from);
  MetricsBatch(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, MetricsBatch&& from) noexcept
      : MetricsBatch(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kStrDataFieldNumber = 3,
    kTimeSeriesFieldNumber = 4,
    kEventsFieldNumber = 5,
    kNormalizedTimestampFieldNumber = 2,
    kTimestampMsFieldNumber = 1,
  };
  // repeated string str_data = 3;
  int str_data_size() const;
  private:
  int _internal_str_data_size() const;

  public:
  void clear_str_data() ;
  const std::string& str_data(int index) const;
  std::string* PROTOBUF_NONNULL mutable_str_data(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_str_data(int index, Arg_&& value, Args_... args);
  std::string* PROTOBUF_NONNULL add_str_data();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_str_data(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& str_data() const;
  ::google::protobuf::RepeatedPtrField<std::string>* PROTOBUF_NONNULL mutable_str_data();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_str_data() const;
  ::google::protobuf::RepeatedPtrField<std::string>* PROTOBUF_NONNULL _internal_mutable_str_data();

  public:
  // repeated .livekit.TimeSeriesMetric time_series = 4;
  int time_series_size() const;
  private:
  int _internal_time_series_size() const;

  public:
  void clear_time_series() ;
  ::livekit::TimeSeriesMetric* PROTOBUF_NONNULL mutable_time_series(int index);
  ::google::protobuf::RepeatedPtrField<::livekit::TimeSeriesMetric>* PROTOBUF_NONNULL mutable_time_series();

  private:
  const ::google::protobuf::RepeatedPtrField<::livekit::TimeSeriesMetric>& _internal_time_series() const;
  ::google::protobuf::RepeatedPtrField<::livekit::TimeSeriesMetric>* PROTOBUF_NONNULL _internal_mutable_time_series();
  public:
  const ::livekit::TimeSeriesMetric& time_series(int index) const;
  ::livekit::TimeSeriesMetric* PROTOBUF_NONNULL add_time_series();
  const ::google::protobuf::RepeatedPtrField<::livekit::TimeSeriesMetric>& time_series() const;
  // repeated .livekit.EventMetric events = 5;
  int events_size() const;
  private:
  int _internal_events_size() const;

  public:
  void clear_events() ;
  ::livekit::EventMetric* PROTOBUF_NONNULL mutable_events(int index);
  ::google::protobuf::RepeatedPtrField<::livekit::EventMetric>* PROTOBUF_NONNULL mutable_events();

  private:
  const ::google::protobuf::RepeatedPtrField<::livekit::EventMetric>& _internal_events() const;
  ::google::protobuf::RepeatedPtrField<::livekit::EventMetric>* PROTOBUF_NONNULL _internal_mutable_events();
  public:
  const ::livekit::EventMetric& events(int index) const;
  ::livekit::EventMetric* PROTOBUF_NONNULL add_events();
  const ::google::protobuf::RepeatedPtrField<::livekit::EventMetric>& events() const;
  // .google.protobuf.Timestamp normalized_timestamp = 2;
  bool has_normalized_timestamp() const;
  void clear_normalized_timestamp() ;
  const ::google::protobuf::Timestamp& normalized_timestamp() const;
  [[nodiscard]] ::google::protobuf::Timestamp* PROTOBUF_NULLABLE release_normalized_timestamp();
  ::google::protobuf::Timestamp* PROTOBUF_NONNULL mutable_normalized_timestamp();
  void set_allocated_normalized_timestamp(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_normalized_timestamp(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value);
  ::google::protobuf::Timestamp* PROTOBUF_NULLABLE unsafe_arena_release_normalized_timestamp();

  private:
  const ::google::protobuf::Timestamp& _internal_normalized_timestamp() const;
  ::google::protobuf::Timestamp* PROTOBUF_NONNULL _internal_mutable_normalized_timestamp();

  public:
  // int64 timestamp_ms = 1;
  void clear_timestamp_ms() ;
  ::int64_t timestamp_ms() const;
  void set_timestamp_ms(::int64_t value);

  private:
  ::int64_t _internal_timestamp_ms() const;
  void _internal_set_timestamp_ms(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:livekit.MetricsBatch)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 5,
                                   3, 37,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const MetricsBatch& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<std::string> str_data_;
    ::google::protobuf::RepeatedPtrField< ::livekit::TimeSeriesMetric > time_series_;
    ::google::protobuf::RepeatedPtrField< ::livekit::EventMetric > events_;
    ::google::protobuf::Timestamp* PROTOBUF_NULLABLE normalized_timestamp_;
    ::int64_t timestamp_ms_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_livekit_5fmetrics_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull MetricsBatch_class_data_;

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// MetricsBatch

// int64 timestamp_ms = 1;
inline void MetricsBatch::clear_timestamp_ms() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ms_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int64_t MetricsBatch::timestamp_ms() const {
  // @@protoc_insertion_point(field_get:livekit.MetricsBatch.timestamp_ms)
  return _internal_timestamp_ms();
}
inline void MetricsBatch::set_timestamp_ms(::int64_t value) {
  _internal_set_timestamp_ms(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:livekit.MetricsBatch.timestamp_ms)
}
inline ::int64_t MetricsBatch::_internal_timestamp_ms() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timestamp_ms_;
}
inline void MetricsBatch::_internal_set_timestamp_ms(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ms_ = value;
}

// .google.protobuf.Timestamp normalized_timestamp = 2;
inline bool MetricsBatch::has_normalized_timestamp() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.normalized_timestamp_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& MetricsBatch::_internal_normalized_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.normalized_timestamp_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& MetricsBatch::normalized_timestamp() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:livekit.MetricsBatch.normalized_timestamp)
  return _internal_normalized_timestamp();
}
inline void MetricsBatch::unsafe_arena_set_allocated_normalized_timestamp(
    ::google::protobuf::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.normalized_timestamp_);
  }
  _impl_.normalized_timestamp_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:livekit.MetricsBatch.normalized_timestamp)
}
inline ::google::protobuf::Timestamp* PROTOBUF_NULLABLE MetricsBatch::release_normalized_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* released = _impl_.normalized_timestamp_;
  _impl_.normalized_timestamp_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NULLABLE MetricsBatch::unsafe_arena_release_normalized_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:livekit.MetricsBatch.normalized_timestamp)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* temp = _impl_.normalized_timestamp_;
  _impl_.normalized_timestamp_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NONNULL MetricsBatch::_internal_mutable_normalized_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.normalized_timestamp_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.normalized_timestamp_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.normalized_timestamp_;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NONNULL MetricsBatch::mutable_normalized_timestamp()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_normalized_timestamp();
  // @@protoc_insertion_point(field_mutable:livekit.MetricsBatch.normalized_timestamp)
  return _msg;
}
inline void MetricsBatch::set_allocated_normalized_timestamp(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.normalized_timestamp_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.normalized_timestamp_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:livekit.MetricsBatch.normalized_timestamp)
}

// repeated string str_data = 3;
inline int MetricsBatch::_internal_str_data_size() const {
  return _internal_str_data().size();
}
inline int MetricsBatch::str_data_size() const {
  return _internal_str_data_size();
}
inline void MetricsBatch::clear_str_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.str_data_.Clear();
}
inline std::string* PROTOBUF_NONNULL MetricsBatch::add_str_data()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_str_data()->Add();
  // @@protoc_insertion_point(field_add_mutable:livekit.MetricsBatch.str_data)
  return _s;
}
inline const std::string& MetricsBatch::str_data(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:livekit.MetricsBatch.str_data)
  return _internal_str_data().Get(index);
}
inline std::string* PROTOBUF_NONNULL MetricsBatch::mutable_str_data(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:livekit.MetricsBatch.str_data)
  return _internal_mutable_str_data()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void MetricsBatch::set_str_data(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(*_internal_mutable_str_data()->Mutable(index), std::forward<Arg_>(value),
                        args... );
  // @@protoc_insertion_point(field_set:livekit.MetricsBatch.str_data)
}
template <typename Arg_, typename... Args_>
inline void MetricsBatch::add_str_data(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_str_data(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:livekit.MetricsBatch.str_data)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>& MetricsBatch::str_data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:livekit.MetricsBatch.str_data)
  return _internal_str_data();
}
inline ::google::protobuf::RepeatedPtrField<std::string>* PROTOBUF_NONNULL
MetricsBatch::mutable_str_data() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:livekit.MetricsBatch.str_data)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_str_data();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
MetricsBatch::_internal_str_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.str_data_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>* PROTOBUF_NONNULL
MetricsBatch::_internal_mutable_str_data() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.str_data_;
}

// repeated .livekit.TimeSeriesMetric time_series = 4;
inline int MetricsBatch::_internal_time_series_size() const {
  return _internal_time_series().size();
}
inline int MetricsBatch::time_series_size() const {
  return _internal_time_series_size();
}
inline void MetricsBatch::clear_time_series() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.time_series_.Clear();
}
inline ::livekit::TimeSeriesMetric* PROTOBUF_NONNULL MetricsBatch::mutable_time_series(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:livekit.MetricsBatch.time_series)
  return _internal_mutable_time_series()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::livekit::TimeSeriesMetric>* PROTOBUF_NONNULL MetricsBatch::mutable_time_series()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:livekit.MetricsBatch.time_series)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_time_series();
}
inline const ::livekit::TimeSeriesMetric& MetricsBatch::time_series(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:livekit.MetricsBatch.time_series)
  return _internal_time_series().Get(index);
}
inline ::livekit::TimeSeriesMetric* PROTOBUF_NONNULL MetricsBatch::add_time_series()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::livekit::TimeSeriesMetric* _add = _internal_mutable_time_series()->Add();
  // @@protoc_insertion_point(field_add:livekit.MetricsBatch.time_series)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::livekit::TimeSeriesMetric>& MetricsBatch::time_series() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:livekit.MetricsBatch.time_series)
  return _internal_time_series();
}
inline const ::google::protobuf::RepeatedPtrField<::livekit::TimeSeriesMetric>&
MetricsBatch::_internal_time_series() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.time_series_;
}
inline ::google::protobuf::RepeatedPtrField<::livekit::TimeSeriesMetric>* PROTOBUF_NONNULL
MetricsBatch::_internal_mutable_time_series() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.time_series_;
}

// repeated .livekit.EventMetric events = 5;
inline int MetricsBatch::_internal_events_size() const {
  return _internal_events().size();
}
inline int MetricsBatch::events_size() const {
  return _internal_events_size();
}
inline void MetricsBatch::clear_events() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.events_.Clear();
}
inline ::livekit::EventMetric* PROTOBUF_NONNULL MetricsBatch::mutable_events(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:livekit.MetricsBatch.events)
  return _internal_mutable_events()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::livekit::EventMetric>* PROTOBUF_NONNULL MetricsBatch::mutable_events()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:livekit.MetricsBatch.events)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_events();
}
inline const ::livekit::EventMetric& MetricsBatch::events(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:livekit.MetricsBatch.events)
  return _internal_events().Get(index);
}
inline ::livekit::EventMetric* PROTOBUF_NONNULL MetricsBatch::add_events()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::livekit::EventMetric* _add = _internal_mutable_events()->Add();
  // @@protoc_insertion_point(field_add:livekit.MetricsBatch.events)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::livekit::EventMetric>& MetricsBatch::events() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:livekit.MetricsBatch.events)
  return _internal_events();
}
inline const ::google::protobuf::RepeatedPtrField<::livekit::EventMetric>&
MetricsBatch::_internal_events() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.events_;
}
inline ::google::protobuf::RepeatedPtrField<::livekit::EventMetric>* PROTOBUF_NONNULL
MetricsBatch::_internal_mutable_events() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.events_;
}

// -------------------------------------------------------------------

// TimeSeriesMetric

// uint32 label = 1;
inline void TimeSeriesMetric::clear_label() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.label_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint32_t TimeSeriesMetric::label() const {
  // @@protoc_insertion_point(field_get:livekit.TimeSeriesMetric.label)
  return _internal_label();
}
inline void TimeSeriesMetric::set_label(::uint32_t value) {
  _internal_set_label(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:livekit.TimeSeriesMetric.label)
}
inline ::uint32_t TimeSeriesMetric::_internal_label() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.label_;
}
inline void TimeSeriesMetric::_internal_set_label(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.label_ = value;
}

// uint32 participant_identity = 2;
inline void TimeSeriesMetric::clear_participant_identity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.participant_identity_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint32_t TimeSeriesMetric::participant_identity() const {
  // @@protoc_insertion_point(field_get:livekit.TimeSeriesMetric.participant_identity)
  return _internal_participant_identity();
}
inline void TimeSeriesMetric::set_participant_identity(::uint32_t value) {
  _internal_set_participant_identity(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:livekit.TimeSeriesMetric.participant_identity)
}
inline ::uint32_t TimeSeriesMetric::_internal_participant_identity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.participant_identity_;
}
inline void TimeSeriesMetric::_internal_set_participant_identity(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.participant_identity_ = value;
}

// uint32 track_sid = 3;
inline void TimeSeriesMetric::clear_track_sid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.track_sid_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::uint32_t TimeSeriesMetric::track_sid() const {
  // @@protoc_insertion_point(field_get:livekit.TimeSeriesMetric.track_sid)
  return _internal_track_sid();
}
inline void TimeSeriesMetric::set_track_sid(::uint32_t value) {
  _internal_set_track_sid(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:livekit.TimeSeriesMetric.track_sid)
}
inline ::uint32_t TimeSeriesMetric::_internal_track_sid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.track_sid_;
}
inline void TimeSeriesMetric::_internal_set_track_sid(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.track_sid_ = value;
}

// repeated .livekit.MetricSample samples = 4;
inline int TimeSeriesMetric::_internal_samples_size() const {
  return _internal_samples().size();
}
inline int TimeSeriesMetric::samples_size() const {
  return _internal_samples_size();
}
inline void TimeSeriesMetric::clear_samples() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.samples_.Clear();
}
inline ::livekit::MetricSample* PROTOBUF_NONNULL TimeSeriesMetric::mutable_samples(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:livekit.TimeSeriesMetric.samples)
  return _internal_mutable_samples()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::livekit::MetricSample>* PROTOBUF_NONNULL TimeSeriesMetric::mutable_samples()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:livekit.TimeSeriesMetric.samples)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_samples();
}
inline const ::livekit::MetricSample& TimeSeriesMetric::samples(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:livekit.TimeSeriesMetric.samples)
  return _internal_samples().Get(index);
}
inline ::livekit::MetricSample* PROTOBUF_NONNULL TimeSeriesMetric::add_samples()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::livekit::MetricSample* _add = _internal_mutable_samples()->Add();
  // @@protoc_insertion_point(field_add:livekit.TimeSeriesMetric.samples)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::livekit::MetricSample>& TimeSeriesMetric::samples() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:livekit.TimeSeriesMetric.samples)
  return _internal_samples();
}
inline const ::google::protobuf::RepeatedPtrField<::livekit::MetricSample>&
TimeSeriesMetric::_internal_samples() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.samples_;
}
inline ::google::protobuf::RepeatedPtrField<::livekit::MetricSample>* PROTOBUF_NONNULL
TimeSeriesMetric::_internal_mutable_samples() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.samples_;
}

// uint32 rid = 5;
inline void TimeSeriesMetric::clear_rid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rid_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::uint32_t TimeSeriesMetric::rid() const {
  // @@protoc_insertion_point(field_get:livekit.TimeSeriesMetric.rid)
  return _internal_rid();
}
inline void TimeSeriesMetric::set_rid(::uint32_t value) {
  _internal_set_rid(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:livekit.TimeSeriesMetric.rid)
}
inline ::uint32_t TimeSeriesMetric::_internal_rid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.rid_;
}
inline void TimeSeriesMetric::_internal_set_rid(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rid_ = value;
}

// -------------------------------------------------------------------

// MetricSample

// int64 timestamp_ms = 1;
inline void MetricSample::clear_timestamp_ms() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ms_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int64_t MetricSample::timestamp_ms() const {
  // @@protoc_insertion_point(field_get:livekit.MetricSample.timestamp_ms)
  return _internal_timestamp_ms();
}
inline void MetricSample::set_timestamp_ms(::int64_t value) {
  _internal_set_timestamp_ms(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:livekit.MetricSample.timestamp_ms)
}
inline ::int64_t MetricSample::_internal_timestamp_ms() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timestamp_ms_;
}
inline void MetricSample::_internal_set_timestamp_ms(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ms_ = value;
}

// .google.protobuf.Timestamp normalized_timestamp = 2;
inline bool MetricSample::has_normalized_timestamp() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.normalized_timestamp_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& MetricSample::_internal_normalized_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.normalized_timestamp_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& MetricSample::normalized_timestamp() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:livekit.MetricSample.normalized_timestamp)
  return _internal_normalized_timestamp();
}
inline void MetricSample::unsafe_arena_set_allocated_normalized_timestamp(
    ::google::protobuf::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.normalized_timestamp_);
  }
  _impl_.normalized_timestamp_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:livekit.MetricSample.normalized_timestamp)
}
inline ::google::protobuf::Timestamp* PROTOBUF_NULLABLE MetricSample::release_normalized_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* released = _impl_.normalized_timestamp_;
  _impl_.normalized_timestamp_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NULLABLE MetricSample::unsafe_arena_release_normalized_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:livekit.MetricSample.normalized_timestamp)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* temp = _impl_.normalized_timestamp_;
  _impl_.normalized_timestamp_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NONNULL MetricSample::_internal_mutable_normalized_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.normalized_timestamp_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.normalized_timestamp_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.normalized_timestamp_;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NONNULL MetricSample::mutable_normalized_timestamp()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_normalized_timestamp();
  // @@protoc_insertion_point(field_mutable:livekit.MetricSample.normalized_timestamp)
  return _msg;
}
inline void MetricSample::set_allocated_normalized_timestamp(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.normalized_timestamp_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.normalized_timestamp_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:livekit.MetricSample.normalized_timestamp)
}

// float value = 3;
inline void MetricSample::clear_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline float MetricSample::value() const {
  // @@protoc_insertion_point(field_get:livekit.MetricSample.value)
  return _internal_value();
}
inline void MetricSample::set_value(float value) {
  _internal_set_value(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:livekit.MetricSample.value)
}
inline float MetricSample::_internal_value() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.value_;
}
inline void MetricSample::_internal_set_value(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_ = value;
}

// -------------------------------------------------------------------

// EventMetric

// uint32 label = 1;
inline void EventMetric::clear_label() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.label_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::uint32_t EventMetric::label() const {
  // @@protoc_insertion_point(field_get:livekit.EventMetric.label)
  return _internal_label();
}
inline void EventMetric::set_label(::uint32_t value) {
  _internal_set_label(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:livekit.EventMetric.label)
}
inline ::uint32_t EventMetric::_internal_label() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.label_;
}
inline void EventMetric::_internal_set_label(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.label_ = value;
}

// uint32 participant_identity = 2;
inline void EventMetric::clear_participant_identity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.participant_identity_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::uint32_t EventMetric::participant_identity() const {
  // @@protoc_insertion_point(field_get:livekit.EventMetric.participant_identity)
  return _internal_participant_identity();
}
inline void EventMetric::set_participant_identity(::uint32_t value) {
  _internal_set_participant_identity(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:livekit.EventMetric.participant_identity)
}
inline ::uint32_t EventMetric::_internal_participant_identity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.participant_identity_;
}
inline void EventMetric::_internal_set_participant_identity(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.participant_identity_ = value;
}

// uint32 track_sid = 3;
inline void EventMetric::clear_track_sid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.track_sid_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline ::uint32_t EventMetric::track_sid() const {
  // @@protoc_insertion_point(field_get:livekit.EventMetric.track_sid)
  return _internal_track_sid();
}
inline void EventMetric::set_track_sid(::uint32_t value) {
  _internal_set_track_sid(value);
  _impl_._has_bits_[0] |= 0x00000080u;
  // @@protoc_insertion_point(field_set:livekit.EventMetric.track_sid)
}
inline ::uint32_t EventMetric::_internal_track_sid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.track_sid_;
}
inline void EventMetric::_internal_set_track_sid(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.track_sid_ = value;
}

// int64 start_timestamp_ms = 4;
inline void EventMetric::clear_start_timestamp_ms() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.start_timestamp_ms_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::int64_t EventMetric::start_timestamp_ms() const {
  // @@protoc_insertion_point(field_get:livekit.EventMetric.start_timestamp_ms)
  return _internal_start_timestamp_ms();
}
inline void EventMetric::set_start_timestamp_ms(::int64_t value) {
  _internal_set_start_timestamp_ms(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:livekit.EventMetric.start_timestamp_ms)
}
inline ::int64_t EventMetric::_internal_start_timestamp_ms() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.start_timestamp_ms_;
}
inline void EventMetric::_internal_set_start_timestamp_ms(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.start_timestamp_ms_ = value;
}

// optional int64 end_timestamp_ms = 5;
inline bool EventMetric::has_end_timestamp_ms() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline void EventMetric::clear_end_timestamp_ms() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.end_timestamp_ms_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline ::int64_t EventMetric::end_timestamp_ms() const {
  // @@protoc_insertion_point(field_get:livekit.EventMetric.end_timestamp_ms)
  return _internal_end_timestamp_ms();
}
inline void EventMetric::set_end_timestamp_ms(::int64_t value) {
  _internal_set_end_timestamp_ms(value);
  _impl_._has_bits_[0] |= 0x00000040u;
  // @@protoc_insertion_point(field_set:livekit.EventMetric.end_timestamp_ms)
}
inline ::int64_t EventMetric::_internal_end_timestamp_ms() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.end_timestamp_ms_;
}
inline void EventMetric::_internal_set_end_timestamp_ms(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.end_timestamp_ms_ = value;
}

// .google.protobuf.Timestamp normalized_start_timestamp = 6;
inline bool EventMetric::has_normalized_start_timestamp() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.normalized_start_timestamp_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& EventMetric::_internal_normalized_start_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.normalized_start_timestamp_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& EventMetric::normalized_start_timestamp() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:livekit.EventMetric.normalized_start_timestamp)
  return _internal_normalized_start_timestamp();
}
inline void EventMetric::unsafe_arena_set_allocated_normalized_start_timestamp(
    ::google::protobuf::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.normalized_start_timestamp_);
  }
  _impl_.normalized_start_timestamp_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:livekit.EventMetric.normalized_start_timestamp)
}
inline ::google::protobuf::Timestamp* PROTOBUF_NULLABLE EventMetric::release_normalized_start_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* released = _impl_.normalized_start_timestamp_;
  _impl_.normalized_start_timestamp_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NULLABLE EventMetric::unsafe_arena_release_normalized_start_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:livekit.EventMetric.normalized_start_timestamp)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* temp = _impl_.normalized_start_timestamp_;
  _impl_.normalized_start_timestamp_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NONNULL EventMetric::_internal_mutable_normalized_start_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.normalized_start_timestamp_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.normalized_start_timestamp_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.normalized_start_timestamp_;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NONNULL EventMetric::mutable_normalized_start_timestamp()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_normalized_start_timestamp();
  // @@protoc_insertion_point(field_mutable:livekit.EventMetric.normalized_start_timestamp)
  return _msg;
}
inline void EventMetric::set_allocated_normalized_start_timestamp(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.normalized_start_timestamp_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.normalized_start_timestamp_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:livekit.EventMetric.normalized_start_timestamp)
}

// optional .google.protobuf.Timestamp normalized_end_timestamp = 7;
inline bool EventMetric::has_normalized_end_timestamp() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.normalized_end_timestamp_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& EventMetric::_internal_normalized_end_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.normalized_end_timestamp_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& EventMetric::normalized_end_timestamp() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:livekit.EventMetric.normalized_end_timestamp)
  return _internal_normalized_end_timestamp();
}
inline void EventMetric::unsafe_arena_set_allocated_normalized_end_timestamp(
    ::google::protobuf::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.normalized_end_timestamp_);
  }
  _impl_.normalized_end_timestamp_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:livekit.EventMetric.normalized_end_timestamp)
}
inline ::google::protobuf::Timestamp* PROTOBUF_NULLABLE EventMetric::release_normalized_end_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::google::protobuf::Timestamp* released = _impl_.normalized_end_timestamp_;
  _impl_.normalized_end_timestamp_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NULLABLE EventMetric::unsafe_arena_release_normalized_end_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:livekit.EventMetric.normalized_end_timestamp)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::google::protobuf::Timestamp* temp = _impl_.normalized_end_timestamp_;
  _impl_.normalized_end_timestamp_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NONNULL EventMetric::_internal_mutable_normalized_end_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.normalized_end_timestamp_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.normalized_end_timestamp_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.normalized_end_timestamp_;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NONNULL EventMetric::mutable_normalized_end_timestamp()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_normalized_end_timestamp();
  // @@protoc_insertion_point(field_mutable:livekit.EventMetric.normalized_end_timestamp)
  return _msg;
}
inline void EventMetric::set_allocated_normalized_end_timestamp(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.normalized_end_timestamp_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.normalized_end_timestamp_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:livekit.EventMetric.normalized_end_timestamp)
}

// string metadata = 8;
inline void EventMetric::clear_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.metadata_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& EventMetric::metadata() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:livekit.EventMetric.metadata)
  return _internal_metadata();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void EventMetric::set_metadata(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.metadata_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:livekit.EventMetric.metadata)
}
inline std::string* PROTOBUF_NONNULL EventMetric::mutable_metadata()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_metadata();
  // @@protoc_insertion_point(field_mutable:livekit.EventMetric.metadata)
  return _s;
}
inline const std::string& EventMetric::_internal_metadata() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.metadata_.Get();
}
inline void EventMetric::_internal_set_metadata(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.metadata_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL EventMetric::_internal_mutable_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.metadata_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE EventMetric::release_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:livekit.EventMetric.metadata)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.metadata_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.metadata_.Set("", GetArena());
  }
  return released;
}
inline void EventMetric::set_allocated_metadata(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.metadata_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.metadata_.IsDefault()) {
    _impl_.metadata_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:livekit.EventMetric.metadata)
}

// uint32 rid = 9;
inline void EventMetric::clear_rid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rid_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000100u;
}
inline ::uint32_t EventMetric::rid() const {
  // @@protoc_insertion_point(field_get:livekit.EventMetric.rid)
  return _internal_rid();
}
inline void EventMetric::set_rid(::uint32_t value) {
  _internal_set_rid(value);
  _impl_._has_bits_[0] |= 0x00000100u;
  // @@protoc_insertion_point(field_set:livekit.EventMetric.rid)
}
inline ::uint32_t EventMetric::_internal_rid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.rid_;
}
inline void EventMetric::_internal_set_rid(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rid_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace livekit


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::livekit::MetricLabel> : std::true_type {};
template <>
inline const EnumDescriptor* PROTOBUF_NONNULL GetEnumDescriptor<::livekit::MetricLabel>() {
  return ::livekit::MetricLabel_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // livekit_5fmetrics_2eproto_2epb_2eh
