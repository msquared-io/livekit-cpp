// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: livekit_room.proto
// Protobuf C++ Version: 6.30.1

#ifndef livekit_5froom_2eproto_2epb_2eh
#define livekit_5froom_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6030001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/map.h"  // IWYU pragma: export
#include "google/protobuf/map_type_handler.h"  // IWYU pragma: export
#include "google/protobuf/map_entry.h"
#include "google/protobuf/map_field_inl.h"
#include "google/protobuf/unknown_field_set.h"
#include "livekit_models.pb.h"
#include "livekit_egress.pb.h"
#include "livekit_agent_dispatch.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_livekit_5froom_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_livekit_5froom_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
extern const ::google::protobuf::internal::DescriptorTable descriptor_table_livekit_5froom_2eproto;
}  // extern "C"
namespace livekit {
class CreateRoomRequest;
struct CreateRoomRequestDefaultTypeInternal;
extern CreateRoomRequestDefaultTypeInternal _CreateRoomRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CreateRoomRequest_class_data_;
class DeleteRoomRequest;
struct DeleteRoomRequestDefaultTypeInternal;
extern DeleteRoomRequestDefaultTypeInternal _DeleteRoomRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull DeleteRoomRequest_class_data_;
class DeleteRoomResponse;
struct DeleteRoomResponseDefaultTypeInternal;
extern DeleteRoomResponseDefaultTypeInternal _DeleteRoomResponse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull DeleteRoomResponse_class_data_;
class ForwardParticipantRequest;
struct ForwardParticipantRequestDefaultTypeInternal;
extern ForwardParticipantRequestDefaultTypeInternal _ForwardParticipantRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ForwardParticipantRequest_class_data_;
class ForwardParticipantResponse;
struct ForwardParticipantResponseDefaultTypeInternal;
extern ForwardParticipantResponseDefaultTypeInternal _ForwardParticipantResponse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ForwardParticipantResponse_class_data_;
class ListParticipantsRequest;
struct ListParticipantsRequestDefaultTypeInternal;
extern ListParticipantsRequestDefaultTypeInternal _ListParticipantsRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ListParticipantsRequest_class_data_;
class ListParticipantsResponse;
struct ListParticipantsResponseDefaultTypeInternal;
extern ListParticipantsResponseDefaultTypeInternal _ListParticipantsResponse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ListParticipantsResponse_class_data_;
class ListRoomsRequest;
struct ListRoomsRequestDefaultTypeInternal;
extern ListRoomsRequestDefaultTypeInternal _ListRoomsRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ListRoomsRequest_class_data_;
class ListRoomsResponse;
struct ListRoomsResponseDefaultTypeInternal;
extern ListRoomsResponseDefaultTypeInternal _ListRoomsResponse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ListRoomsResponse_class_data_;
class MuteRoomTrackRequest;
struct MuteRoomTrackRequestDefaultTypeInternal;
extern MuteRoomTrackRequestDefaultTypeInternal _MuteRoomTrackRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull MuteRoomTrackRequest_class_data_;
class MuteRoomTrackResponse;
struct MuteRoomTrackResponseDefaultTypeInternal;
extern MuteRoomTrackResponseDefaultTypeInternal _MuteRoomTrackResponse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull MuteRoomTrackResponse_class_data_;
class RemoveParticipantResponse;
struct RemoveParticipantResponseDefaultTypeInternal;
extern RemoveParticipantResponseDefaultTypeInternal _RemoveParticipantResponse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull RemoveParticipantResponse_class_data_;
class RoomAgent;
struct RoomAgentDefaultTypeInternal;
extern RoomAgentDefaultTypeInternal _RoomAgent_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull RoomAgent_class_data_;
class RoomConfiguration;
struct RoomConfigurationDefaultTypeInternal;
extern RoomConfigurationDefaultTypeInternal _RoomConfiguration_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull RoomConfiguration_class_data_;
class RoomEgress;
struct RoomEgressDefaultTypeInternal;
extern RoomEgressDefaultTypeInternal _RoomEgress_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull RoomEgress_class_data_;
class RoomParticipantIdentity;
struct RoomParticipantIdentityDefaultTypeInternal;
extern RoomParticipantIdentityDefaultTypeInternal _RoomParticipantIdentity_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull RoomParticipantIdentity_class_data_;
class SendDataRequest;
struct SendDataRequestDefaultTypeInternal;
extern SendDataRequestDefaultTypeInternal _SendDataRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull SendDataRequest_class_data_;
class SendDataResponse;
struct SendDataResponseDefaultTypeInternal;
extern SendDataResponseDefaultTypeInternal _SendDataResponse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull SendDataResponse_class_data_;
class UpdateParticipantRequest;
struct UpdateParticipantRequestDefaultTypeInternal;
extern UpdateParticipantRequestDefaultTypeInternal _UpdateParticipantRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull UpdateParticipantRequest_class_data_;
class UpdateParticipantRequest_AttributesEntry_DoNotUse;
struct UpdateParticipantRequest_AttributesEntry_DoNotUseDefaultTypeInternal;
extern UpdateParticipantRequest_AttributesEntry_DoNotUseDefaultTypeInternal _UpdateParticipantRequest_AttributesEntry_DoNotUse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull UpdateParticipantRequest_AttributesEntry_DoNotUse_class_data_;
class UpdateRoomMetadataRequest;
struct UpdateRoomMetadataRequestDefaultTypeInternal;
extern UpdateRoomMetadataRequestDefaultTypeInternal _UpdateRoomMetadataRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull UpdateRoomMetadataRequest_class_data_;
class UpdateSubscriptionsRequest;
struct UpdateSubscriptionsRequestDefaultTypeInternal;
extern UpdateSubscriptionsRequestDefaultTypeInternal _UpdateSubscriptionsRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull UpdateSubscriptionsRequest_class_data_;
class UpdateSubscriptionsResponse;
struct UpdateSubscriptionsResponseDefaultTypeInternal;
extern UpdateSubscriptionsResponseDefaultTypeInternal _UpdateSubscriptionsResponse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull UpdateSubscriptionsResponse_class_data_;
}  // namespace livekit
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace livekit {

// ===================================================================


// -------------------------------------------------------------------

class UpdateSubscriptionsResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:livekit.UpdateSubscriptionsResponse) */ {
 public:
  inline UpdateSubscriptionsResponse() : UpdateSubscriptionsResponse(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(UpdateSubscriptionsResponse* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(UpdateSubscriptionsResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateSubscriptionsResponse(::google::protobuf::internal::ConstantInitialized);

  inline UpdateSubscriptionsResponse(const UpdateSubscriptionsResponse& from) : UpdateSubscriptionsResponse(nullptr, from) {}
  inline UpdateSubscriptionsResponse(UpdateSubscriptionsResponse&& from) noexcept
      : UpdateSubscriptionsResponse(nullptr, std::move(from)) {}
  inline UpdateSubscriptionsResponse& operator=(const UpdateSubscriptionsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateSubscriptionsResponse& operator=(UpdateSubscriptionsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateSubscriptionsResponse& default_instance() {
    return *reinterpret_cast<const UpdateSubscriptionsResponse*>(
        &_UpdateSubscriptionsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 16;
  friend void swap(UpdateSubscriptionsResponse& a, UpdateSubscriptionsResponse& b) { a.Swap(&b); }
  inline void Swap(UpdateSubscriptionsResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateSubscriptionsResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateSubscriptionsResponse* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<UpdateSubscriptionsResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const UpdateSubscriptionsResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const UpdateSubscriptionsResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "livekit.UpdateSubscriptionsResponse"; }

 protected:
  explicit UpdateSubscriptionsResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  UpdateSubscriptionsResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const UpdateSubscriptionsResponse& from);
  UpdateSubscriptionsResponse(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, UpdateSubscriptionsResponse&& from) noexcept
      : UpdateSubscriptionsResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:livekit.UpdateSubscriptionsResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 0,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const UpdateSubscriptionsResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_livekit_5froom_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull UpdateSubscriptionsResponse_class_data_;
// -------------------------------------------------------------------

class UpdateRoomMetadataRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:livekit.UpdateRoomMetadataRequest) */ {
 public:
  inline UpdateRoomMetadataRequest() : UpdateRoomMetadataRequest(nullptr) {}
  ~UpdateRoomMetadataRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(UpdateRoomMetadataRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(UpdateRoomMetadataRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateRoomMetadataRequest(::google::protobuf::internal::ConstantInitialized);

  inline UpdateRoomMetadataRequest(const UpdateRoomMetadataRequest& from) : UpdateRoomMetadataRequest(nullptr, from) {}
  inline UpdateRoomMetadataRequest(UpdateRoomMetadataRequest&& from) noexcept
      : UpdateRoomMetadataRequest(nullptr, std::move(from)) {}
  inline UpdateRoomMetadataRequest& operator=(const UpdateRoomMetadataRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateRoomMetadataRequest& operator=(UpdateRoomMetadataRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateRoomMetadataRequest& default_instance() {
    return *reinterpret_cast<const UpdateRoomMetadataRequest*>(
        &_UpdateRoomMetadataRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 19;
  friend void swap(UpdateRoomMetadataRequest& a, UpdateRoomMetadataRequest& b) { a.Swap(&b); }
  inline void Swap(UpdateRoomMetadataRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateRoomMetadataRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateRoomMetadataRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<UpdateRoomMetadataRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UpdateRoomMetadataRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UpdateRoomMetadataRequest& from) { UpdateRoomMetadataRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(UpdateRoomMetadataRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "livekit.UpdateRoomMetadataRequest"; }

 protected:
  explicit UpdateRoomMetadataRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  UpdateRoomMetadataRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const UpdateRoomMetadataRequest& from);
  UpdateRoomMetadataRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, UpdateRoomMetadataRequest&& from) noexcept
      : UpdateRoomMetadataRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRoomFieldNumber = 1,
    kMetadataFieldNumber = 2,
  };
  // string room = 1;
  void clear_room() ;
  const std::string& room() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_room(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_room();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_room();
  void set_allocated_room(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_room() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_room(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_room();

  public:
  // string metadata = 2;
  void clear_metadata() ;
  const std::string& metadata() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_metadata(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_metadata();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_metadata();
  void set_allocated_metadata(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_metadata() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_metadata(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_metadata();

  public:
  // @@protoc_insertion_point(class_scope:livekit.UpdateRoomMetadataRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 54,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const UpdateRoomMetadataRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr room_;
    ::google::protobuf::internal::ArenaStringPtr metadata_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_livekit_5froom_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull UpdateRoomMetadataRequest_class_data_;
// -------------------------------------------------------------------

class UpdateParticipantRequest_AttributesEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<std::string, std::string,
                             ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                             ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType =
      ::google::protobuf::internal::MapEntry<std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  UpdateParticipantRequest_AttributesEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateParticipantRequest_AttributesEntry_DoNotUse(::google::protobuf::internal::ConstantInitialized);
  explicit UpdateParticipantRequest_AttributesEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr const void* PROTOBUF_NONNULL internal_default_instance() {
    return &_UpdateParticipantRequest_AttributesEntry_DoNotUse_default_instance_;
  }


  static constexpr auto InternalGenerateClassData_();

 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_livekit_5froom_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 65,
                                   2>
      _table_;

  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();
};
extern const ::google::protobuf::internal::ClassDataFull UpdateParticipantRequest_AttributesEntry_DoNotUse_class_data_;
// -------------------------------------------------------------------

class SendDataResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:livekit.SendDataResponse) */ {
 public:
  inline SendDataResponse() : SendDataResponse(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SendDataResponse* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SendDataResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SendDataResponse(::google::protobuf::internal::ConstantInitialized);

  inline SendDataResponse(const SendDataResponse& from) : SendDataResponse(nullptr, from) {}
  inline SendDataResponse(SendDataResponse&& from) noexcept
      : SendDataResponse(nullptr, std::move(from)) {}
  inline SendDataResponse& operator=(const SendDataResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SendDataResponse& operator=(SendDataResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SendDataResponse& default_instance() {
    return *reinterpret_cast<const SendDataResponse*>(
        &_SendDataResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 18;
  friend void swap(SendDataResponse& a, SendDataResponse& b) { a.Swap(&b); }
  inline void Swap(SendDataResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SendDataResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SendDataResponse* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<SendDataResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const SendDataResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const SendDataResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "livekit.SendDataResponse"; }

 protected:
  explicit SendDataResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  SendDataResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const SendDataResponse& from);
  SendDataResponse(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, SendDataResponse&& from) noexcept
      : SendDataResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:livekit.SendDataResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 0,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const SendDataResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_livekit_5froom_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull SendDataResponse_class_data_;
// -------------------------------------------------------------------

class SendDataRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:livekit.SendDataRequest) */ {
 public:
  inline SendDataRequest() : SendDataRequest(nullptr) {}
  ~SendDataRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SendDataRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SendDataRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SendDataRequest(::google::protobuf::internal::ConstantInitialized);

  inline SendDataRequest(const SendDataRequest& from) : SendDataRequest(nullptr, from) {}
  inline SendDataRequest(SendDataRequest&& from) noexcept
      : SendDataRequest(nullptr, std::move(from)) {}
  inline SendDataRequest& operator=(const SendDataRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SendDataRequest& operator=(SendDataRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SendDataRequest& default_instance() {
    return *reinterpret_cast<const SendDataRequest*>(
        &_SendDataRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 17;
  friend void swap(SendDataRequest& a, SendDataRequest& b) { a.Swap(&b); }
  inline void Swap(SendDataRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SendDataRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SendDataRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SendDataRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SendDataRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SendDataRequest& from) { SendDataRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SendDataRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "livekit.SendDataRequest"; }

 protected:
  explicit SendDataRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  SendDataRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const SendDataRequest& from);
  SendDataRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, SendDataRequest&& from) noexcept
      : SendDataRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDestinationSidsFieldNumber = 4,
    kDestinationIdentitiesFieldNumber = 6,
    kRoomFieldNumber = 1,
    kDataFieldNumber = 2,
    kTopicFieldNumber = 5,
    kNonceFieldNumber = 7,
    kKindFieldNumber = 3,
  };
  // repeated string destination_sids = 4 [deprecated = true];
  [[deprecated]]  int destination_sids_size() const;
  private:
  int _internal_destination_sids_size() const;

  public:
  [[deprecated]]  void clear_destination_sids() ;
  [[deprecated]] const std::string& destination_sids(int index) const;
  [[deprecated]] std::string* PROTOBUF_NONNULL mutable_destination_sids(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  [[deprecated]] void set_destination_sids(int index, Arg_&& value, Args_... args);
  [[deprecated]] std::string* PROTOBUF_NONNULL add_destination_sids();
  template <typename Arg_ = const std::string&, typename... Args_>
  [[deprecated]] void add_destination_sids(Arg_&& value, Args_... args);
  [[deprecated]] const ::google::protobuf::RepeatedPtrField<std::string>& destination_sids() const;
  [[deprecated]] ::google::protobuf::RepeatedPtrField<std::string>* PROTOBUF_NONNULL mutable_destination_sids();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_destination_sids() const;
  ::google::protobuf::RepeatedPtrField<std::string>* PROTOBUF_NONNULL _internal_mutable_destination_sids();

  public:
  // repeated string destination_identities = 6;
  int destination_identities_size() const;
  private:
  int _internal_destination_identities_size() const;

  public:
  void clear_destination_identities() ;
  const std::string& destination_identities(int index) const;
  std::string* PROTOBUF_NONNULL mutable_destination_identities(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_destination_identities(int index, Arg_&& value, Args_... args);
  std::string* PROTOBUF_NONNULL add_destination_identities();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_destination_identities(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& destination_identities() const;
  ::google::protobuf::RepeatedPtrField<std::string>* PROTOBUF_NONNULL mutable_destination_identities();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_destination_identities() const;
  ::google::protobuf::RepeatedPtrField<std::string>* PROTOBUF_NONNULL _internal_mutable_destination_identities();

  public:
  // string room = 1;
  void clear_room() ;
  const std::string& room() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_room(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_room();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_room();
  void set_allocated_room(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_room() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_room(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_room();

  public:
  // bytes data = 2;
  void clear_data() ;
  const std::string& data() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_data(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_data();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_data();
  void set_allocated_data(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_data() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_data(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_data();

  public:
  // optional string topic = 5;
  bool has_topic() const;
  void clear_topic() ;
  const std::string& topic() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_topic(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_topic();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_topic();
  void set_allocated_topic(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_topic() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_topic(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_topic();

  public:
  // bytes nonce = 7;
  void clear_nonce() ;
  const std::string& nonce() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_nonce(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_nonce();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_nonce();
  void set_allocated_nonce(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_nonce() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_nonce(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_nonce();

  public:
  // .livekit.DataPacket.Kind kind = 3;
  void clear_kind() ;
  ::livekit::DataPacket_Kind kind() const;
  void set_kind(::livekit::DataPacket_Kind value);

  private:
  ::livekit::DataPacket_Kind _internal_kind() const;
  void _internal_set_kind(::livekit::DataPacket_Kind value);

  public:
  // @@protoc_insertion_point(class_scope:livekit.SendDataRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 7,
                                   0, 79,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const SendDataRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<std::string> destination_sids_;
    ::google::protobuf::RepeatedPtrField<std::string> destination_identities_;
    ::google::protobuf::internal::ArenaStringPtr room_;
    ::google::protobuf::internal::ArenaStringPtr data_;
    ::google::protobuf::internal::ArenaStringPtr topic_;
    ::google::protobuf::internal::ArenaStringPtr nonce_;
    int kind_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_livekit_5froom_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull SendDataRequest_class_data_;
// -------------------------------------------------------------------

class RoomParticipantIdentity final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:livekit.RoomParticipantIdentity) */ {
 public:
  inline RoomParticipantIdentity() : RoomParticipantIdentity(nullptr) {}
  ~RoomParticipantIdentity() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(RoomParticipantIdentity* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(RoomParticipantIdentity));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RoomParticipantIdentity(::google::protobuf::internal::ConstantInitialized);

  inline RoomParticipantIdentity(const RoomParticipantIdentity& from) : RoomParticipantIdentity(nullptr, from) {}
  inline RoomParticipantIdentity(RoomParticipantIdentity&& from) noexcept
      : RoomParticipantIdentity(nullptr, std::move(from)) {}
  inline RoomParticipantIdentity& operator=(const RoomParticipantIdentity& from) {
    CopyFrom(from);
    return *this;
  }
  inline RoomParticipantIdentity& operator=(RoomParticipantIdentity&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RoomParticipantIdentity& default_instance() {
    return *reinterpret_cast<const RoomParticipantIdentity*>(
        &_RoomParticipantIdentity_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(RoomParticipantIdentity& a, RoomParticipantIdentity& b) { a.Swap(&b); }
  inline void Swap(RoomParticipantIdentity* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RoomParticipantIdentity* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RoomParticipantIdentity* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<RoomParticipantIdentity>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RoomParticipantIdentity& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RoomParticipantIdentity& from) { RoomParticipantIdentity::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(RoomParticipantIdentity* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "livekit.RoomParticipantIdentity"; }

 protected:
  explicit RoomParticipantIdentity(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  RoomParticipantIdentity(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const RoomParticipantIdentity& from);
  RoomParticipantIdentity(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, RoomParticipantIdentity&& from) noexcept
      : RoomParticipantIdentity(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRoomFieldNumber = 1,
    kIdentityFieldNumber = 2,
  };
  // string room = 1;
  void clear_room() ;
  const std::string& room() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_room(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_room();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_room();
  void set_allocated_room(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_room() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_room(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_room();

  public:
  // string identity = 2;
  void clear_identity() ;
  const std::string& identity() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_identity(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_identity();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_identity();
  void set_allocated_identity(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_identity() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_identity(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_identity();

  public:
  // @@protoc_insertion_point(class_scope:livekit.RoomParticipantIdentity)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 52,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const RoomParticipantIdentity& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr room_;
    ::google::protobuf::internal::ArenaStringPtr identity_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_livekit_5froom_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull RoomParticipantIdentity_class_data_;
// -------------------------------------------------------------------

class RemoveParticipantResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:livekit.RemoveParticipantResponse) */ {
 public:
  inline RemoveParticipantResponse() : RemoveParticipantResponse(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(RemoveParticipantResponse* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(RemoveParticipantResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RemoveParticipantResponse(::google::protobuf::internal::ConstantInitialized);

  inline RemoveParticipantResponse(const RemoveParticipantResponse& from) : RemoveParticipantResponse(nullptr, from) {}
  inline RemoveParticipantResponse(RemoveParticipantResponse&& from) noexcept
      : RemoveParticipantResponse(nullptr, std::move(from)) {}
  inline RemoveParticipantResponse& operator=(const RemoveParticipantResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline RemoveParticipantResponse& operator=(RemoveParticipantResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RemoveParticipantResponse& default_instance() {
    return *reinterpret_cast<const RemoveParticipantResponse*>(
        &_RemoveParticipantResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(RemoveParticipantResponse& a, RemoveParticipantResponse& b) { a.Swap(&b); }
  inline void Swap(RemoveParticipantResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RemoveParticipantResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RemoveParticipantResponse* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<RemoveParticipantResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const RemoveParticipantResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const RemoveParticipantResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "livekit.RemoveParticipantResponse"; }

 protected:
  explicit RemoveParticipantResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  RemoveParticipantResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const RemoveParticipantResponse& from);
  RemoveParticipantResponse(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, RemoveParticipantResponse&& from) noexcept
      : RemoveParticipantResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:livekit.RemoveParticipantResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 0,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const RemoveParticipantResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_livekit_5froom_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull RemoveParticipantResponse_class_data_;
// -------------------------------------------------------------------

class MuteRoomTrackRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:livekit.MuteRoomTrackRequest) */ {
 public:
  inline MuteRoomTrackRequest() : MuteRoomTrackRequest(nullptr) {}
  ~MuteRoomTrackRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MuteRoomTrackRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MuteRoomTrackRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MuteRoomTrackRequest(::google::protobuf::internal::ConstantInitialized);

  inline MuteRoomTrackRequest(const MuteRoomTrackRequest& from) : MuteRoomTrackRequest(nullptr, from) {}
  inline MuteRoomTrackRequest(MuteRoomTrackRequest&& from) noexcept
      : MuteRoomTrackRequest(nullptr, std::move(from)) {}
  inline MuteRoomTrackRequest& operator=(const MuteRoomTrackRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline MuteRoomTrackRequest& operator=(MuteRoomTrackRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MuteRoomTrackRequest& default_instance() {
    return *reinterpret_cast<const MuteRoomTrackRequest*>(
        &_MuteRoomTrackRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 11;
  friend void swap(MuteRoomTrackRequest& a, MuteRoomTrackRequest& b) { a.Swap(&b); }
  inline void Swap(MuteRoomTrackRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MuteRoomTrackRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MuteRoomTrackRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MuteRoomTrackRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MuteRoomTrackRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MuteRoomTrackRequest& from) { MuteRoomTrackRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MuteRoomTrackRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "livekit.MuteRoomTrackRequest"; }

 protected:
  explicit MuteRoomTrackRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  MuteRoomTrackRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const MuteRoomTrackRequest& from);
  MuteRoomTrackRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, MuteRoomTrackRequest&& from) noexcept
      : MuteRoomTrackRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRoomFieldNumber = 1,
    kIdentityFieldNumber = 2,
    kTrackSidFieldNumber = 3,
    kMutedFieldNumber = 4,
  };
  // string room = 1;
  void clear_room() ;
  const std::string& room() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_room(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_room();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_room();
  void set_allocated_room(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_room() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_room(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_room();

  public:
  // string identity = 2;
  void clear_identity() ;
  const std::string& identity() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_identity(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_identity();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_identity();
  void set_allocated_identity(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_identity() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_identity(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_identity();

  public:
  // string track_sid = 3;
  void clear_track_sid() ;
  const std::string& track_sid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_track_sid(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_track_sid();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_track_sid();
  void set_allocated_track_sid(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_track_sid() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_track_sid(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_track_sid();

  public:
  // bool muted = 4;
  void clear_muted() ;
  bool muted() const;
  void set_muted(bool value);

  private:
  bool _internal_muted() const;
  void _internal_set_muted(bool value);

  public:
  // @@protoc_insertion_point(class_scope:livekit.MuteRoomTrackRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4,
                                   0, 58,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const MuteRoomTrackRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr room_;
    ::google::protobuf::internal::ArenaStringPtr identity_;
    ::google::protobuf::internal::ArenaStringPtr track_sid_;
    bool muted_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_livekit_5froom_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull MuteRoomTrackRequest_class_data_;
// -------------------------------------------------------------------

class ListRoomsRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:livekit.ListRoomsRequest) */ {
 public:
  inline ListRoomsRequest() : ListRoomsRequest(nullptr) {}
  ~ListRoomsRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ListRoomsRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ListRoomsRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListRoomsRequest(::google::protobuf::internal::ConstantInitialized);

  inline ListRoomsRequest(const ListRoomsRequest& from) : ListRoomsRequest(nullptr, from) {}
  inline ListRoomsRequest(ListRoomsRequest&& from) noexcept
      : ListRoomsRequest(nullptr, std::move(from)) {}
  inline ListRoomsRequest& operator=(const ListRoomsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListRoomsRequest& operator=(ListRoomsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListRoomsRequest& default_instance() {
    return *reinterpret_cast<const ListRoomsRequest*>(
        &_ListRoomsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(ListRoomsRequest& a, ListRoomsRequest& b) { a.Swap(&b); }
  inline void Swap(ListRoomsRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListRoomsRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListRoomsRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ListRoomsRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListRoomsRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListRoomsRequest& from) { ListRoomsRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ListRoomsRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "livekit.ListRoomsRequest"; }

 protected:
  explicit ListRoomsRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ListRoomsRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ListRoomsRequest& from);
  ListRoomsRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ListRoomsRequest&& from) noexcept
      : ListRoomsRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNamesFieldNumber = 1,
  };
  // repeated string names = 1;
  int names_size() const;
  private:
  int _internal_names_size() const;

  public:
  void clear_names() ;
  const std::string& names(int index) const;
  std::string* PROTOBUF_NONNULL mutable_names(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_names(int index, Arg_&& value, Args_... args);
  std::string* PROTOBUF_NONNULL add_names();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_names(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& names() const;
  ::google::protobuf::RepeatedPtrField<std::string>* PROTOBUF_NONNULL mutable_names();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_names() const;
  ::google::protobuf::RepeatedPtrField<std::string>* PROTOBUF_NONNULL _internal_mutable_names();

  public:
  // @@protoc_insertion_point(class_scope:livekit.ListRoomsRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   0, 38,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ListRoomsRequest& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> names_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_livekit_5froom_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ListRoomsRequest_class_data_;
// -------------------------------------------------------------------

class ListParticipantsRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:livekit.ListParticipantsRequest) */ {
 public:
  inline ListParticipantsRequest() : ListParticipantsRequest(nullptr) {}
  ~ListParticipantsRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ListParticipantsRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ListParticipantsRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListParticipantsRequest(::google::protobuf::internal::ConstantInitialized);

  inline ListParticipantsRequest(const ListParticipantsRequest& from) : ListParticipantsRequest(nullptr, from) {}
  inline ListParticipantsRequest(ListParticipantsRequest&& from) noexcept
      : ListParticipantsRequest(nullptr, std::move(from)) {}
  inline ListParticipantsRequest& operator=(const ListParticipantsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListParticipantsRequest& operator=(ListParticipantsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListParticipantsRequest& default_instance() {
    return *reinterpret_cast<const ListParticipantsRequest*>(
        &_ListParticipantsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(ListParticipantsRequest& a, ListParticipantsRequest& b) { a.Swap(&b); }
  inline void Swap(ListParticipantsRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListParticipantsRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListParticipantsRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ListParticipantsRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListParticipantsRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListParticipantsRequest& from) { ListParticipantsRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ListParticipantsRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "livekit.ListParticipantsRequest"; }

 protected:
  explicit ListParticipantsRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ListParticipantsRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ListParticipantsRequest& from);
  ListParticipantsRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ListParticipantsRequest&& from) noexcept
      : ListParticipantsRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRoomFieldNumber = 1,
  };
  // string room = 1;
  void clear_room() ;
  const std::string& room() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_room(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_room();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_room();
  void set_allocated_room(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_room() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_room(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_room();

  public:
  // @@protoc_insertion_point(class_scope:livekit.ListParticipantsRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   0, 44,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ListParticipantsRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr room_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_livekit_5froom_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ListParticipantsRequest_class_data_;
// -------------------------------------------------------------------

class ForwardParticipantResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:livekit.ForwardParticipantResponse) */ {
 public:
  inline ForwardParticipantResponse() : ForwardParticipantResponse(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ForwardParticipantResponse* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ForwardParticipantResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ForwardParticipantResponse(::google::protobuf::internal::ConstantInitialized);

  inline ForwardParticipantResponse(const ForwardParticipantResponse& from) : ForwardParticipantResponse(nullptr, from) {}
  inline ForwardParticipantResponse(ForwardParticipantResponse&& from) noexcept
      : ForwardParticipantResponse(nullptr, std::move(from)) {}
  inline ForwardParticipantResponse& operator=(const ForwardParticipantResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ForwardParticipantResponse& operator=(ForwardParticipantResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ForwardParticipantResponse& default_instance() {
    return *reinterpret_cast<const ForwardParticipantResponse*>(
        &_ForwardParticipantResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 22;
  friend void swap(ForwardParticipantResponse& a, ForwardParticipantResponse& b) { a.Swap(&b); }
  inline void Swap(ForwardParticipantResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ForwardParticipantResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ForwardParticipantResponse* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<ForwardParticipantResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const ForwardParticipantResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const ForwardParticipantResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "livekit.ForwardParticipantResponse"; }

 protected:
  explicit ForwardParticipantResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ForwardParticipantResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ForwardParticipantResponse& from);
  ForwardParticipantResponse(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ForwardParticipantResponse&& from) noexcept
      : ForwardParticipantResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:livekit.ForwardParticipantResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 0,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ForwardParticipantResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_livekit_5froom_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ForwardParticipantResponse_class_data_;
// -------------------------------------------------------------------

class ForwardParticipantRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:livekit.ForwardParticipantRequest) */ {
 public:
  inline ForwardParticipantRequest() : ForwardParticipantRequest(nullptr) {}
  ~ForwardParticipantRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ForwardParticipantRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ForwardParticipantRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ForwardParticipantRequest(::google::protobuf::internal::ConstantInitialized);

  inline ForwardParticipantRequest(const ForwardParticipantRequest& from) : ForwardParticipantRequest(nullptr, from) {}
  inline ForwardParticipantRequest(ForwardParticipantRequest&& from) noexcept
      : ForwardParticipantRequest(nullptr, std::move(from)) {}
  inline ForwardParticipantRequest& operator=(const ForwardParticipantRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ForwardParticipantRequest& operator=(ForwardParticipantRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ForwardParticipantRequest& default_instance() {
    return *reinterpret_cast<const ForwardParticipantRequest*>(
        &_ForwardParticipantRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 21;
  friend void swap(ForwardParticipantRequest& a, ForwardParticipantRequest& b) { a.Swap(&b); }
  inline void Swap(ForwardParticipantRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ForwardParticipantRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ForwardParticipantRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ForwardParticipantRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ForwardParticipantRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ForwardParticipantRequest& from) { ForwardParticipantRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ForwardParticipantRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "livekit.ForwardParticipantRequest"; }

 protected:
  explicit ForwardParticipantRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ForwardParticipantRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ForwardParticipantRequest& from);
  ForwardParticipantRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ForwardParticipantRequest&& from) noexcept
      : ForwardParticipantRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRoomFieldNumber = 1,
    kIdentityFieldNumber = 2,
    kDestinationRoomFieldNumber = 3,
  };
  // string room = 1;
  void clear_room() ;
  const std::string& room() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_room(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_room();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_room();
  void set_allocated_room(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_room() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_room(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_room();

  public:
  // string identity = 2;
  void clear_identity() ;
  const std::string& identity() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_identity(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_identity();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_identity();
  void set_allocated_identity(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_identity() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_identity(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_identity();

  public:
  // string destination_room = 3;
  void clear_destination_room() ;
  const std::string& destination_room() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_destination_room(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_destination_room();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_destination_room();
  void set_allocated_destination_room(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_destination_room() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_destination_room(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_destination_room();

  public:
  // @@protoc_insertion_point(class_scope:livekit.ForwardParticipantRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   0, 70,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ForwardParticipantRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr room_;
    ::google::protobuf::internal::ArenaStringPtr identity_;
    ::google::protobuf::internal::ArenaStringPtr destination_room_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_livekit_5froom_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ForwardParticipantRequest_class_data_;
// -------------------------------------------------------------------

class DeleteRoomResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:livekit.DeleteRoomResponse) */ {
 public:
  inline DeleteRoomResponse() : DeleteRoomResponse(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DeleteRoomResponse* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DeleteRoomResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DeleteRoomResponse(::google::protobuf::internal::ConstantInitialized);

  inline DeleteRoomResponse(const DeleteRoomResponse& from) : DeleteRoomResponse(nullptr, from) {}
  inline DeleteRoomResponse(DeleteRoomResponse&& from) noexcept
      : DeleteRoomResponse(nullptr, std::move(from)) {}
  inline DeleteRoomResponse& operator=(const DeleteRoomResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeleteRoomResponse& operator=(DeleteRoomResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeleteRoomResponse& default_instance() {
    return *reinterpret_cast<const DeleteRoomResponse*>(
        &_DeleteRoomResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(DeleteRoomResponse& a, DeleteRoomResponse& b) { a.Swap(&b); }
  inline void Swap(DeleteRoomResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeleteRoomResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeleteRoomResponse* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<DeleteRoomResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const DeleteRoomResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const DeleteRoomResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "livekit.DeleteRoomResponse"; }

 protected:
  explicit DeleteRoomResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  DeleteRoomResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const DeleteRoomResponse& from);
  DeleteRoomResponse(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, DeleteRoomResponse&& from) noexcept
      : DeleteRoomResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:livekit.DeleteRoomResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 0,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const DeleteRoomResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_livekit_5froom_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull DeleteRoomResponse_class_data_;
// -------------------------------------------------------------------

class DeleteRoomRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:livekit.DeleteRoomRequest) */ {
 public:
  inline DeleteRoomRequest() : DeleteRoomRequest(nullptr) {}
  ~DeleteRoomRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DeleteRoomRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DeleteRoomRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DeleteRoomRequest(::google::protobuf::internal::ConstantInitialized);

  inline DeleteRoomRequest(const DeleteRoomRequest& from) : DeleteRoomRequest(nullptr, from) {}
  inline DeleteRoomRequest(DeleteRoomRequest&& from) noexcept
      : DeleteRoomRequest(nullptr, std::move(from)) {}
  inline DeleteRoomRequest& operator=(const DeleteRoomRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeleteRoomRequest& operator=(DeleteRoomRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeleteRoomRequest& default_instance() {
    return *reinterpret_cast<const DeleteRoomRequest*>(
        &_DeleteRoomRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(DeleteRoomRequest& a, DeleteRoomRequest& b) { a.Swap(&b); }
  inline void Swap(DeleteRoomRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeleteRoomRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeleteRoomRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<DeleteRoomRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DeleteRoomRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DeleteRoomRequest& from) { DeleteRoomRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(DeleteRoomRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "livekit.DeleteRoomRequest"; }

 protected:
  explicit DeleteRoomRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  DeleteRoomRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const DeleteRoomRequest& from);
  DeleteRoomRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, DeleteRoomRequest&& from) noexcept
      : DeleteRoomRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRoomFieldNumber = 1,
  };
  // string room = 1;
  void clear_room() ;
  const std::string& room() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_room(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_room();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_room();
  void set_allocated_room(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_room() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_room(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_room();

  public:
  // @@protoc_insertion_point(class_scope:livekit.DeleteRoomRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   0, 38,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const DeleteRoomRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr room_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_livekit_5froom_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull DeleteRoomRequest_class_data_;
// -------------------------------------------------------------------

class UpdateSubscriptionsRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:livekit.UpdateSubscriptionsRequest) */ {
 public:
  inline UpdateSubscriptionsRequest() : UpdateSubscriptionsRequest(nullptr) {}
  ~UpdateSubscriptionsRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(UpdateSubscriptionsRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(UpdateSubscriptionsRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateSubscriptionsRequest(::google::protobuf::internal::ConstantInitialized);

  inline UpdateSubscriptionsRequest(const UpdateSubscriptionsRequest& from) : UpdateSubscriptionsRequest(nullptr, from) {}
  inline UpdateSubscriptionsRequest(UpdateSubscriptionsRequest&& from) noexcept
      : UpdateSubscriptionsRequest(nullptr, std::move(from)) {}
  inline UpdateSubscriptionsRequest& operator=(const UpdateSubscriptionsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateSubscriptionsRequest& operator=(UpdateSubscriptionsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateSubscriptionsRequest& default_instance() {
    return *reinterpret_cast<const UpdateSubscriptionsRequest*>(
        &_UpdateSubscriptionsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 15;
  friend void swap(UpdateSubscriptionsRequest& a, UpdateSubscriptionsRequest& b) { a.Swap(&b); }
  inline void Swap(UpdateSubscriptionsRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateSubscriptionsRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateSubscriptionsRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<UpdateSubscriptionsRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UpdateSubscriptionsRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UpdateSubscriptionsRequest& from) { UpdateSubscriptionsRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(UpdateSubscriptionsRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "livekit.UpdateSubscriptionsRequest"; }

 protected:
  explicit UpdateSubscriptionsRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  UpdateSubscriptionsRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const UpdateSubscriptionsRequest& from);
  UpdateSubscriptionsRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, UpdateSubscriptionsRequest&& from) noexcept
      : UpdateSubscriptionsRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTrackSidsFieldNumber = 3,
    kParticipantTracksFieldNumber = 5,
    kRoomFieldNumber = 1,
    kIdentityFieldNumber = 2,
    kSubscribeFieldNumber = 4,
  };
  // repeated string track_sids = 3;
  int track_sids_size() const;
  private:
  int _internal_track_sids_size() const;

  public:
  void clear_track_sids() ;
  const std::string& track_sids(int index) const;
  std::string* PROTOBUF_NONNULL mutable_track_sids(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_track_sids(int index, Arg_&& value, Args_... args);
  std::string* PROTOBUF_NONNULL add_track_sids();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_track_sids(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& track_sids() const;
  ::google::protobuf::RepeatedPtrField<std::string>* PROTOBUF_NONNULL mutable_track_sids();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_track_sids() const;
  ::google::protobuf::RepeatedPtrField<std::string>* PROTOBUF_NONNULL _internal_mutable_track_sids();

  public:
  // repeated .livekit.ParticipantTracks participant_tracks = 5;
  int participant_tracks_size() const;
  private:
  int _internal_participant_tracks_size() const;

  public:
  void clear_participant_tracks() ;
  ::livekit::ParticipantTracks* PROTOBUF_NONNULL mutable_participant_tracks(int index);
  ::google::protobuf::RepeatedPtrField<::livekit::ParticipantTracks>* PROTOBUF_NONNULL mutable_participant_tracks();

  private:
  const ::google::protobuf::RepeatedPtrField<::livekit::ParticipantTracks>& _internal_participant_tracks() const;
  ::google::protobuf::RepeatedPtrField<::livekit::ParticipantTracks>* PROTOBUF_NONNULL _internal_mutable_participant_tracks();
  public:
  const ::livekit::ParticipantTracks& participant_tracks(int index) const;
  ::livekit::ParticipantTracks* PROTOBUF_NONNULL add_participant_tracks();
  const ::google::protobuf::RepeatedPtrField<::livekit::ParticipantTracks>& participant_tracks() const;
  // string room = 1;
  void clear_room() ;
  const std::string& room() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_room(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_room();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_room();
  void set_allocated_room(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_room() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_room(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_room();

  public:
  // string identity = 2;
  void clear_identity() ;
  const std::string& identity() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_identity(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_identity();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_identity();
  void set_allocated_identity(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_identity() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_identity(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_identity();

  public:
  // bool subscribe = 4;
  void clear_subscribe() ;
  bool subscribe() const;
  void set_subscribe(bool value);

  private:
  bool _internal_subscribe() const;
  void _internal_set_subscribe(bool value);

  public:
  // @@protoc_insertion_point(class_scope:livekit.UpdateSubscriptionsRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 5,
                                   1, 65,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const UpdateSubscriptionsRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<std::string> track_sids_;
    ::google::protobuf::RepeatedPtrField< ::livekit::ParticipantTracks > participant_tracks_;
    ::google::protobuf::internal::ArenaStringPtr room_;
    ::google::protobuf::internal::ArenaStringPtr identity_;
    bool subscribe_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_livekit_5froom_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull UpdateSubscriptionsRequest_class_data_;
// -------------------------------------------------------------------

class UpdateParticipantRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:livekit.UpdateParticipantRequest) */ {
 public:
  inline UpdateParticipantRequest() : UpdateParticipantRequest(nullptr) {}
  ~UpdateParticipantRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(UpdateParticipantRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(UpdateParticipantRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateParticipantRequest(::google::protobuf::internal::ConstantInitialized);

  inline UpdateParticipantRequest(const UpdateParticipantRequest& from) : UpdateParticipantRequest(nullptr, from) {}
  inline UpdateParticipantRequest(UpdateParticipantRequest&& from) noexcept
      : UpdateParticipantRequest(nullptr, std::move(from)) {}
  inline UpdateParticipantRequest& operator=(const UpdateParticipantRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateParticipantRequest& operator=(UpdateParticipantRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateParticipantRequest& default_instance() {
    return *reinterpret_cast<const UpdateParticipantRequest*>(
        &_UpdateParticipantRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 14;
  friend void swap(UpdateParticipantRequest& a, UpdateParticipantRequest& b) { a.Swap(&b); }
  inline void Swap(UpdateParticipantRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateParticipantRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateParticipantRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<UpdateParticipantRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UpdateParticipantRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UpdateParticipantRequest& from) { UpdateParticipantRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(UpdateParticipantRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "livekit.UpdateParticipantRequest"; }

 protected:
  explicit UpdateParticipantRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  UpdateParticipantRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const UpdateParticipantRequest& from);
  UpdateParticipantRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, UpdateParticipantRequest&& from) noexcept
      : UpdateParticipantRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAttributesFieldNumber = 6,
    kRoomFieldNumber = 1,
    kIdentityFieldNumber = 2,
    kMetadataFieldNumber = 3,
    kNameFieldNumber = 5,
    kPermissionFieldNumber = 4,
  };
  // map<string, string> attributes = 6;
  int attributes_size() const;
  private:
  int _internal_attributes_size() const;

  public:
  void clear_attributes() ;
  const ::google::protobuf::Map<std::string, std::string>& attributes() const;
  ::google::protobuf::Map<std::string, std::string>* PROTOBUF_NONNULL mutable_attributes();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_attributes() const;
  ::google::protobuf::Map<std::string, std::string>* PROTOBUF_NONNULL _internal_mutable_attributes();

  public:
  // string room = 1;
  void clear_room() ;
  const std::string& room() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_room(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_room();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_room();
  void set_allocated_room(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_room() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_room(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_room();

  public:
  // string identity = 2;
  void clear_identity() ;
  const std::string& identity() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_identity(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_identity();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_identity();
  void set_allocated_identity(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_identity() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_identity(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_identity();

  public:
  // string metadata = 3;
  void clear_metadata() ;
  const std::string& metadata() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_metadata(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_metadata();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_metadata();
  void set_allocated_metadata(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_metadata() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_metadata(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_metadata();

  public:
  // string name = 5;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_name();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_name();
  void set_allocated_name(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_name() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_name(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_name();

  public:
  // .livekit.ParticipantPermission permission = 4;
  bool has_permission() const;
  void clear_permission() ;
  const ::livekit::ParticipantPermission& permission() const;
  [[nodiscard]] ::livekit::ParticipantPermission* PROTOBUF_NULLABLE release_permission();
  ::livekit::ParticipantPermission* PROTOBUF_NONNULL mutable_permission();
  void set_allocated_permission(::livekit::ParticipantPermission* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_permission(::livekit::ParticipantPermission* PROTOBUF_NULLABLE value);
  ::livekit::ParticipantPermission* PROTOBUF_NULLABLE unsafe_arena_release_permission();

  private:
  const ::livekit::ParticipantPermission& _internal_permission() const;
  ::livekit::ParticipantPermission* PROTOBUF_NONNULL _internal_mutable_permission();

  public:
  // @@protoc_insertion_point(class_scope:livekit.UpdateParticipantRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 6,
                                   2, 75,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const UpdateParticipantRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::MapField<UpdateParticipantRequest_AttributesEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        attributes_;
    ::google::protobuf::internal::ArenaStringPtr room_;
    ::google::protobuf::internal::ArenaStringPtr identity_;
    ::google::protobuf::internal::ArenaStringPtr metadata_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::livekit::ParticipantPermission* PROTOBUF_NULLABLE permission_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_livekit_5froom_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull UpdateParticipantRequest_class_data_;
// -------------------------------------------------------------------

class RoomAgent final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:livekit.RoomAgent) */ {
 public:
  inline RoomAgent() : RoomAgent(nullptr) {}
  ~RoomAgent() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(RoomAgent* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(RoomAgent));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RoomAgent(::google::protobuf::internal::ConstantInitialized);

  inline RoomAgent(const RoomAgent& from) : RoomAgent(nullptr, from) {}
  inline RoomAgent(RoomAgent&& from) noexcept
      : RoomAgent(nullptr, std::move(from)) {}
  inline RoomAgent& operator=(const RoomAgent& from) {
    CopyFrom(from);
    return *this;
  }
  inline RoomAgent& operator=(RoomAgent&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RoomAgent& default_instance() {
    return *reinterpret_cast<const RoomAgent*>(
        &_RoomAgent_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(RoomAgent& a, RoomAgent& b) { a.Swap(&b); }
  inline void Swap(RoomAgent* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RoomAgent* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RoomAgent* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<RoomAgent>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RoomAgent& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RoomAgent& from) { RoomAgent::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(RoomAgent* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "livekit.RoomAgent"; }

 protected:
  explicit RoomAgent(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  RoomAgent(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const RoomAgent& from);
  RoomAgent(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, RoomAgent&& from) noexcept
      : RoomAgent(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDispatchesFieldNumber = 1,
  };
  // repeated .livekit.RoomAgentDispatch dispatches = 1;
  int dispatches_size() const;
  private:
  int _internal_dispatches_size() const;

  public:
  void clear_dispatches() ;
  ::livekit::RoomAgentDispatch* PROTOBUF_NONNULL mutable_dispatches(int index);
  ::google::protobuf::RepeatedPtrField<::livekit::RoomAgentDispatch>* PROTOBUF_NONNULL mutable_dispatches();

  private:
  const ::google::protobuf::RepeatedPtrField<::livekit::RoomAgentDispatch>& _internal_dispatches() const;
  ::google::protobuf::RepeatedPtrField<::livekit::RoomAgentDispatch>* PROTOBUF_NONNULL _internal_mutable_dispatches();
  public:
  const ::livekit::RoomAgentDispatch& dispatches(int index) const;
  ::livekit::RoomAgentDispatch* PROTOBUF_NONNULL add_dispatches();
  const ::google::protobuf::RepeatedPtrField<::livekit::RoomAgentDispatch>& dispatches() const;
  // @@protoc_insertion_point(class_scope:livekit.RoomAgent)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   1, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const RoomAgent& from_msg);
    ::google::protobuf::RepeatedPtrField< ::livekit::RoomAgentDispatch > dispatches_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_livekit_5froom_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull RoomAgent_class_data_;
// -------------------------------------------------------------------

class ListRoomsResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:livekit.ListRoomsResponse) */ {
 public:
  inline ListRoomsResponse() : ListRoomsResponse(nullptr) {}
  ~ListRoomsResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ListRoomsResponse* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ListRoomsResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListRoomsResponse(::google::protobuf::internal::ConstantInitialized);

  inline ListRoomsResponse(const ListRoomsResponse& from) : ListRoomsResponse(nullptr, from) {}
  inline ListRoomsResponse(ListRoomsResponse&& from) noexcept
      : ListRoomsResponse(nullptr, std::move(from)) {}
  inline ListRoomsResponse& operator=(const ListRoomsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListRoomsResponse& operator=(ListRoomsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListRoomsResponse& default_instance() {
    return *reinterpret_cast<const ListRoomsResponse*>(
        &_ListRoomsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(ListRoomsResponse& a, ListRoomsResponse& b) { a.Swap(&b); }
  inline void Swap(ListRoomsResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListRoomsResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListRoomsResponse* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ListRoomsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListRoomsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListRoomsResponse& from) { ListRoomsResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ListRoomsResponse* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "livekit.ListRoomsResponse"; }

 protected:
  explicit ListRoomsResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ListRoomsResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ListRoomsResponse& from);
  ListRoomsResponse(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ListRoomsResponse&& from) noexcept
      : ListRoomsResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRoomsFieldNumber = 1,
  };
  // repeated .livekit.Room rooms = 1;
  int rooms_size() const;
  private:
  int _internal_rooms_size() const;

  public:
  void clear_rooms() ;
  ::livekit::Room* PROTOBUF_NONNULL mutable_rooms(int index);
  ::google::protobuf::RepeatedPtrField<::livekit::Room>* PROTOBUF_NONNULL mutable_rooms();

  private:
  const ::google::protobuf::RepeatedPtrField<::livekit::Room>& _internal_rooms() const;
  ::google::protobuf::RepeatedPtrField<::livekit::Room>* PROTOBUF_NONNULL _internal_mutable_rooms();
  public:
  const ::livekit::Room& rooms(int index) const;
  ::livekit::Room* PROTOBUF_NONNULL add_rooms();
  const ::google::protobuf::RepeatedPtrField<::livekit::Room>& rooms() const;
  // @@protoc_insertion_point(class_scope:livekit.ListRoomsResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   1, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ListRoomsResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::livekit::Room > rooms_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_livekit_5froom_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ListRoomsResponse_class_data_;
// -------------------------------------------------------------------

class MuteRoomTrackResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:livekit.MuteRoomTrackResponse) */ {
 public:
  inline MuteRoomTrackResponse() : MuteRoomTrackResponse(nullptr) {}
  ~MuteRoomTrackResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MuteRoomTrackResponse* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MuteRoomTrackResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MuteRoomTrackResponse(::google::protobuf::internal::ConstantInitialized);

  inline MuteRoomTrackResponse(const MuteRoomTrackResponse& from) : MuteRoomTrackResponse(nullptr, from) {}
  inline MuteRoomTrackResponse(MuteRoomTrackResponse&& from) noexcept
      : MuteRoomTrackResponse(nullptr, std::move(from)) {}
  inline MuteRoomTrackResponse& operator=(const MuteRoomTrackResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MuteRoomTrackResponse& operator=(MuteRoomTrackResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MuteRoomTrackResponse& default_instance() {
    return *reinterpret_cast<const MuteRoomTrackResponse*>(
        &_MuteRoomTrackResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 12;
  friend void swap(MuteRoomTrackResponse& a, MuteRoomTrackResponse& b) { a.Swap(&b); }
  inline void Swap(MuteRoomTrackResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MuteRoomTrackResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MuteRoomTrackResponse* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MuteRoomTrackResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MuteRoomTrackResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MuteRoomTrackResponse& from) { MuteRoomTrackResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MuteRoomTrackResponse* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "livekit.MuteRoomTrackResponse"; }

 protected:
  explicit MuteRoomTrackResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  MuteRoomTrackResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const MuteRoomTrackResponse& from);
  MuteRoomTrackResponse(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, MuteRoomTrackResponse&& from) noexcept
      : MuteRoomTrackResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTrackFieldNumber = 1,
  };
  // .livekit.TrackInfo track = 1;
  bool has_track() const;
  void clear_track() ;
  const ::livekit::TrackInfo& track() const;
  [[nodiscard]] ::livekit::TrackInfo* PROTOBUF_NULLABLE release_track();
  ::livekit::TrackInfo* PROTOBUF_NONNULL mutable_track();
  void set_allocated_track(::livekit::TrackInfo* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_track(::livekit::TrackInfo* PROTOBUF_NULLABLE value);
  ::livekit::TrackInfo* PROTOBUF_NULLABLE unsafe_arena_release_track();

  private:
  const ::livekit::TrackInfo& _internal_track() const;
  ::livekit::TrackInfo* PROTOBUF_NONNULL _internal_mutable_track();

  public:
  // @@protoc_insertion_point(class_scope:livekit.MuteRoomTrackResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   1, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const MuteRoomTrackResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::livekit::TrackInfo* PROTOBUF_NULLABLE track_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_livekit_5froom_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull MuteRoomTrackResponse_class_data_;
// -------------------------------------------------------------------

class RoomEgress final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:livekit.RoomEgress) */ {
 public:
  inline RoomEgress() : RoomEgress(nullptr) {}
  ~RoomEgress() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(RoomEgress* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(RoomEgress));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RoomEgress(::google::protobuf::internal::ConstantInitialized);

  inline RoomEgress(const RoomEgress& from) : RoomEgress(nullptr, from) {}
  inline RoomEgress(RoomEgress&& from) noexcept
      : RoomEgress(nullptr, std::move(from)) {}
  inline RoomEgress& operator=(const RoomEgress& from) {
    CopyFrom(from);
    return *this;
  }
  inline RoomEgress& operator=(RoomEgress&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RoomEgress& default_instance() {
    return *reinterpret_cast<const RoomEgress*>(
        &_RoomEgress_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(RoomEgress& a, RoomEgress& b) { a.Swap(&b); }
  inline void Swap(RoomEgress* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RoomEgress* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RoomEgress* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<RoomEgress>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RoomEgress& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RoomEgress& from) { RoomEgress::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(RoomEgress* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "livekit.RoomEgress"; }

 protected:
  explicit RoomEgress(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  RoomEgress(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const RoomEgress& from);
  RoomEgress(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, RoomEgress&& from) noexcept
      : RoomEgress(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRoomFieldNumber = 1,
    kTracksFieldNumber = 2,
    kParticipantFieldNumber = 3,
  };
  // .livekit.RoomCompositeEgressRequest room = 1;
  bool has_room() const;
  void clear_room() ;
  const ::livekit::RoomCompositeEgressRequest& room() const;
  [[nodiscard]] ::livekit::RoomCompositeEgressRequest* PROTOBUF_NULLABLE release_room();
  ::livekit::RoomCompositeEgressRequest* PROTOBUF_NONNULL mutable_room();
  void set_allocated_room(::livekit::RoomCompositeEgressRequest* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_room(::livekit::RoomCompositeEgressRequest* PROTOBUF_NULLABLE value);
  ::livekit::RoomCompositeEgressRequest* PROTOBUF_NULLABLE unsafe_arena_release_room();

  private:
  const ::livekit::RoomCompositeEgressRequest& _internal_room() const;
  ::livekit::RoomCompositeEgressRequest* PROTOBUF_NONNULL _internal_mutable_room();

  public:
  // .livekit.AutoTrackEgress tracks = 2;
  bool has_tracks() const;
  void clear_tracks() ;
  const ::livekit::AutoTrackEgress& tracks() const;
  [[nodiscard]] ::livekit::AutoTrackEgress* PROTOBUF_NULLABLE release_tracks();
  ::livekit::AutoTrackEgress* PROTOBUF_NONNULL mutable_tracks();
  void set_allocated_tracks(::livekit::AutoTrackEgress* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_tracks(::livekit::AutoTrackEgress* PROTOBUF_NULLABLE value);
  ::livekit::AutoTrackEgress* PROTOBUF_NULLABLE unsafe_arena_release_tracks();

  private:
  const ::livekit::AutoTrackEgress& _internal_tracks() const;
  ::livekit::AutoTrackEgress* PROTOBUF_NONNULL _internal_mutable_tracks();

  public:
  // .livekit.AutoParticipantEgress participant = 3;
  bool has_participant() const;
  void clear_participant() ;
  const ::livekit::AutoParticipantEgress& participant() const;
  [[nodiscard]] ::livekit::AutoParticipantEgress* PROTOBUF_NULLABLE release_participant();
  ::livekit::AutoParticipantEgress* PROTOBUF_NONNULL mutable_participant();
  void set_allocated_participant(::livekit::AutoParticipantEgress* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_participant(::livekit::AutoParticipantEgress* PROTOBUF_NULLABLE value);
  ::livekit::AutoParticipantEgress* PROTOBUF_NULLABLE unsafe_arena_release_participant();

  private:
  const ::livekit::AutoParticipantEgress& _internal_participant() const;
  ::livekit::AutoParticipantEgress* PROTOBUF_NONNULL _internal_mutable_participant();

  public:
  // @@protoc_insertion_point(class_scope:livekit.RoomEgress)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   3, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const RoomEgress& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::livekit::RoomCompositeEgressRequest* PROTOBUF_NULLABLE room_;
    ::livekit::AutoTrackEgress* PROTOBUF_NULLABLE tracks_;
    ::livekit::AutoParticipantEgress* PROTOBUF_NULLABLE participant_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_livekit_5froom_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull RoomEgress_class_data_;
// -------------------------------------------------------------------

class ListParticipantsResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:livekit.ListParticipantsResponse) */ {
 public:
  inline ListParticipantsResponse() : ListParticipantsResponse(nullptr) {}
  ~ListParticipantsResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ListParticipantsResponse* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ListParticipantsResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListParticipantsResponse(::google::protobuf::internal::ConstantInitialized);

  inline ListParticipantsResponse(const ListParticipantsResponse& from) : ListParticipantsResponse(nullptr, from) {}
  inline ListParticipantsResponse(ListParticipantsResponse&& from) noexcept
      : ListParticipantsResponse(nullptr, std::move(from)) {}
  inline ListParticipantsResponse& operator=(const ListParticipantsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListParticipantsResponse& operator=(ListParticipantsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListParticipantsResponse& default_instance() {
    return *reinterpret_cast<const ListParticipantsResponse*>(
        &_ListParticipantsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(ListParticipantsResponse& a, ListParticipantsResponse& b) { a.Swap(&b); }
  inline void Swap(ListParticipantsResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListParticipantsResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListParticipantsResponse* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ListParticipantsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListParticipantsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListParticipantsResponse& from) { ListParticipantsResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ListParticipantsResponse* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "livekit.ListParticipantsResponse"; }

 protected:
  explicit ListParticipantsResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ListParticipantsResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ListParticipantsResponse& from);
  ListParticipantsResponse(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ListParticipantsResponse&& from) noexcept
      : ListParticipantsResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kParticipantsFieldNumber = 1,
  };
  // repeated .livekit.ParticipantInfo participants = 1;
  int participants_size() const;
  private:
  int _internal_participants_size() const;

  public:
  void clear_participants() ;
  ::livekit::ParticipantInfo* PROTOBUF_NONNULL mutable_participants(int index);
  ::google::protobuf::RepeatedPtrField<::livekit::ParticipantInfo>* PROTOBUF_NONNULL mutable_participants();

  private:
  const ::google::protobuf::RepeatedPtrField<::livekit::ParticipantInfo>& _internal_participants() const;
  ::google::protobuf::RepeatedPtrField<::livekit::ParticipantInfo>* PROTOBUF_NONNULL _internal_mutable_participants();
  public:
  const ::livekit::ParticipantInfo& participants(int index) const;
  ::livekit::ParticipantInfo* PROTOBUF_NONNULL add_participants();
  const ::google::protobuf::RepeatedPtrField<::livekit::ParticipantInfo>& participants() const;
  // @@protoc_insertion_point(class_scope:livekit.ListParticipantsResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   1, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ListParticipantsResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::livekit::ParticipantInfo > participants_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_livekit_5froom_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ListParticipantsResponse_class_data_;
// -------------------------------------------------------------------

class RoomConfiguration final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:livekit.RoomConfiguration) */ {
 public:
  inline RoomConfiguration() : RoomConfiguration(nullptr) {}
  ~RoomConfiguration() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(RoomConfiguration* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(RoomConfiguration));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RoomConfiguration(::google::protobuf::internal::ConstantInitialized);

  inline RoomConfiguration(const RoomConfiguration& from) : RoomConfiguration(nullptr, from) {}
  inline RoomConfiguration(RoomConfiguration&& from) noexcept
      : RoomConfiguration(nullptr, std::move(from)) {}
  inline RoomConfiguration& operator=(const RoomConfiguration& from) {
    CopyFrom(from);
    return *this;
  }
  inline RoomConfiguration& operator=(RoomConfiguration&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RoomConfiguration& default_instance() {
    return *reinterpret_cast<const RoomConfiguration*>(
        &_RoomConfiguration_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 20;
  friend void swap(RoomConfiguration& a, RoomConfiguration& b) { a.Swap(&b); }
  inline void Swap(RoomConfiguration* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RoomConfiguration* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RoomConfiguration* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<RoomConfiguration>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RoomConfiguration& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RoomConfiguration& from) { RoomConfiguration::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(RoomConfiguration* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "livekit.RoomConfiguration"; }

 protected:
  explicit RoomConfiguration(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  RoomConfiguration(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const RoomConfiguration& from);
  RoomConfiguration(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, RoomConfiguration&& from) noexcept
      : RoomConfiguration(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAgentsFieldNumber = 10,
    kNameFieldNumber = 1,
    kEgressFieldNumber = 5,
    kEmptyTimeoutFieldNumber = 2,
    kDepartureTimeoutFieldNumber = 3,
    kMaxParticipantsFieldNumber = 4,
    kMinPlayoutDelayFieldNumber = 7,
    kMaxPlayoutDelayFieldNumber = 8,
    kSyncStreamsFieldNumber = 9,
  };
  // repeated .livekit.RoomAgentDispatch agents = 10;
  int agents_size() const;
  private:
  int _internal_agents_size() const;

  public:
  void clear_agents() ;
  ::livekit::RoomAgentDispatch* PROTOBUF_NONNULL mutable_agents(int index);
  ::google::protobuf::RepeatedPtrField<::livekit::RoomAgentDispatch>* PROTOBUF_NONNULL mutable_agents();

  private:
  const ::google::protobuf::RepeatedPtrField<::livekit::RoomAgentDispatch>& _internal_agents() const;
  ::google::protobuf::RepeatedPtrField<::livekit::RoomAgentDispatch>* PROTOBUF_NONNULL _internal_mutable_agents();
  public:
  const ::livekit::RoomAgentDispatch& agents(int index) const;
  ::livekit::RoomAgentDispatch* PROTOBUF_NONNULL add_agents();
  const ::google::protobuf::RepeatedPtrField<::livekit::RoomAgentDispatch>& agents() const;
  // string name = 1;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_name();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_name();
  void set_allocated_name(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_name() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_name(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_name();

  public:
  // .livekit.RoomEgress egress = 5;
  bool has_egress() const;
  void clear_egress() ;
  const ::livekit::RoomEgress& egress() const;
  [[nodiscard]] ::livekit::RoomEgress* PROTOBUF_NULLABLE release_egress();
  ::livekit::RoomEgress* PROTOBUF_NONNULL mutable_egress();
  void set_allocated_egress(::livekit::RoomEgress* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_egress(::livekit::RoomEgress* PROTOBUF_NULLABLE value);
  ::livekit::RoomEgress* PROTOBUF_NULLABLE unsafe_arena_release_egress();

  private:
  const ::livekit::RoomEgress& _internal_egress() const;
  ::livekit::RoomEgress* PROTOBUF_NONNULL _internal_mutable_egress();

  public:
  // uint32 empty_timeout = 2;
  void clear_empty_timeout() ;
  ::uint32_t empty_timeout() const;
  void set_empty_timeout(::uint32_t value);

  private:
  ::uint32_t _internal_empty_timeout() const;
  void _internal_set_empty_timeout(::uint32_t value);

  public:
  // uint32 departure_timeout = 3;
  void clear_departure_timeout() ;
  ::uint32_t departure_timeout() const;
  void set_departure_timeout(::uint32_t value);

  private:
  ::uint32_t _internal_departure_timeout() const;
  void _internal_set_departure_timeout(::uint32_t value);

  public:
  // uint32 max_participants = 4;
  void clear_max_participants() ;
  ::uint32_t max_participants() const;
  void set_max_participants(::uint32_t value);

  private:
  ::uint32_t _internal_max_participants() const;
  void _internal_set_max_participants(::uint32_t value);

  public:
  // uint32 min_playout_delay = 7;
  void clear_min_playout_delay() ;
  ::uint32_t min_playout_delay() const;
  void set_min_playout_delay(::uint32_t value);

  private:
  ::uint32_t _internal_min_playout_delay() const;
  void _internal_set_min_playout_delay(::uint32_t value);

  public:
  // uint32 max_playout_delay = 8;
  void clear_max_playout_delay() ;
  ::uint32_t max_playout_delay() const;
  void set_max_playout_delay(::uint32_t value);

  private:
  ::uint32_t _internal_max_playout_delay() const;
  void _internal_set_max_playout_delay(::uint32_t value);

  public:
  // bool sync_streams = 9;
  void clear_sync_streams() ;
  bool sync_streams() const;
  void set_sync_streams(bool value);

  private:
  bool _internal_sync_streams() const;
  void _internal_set_sync_streams(bool value);

  public:
  // @@protoc_insertion_point(class_scope:livekit.RoomConfiguration)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<4, 9,
                                   2, 46,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const RoomConfiguration& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::livekit::RoomAgentDispatch > agents_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::livekit::RoomEgress* PROTOBUF_NULLABLE egress_;
    ::uint32_t empty_timeout_;
    ::uint32_t departure_timeout_;
    ::uint32_t max_participants_;
    ::uint32_t min_playout_delay_;
    ::uint32_t max_playout_delay_;
    bool sync_streams_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_livekit_5froom_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull RoomConfiguration_class_data_;
// -------------------------------------------------------------------

class CreateRoomRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:livekit.CreateRoomRequest) */ {
 public:
  inline CreateRoomRequest() : CreateRoomRequest(nullptr) {}
  ~CreateRoomRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CreateRoomRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CreateRoomRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreateRoomRequest(::google::protobuf::internal::ConstantInitialized);

  inline CreateRoomRequest(const CreateRoomRequest& from) : CreateRoomRequest(nullptr, from) {}
  inline CreateRoomRequest(CreateRoomRequest&& from) noexcept
      : CreateRoomRequest(nullptr, std::move(from)) {}
  inline CreateRoomRequest& operator=(const CreateRoomRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateRoomRequest& operator=(CreateRoomRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateRoomRequest& default_instance() {
    return *reinterpret_cast<const CreateRoomRequest*>(
        &_CreateRoomRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(CreateRoomRequest& a, CreateRoomRequest& b) { a.Swap(&b); }
  inline void Swap(CreateRoomRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateRoomRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateRoomRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CreateRoomRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateRoomRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CreateRoomRequest& from) { CreateRoomRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CreateRoomRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "livekit.CreateRoomRequest"; }

 protected:
  explicit CreateRoomRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CreateRoomRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CreateRoomRequest& from);
  CreateRoomRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CreateRoomRequest&& from) noexcept
      : CreateRoomRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAgentsFieldNumber = 14,
    kNameFieldNumber = 1,
    kNodeIdFieldNumber = 4,
    kMetadataFieldNumber = 5,
    kRoomPresetFieldNumber = 12,
    kEgressFieldNumber = 6,
    kEmptyTimeoutFieldNumber = 2,
    kMaxParticipantsFieldNumber = 3,
    kMinPlayoutDelayFieldNumber = 7,
    kMaxPlayoutDelayFieldNumber = 8,
    kDepartureTimeoutFieldNumber = 10,
    kSyncStreamsFieldNumber = 9,
    kReplayEnabledFieldNumber = 13,
  };
  // repeated .livekit.RoomAgentDispatch agents = 14;
  int agents_size() const;
  private:
  int _internal_agents_size() const;

  public:
  void clear_agents() ;
  ::livekit::RoomAgentDispatch* PROTOBUF_NONNULL mutable_agents(int index);
  ::google::protobuf::RepeatedPtrField<::livekit::RoomAgentDispatch>* PROTOBUF_NONNULL mutable_agents();

  private:
  const ::google::protobuf::RepeatedPtrField<::livekit::RoomAgentDispatch>& _internal_agents() const;
  ::google::protobuf::RepeatedPtrField<::livekit::RoomAgentDispatch>* PROTOBUF_NONNULL _internal_mutable_agents();
  public:
  const ::livekit::RoomAgentDispatch& agents(int index) const;
  ::livekit::RoomAgentDispatch* PROTOBUF_NONNULL add_agents();
  const ::google::protobuf::RepeatedPtrField<::livekit::RoomAgentDispatch>& agents() const;
  // string name = 1;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_name();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_name();
  void set_allocated_name(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_name() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_name(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_name();

  public:
  // string node_id = 4;
  void clear_node_id() ;
  const std::string& node_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_node_id(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_node_id();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_node_id();
  void set_allocated_node_id(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_node_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_node_id(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_node_id();

  public:
  // string metadata = 5;
  void clear_metadata() ;
  const std::string& metadata() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_metadata(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_metadata();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_metadata();
  void set_allocated_metadata(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_metadata() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_metadata(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_metadata();

  public:
  // string room_preset = 12;
  void clear_room_preset() ;
  const std::string& room_preset() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_room_preset(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_room_preset();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_room_preset();
  void set_allocated_room_preset(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_room_preset() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_room_preset(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_room_preset();

  public:
  // .livekit.RoomEgress egress = 6;
  bool has_egress() const;
  void clear_egress() ;
  const ::livekit::RoomEgress& egress() const;
  [[nodiscard]] ::livekit::RoomEgress* PROTOBUF_NULLABLE release_egress();
  ::livekit::RoomEgress* PROTOBUF_NONNULL mutable_egress();
  void set_allocated_egress(::livekit::RoomEgress* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_egress(::livekit::RoomEgress* PROTOBUF_NULLABLE value);
  ::livekit::RoomEgress* PROTOBUF_NULLABLE unsafe_arena_release_egress();

  private:
  const ::livekit::RoomEgress& _internal_egress() const;
  ::livekit::RoomEgress* PROTOBUF_NONNULL _internal_mutable_egress();

  public:
  // uint32 empty_timeout = 2;
  void clear_empty_timeout() ;
  ::uint32_t empty_timeout() const;
  void set_empty_timeout(::uint32_t value);

  private:
  ::uint32_t _internal_empty_timeout() const;
  void _internal_set_empty_timeout(::uint32_t value);

  public:
  // uint32 max_participants = 3;
  void clear_max_participants() ;
  ::uint32_t max_participants() const;
  void set_max_participants(::uint32_t value);

  private:
  ::uint32_t _internal_max_participants() const;
  void _internal_set_max_participants(::uint32_t value);

  public:
  // uint32 min_playout_delay = 7;
  void clear_min_playout_delay() ;
  ::uint32_t min_playout_delay() const;
  void set_min_playout_delay(::uint32_t value);

  private:
  ::uint32_t _internal_min_playout_delay() const;
  void _internal_set_min_playout_delay(::uint32_t value);

  public:
  // uint32 max_playout_delay = 8;
  void clear_max_playout_delay() ;
  ::uint32_t max_playout_delay() const;
  void set_max_playout_delay(::uint32_t value);

  private:
  ::uint32_t _internal_max_playout_delay() const;
  void _internal_set_max_playout_delay(::uint32_t value);

  public:
  // uint32 departure_timeout = 10;
  void clear_departure_timeout() ;
  ::uint32_t departure_timeout() const;
  void set_departure_timeout(::uint32_t value);

  private:
  ::uint32_t _internal_departure_timeout() const;
  void _internal_set_departure_timeout(::uint32_t value);

  public:
  // bool sync_streams = 9;
  void clear_sync_streams() ;
  bool sync_streams() const;
  void set_sync_streams(bool value);

  private:
  bool _internal_sync_streams() const;
  void _internal_set_sync_streams(bool value);

  public:
  // bool replay_enabled = 13;
  void clear_replay_enabled() ;
  bool replay_enabled() const;
  void set_replay_enabled(bool value);

  private:
  bool _internal_replay_enabled() const;
  void _internal_set_replay_enabled(bool value);

  public:
  // @@protoc_insertion_point(class_scope:livekit.CreateRoomRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<4, 13,
                                   2, 72,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CreateRoomRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::livekit::RoomAgentDispatch > agents_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr node_id_;
    ::google::protobuf::internal::ArenaStringPtr metadata_;
    ::google::protobuf::internal::ArenaStringPtr room_preset_;
    ::livekit::RoomEgress* PROTOBUF_NULLABLE egress_;
    ::uint32_t empty_timeout_;
    ::uint32_t max_participants_;
    ::uint32_t min_playout_delay_;
    ::uint32_t max_playout_delay_;
    ::uint32_t departure_timeout_;
    bool sync_streams_;
    bool replay_enabled_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_livekit_5froom_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CreateRoomRequest_class_data_;

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// CreateRoomRequest

// string name = 1;
inline void CreateRoomRequest::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CreateRoomRequest::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:livekit.CreateRoomRequest.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CreateRoomRequest::set_name(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:livekit.CreateRoomRequest.name)
}
inline std::string* PROTOBUF_NONNULL CreateRoomRequest::mutable_name()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:livekit.CreateRoomRequest.name)
  return _s;
}
inline const std::string& CreateRoomRequest::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void CreateRoomRequest::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.name_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL CreateRoomRequest::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE CreateRoomRequest::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:livekit.CreateRoomRequest.name)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.name_.Set("", GetArena());
  }
  return released;
}
inline void CreateRoomRequest::set_allocated_name(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:livekit.CreateRoomRequest.name)
}

// string room_preset = 12;
inline void CreateRoomRequest::clear_room_preset() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.room_preset_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const std::string& CreateRoomRequest::room_preset() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:livekit.CreateRoomRequest.room_preset)
  return _internal_room_preset();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CreateRoomRequest::set_room_preset(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.room_preset_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:livekit.CreateRoomRequest.room_preset)
}
inline std::string* PROTOBUF_NONNULL CreateRoomRequest::mutable_room_preset()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_room_preset();
  // @@protoc_insertion_point(field_mutable:livekit.CreateRoomRequest.room_preset)
  return _s;
}
inline const std::string& CreateRoomRequest::_internal_room_preset() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.room_preset_.Get();
}
inline void CreateRoomRequest::_internal_set_room_preset(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.room_preset_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL CreateRoomRequest::_internal_mutable_room_preset() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  return _impl_.room_preset_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE CreateRoomRequest::release_room_preset() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:livekit.CreateRoomRequest.room_preset)
  if ((_impl_._has_bits_[0] & 0x00000008u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000008u;
  auto* released = _impl_.room_preset_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.room_preset_.Set("", GetArena());
  }
  return released;
}
inline void CreateRoomRequest::set_allocated_room_preset(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  _impl_.room_preset_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.room_preset_.IsDefault()) {
    _impl_.room_preset_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:livekit.CreateRoomRequest.room_preset)
}

// uint32 empty_timeout = 2;
inline void CreateRoomRequest::clear_empty_timeout() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.empty_timeout_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::uint32_t CreateRoomRequest::empty_timeout() const {
  // @@protoc_insertion_point(field_get:livekit.CreateRoomRequest.empty_timeout)
  return _internal_empty_timeout();
}
inline void CreateRoomRequest::set_empty_timeout(::uint32_t value) {
  _internal_set_empty_timeout(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:livekit.CreateRoomRequest.empty_timeout)
}
inline ::uint32_t CreateRoomRequest::_internal_empty_timeout() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.empty_timeout_;
}
inline void CreateRoomRequest::_internal_set_empty_timeout(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.empty_timeout_ = value;
}

// uint32 departure_timeout = 10;
inline void CreateRoomRequest::clear_departure_timeout() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.departure_timeout_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000200u;
}
inline ::uint32_t CreateRoomRequest::departure_timeout() const {
  // @@protoc_insertion_point(field_get:livekit.CreateRoomRequest.departure_timeout)
  return _internal_departure_timeout();
}
inline void CreateRoomRequest::set_departure_timeout(::uint32_t value) {
  _internal_set_departure_timeout(value);
  _impl_._has_bits_[0] |= 0x00000200u;
  // @@protoc_insertion_point(field_set:livekit.CreateRoomRequest.departure_timeout)
}
inline ::uint32_t CreateRoomRequest::_internal_departure_timeout() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.departure_timeout_;
}
inline void CreateRoomRequest::_internal_set_departure_timeout(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.departure_timeout_ = value;
}

// uint32 max_participants = 3;
inline void CreateRoomRequest::clear_max_participants() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_participants_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline ::uint32_t CreateRoomRequest::max_participants() const {
  // @@protoc_insertion_point(field_get:livekit.CreateRoomRequest.max_participants)
  return _internal_max_participants();
}
inline void CreateRoomRequest::set_max_participants(::uint32_t value) {
  _internal_set_max_participants(value);
  _impl_._has_bits_[0] |= 0x00000040u;
  // @@protoc_insertion_point(field_set:livekit.CreateRoomRequest.max_participants)
}
inline ::uint32_t CreateRoomRequest::_internal_max_participants() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.max_participants_;
}
inline void CreateRoomRequest::_internal_set_max_participants(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_participants_ = value;
}

// string node_id = 4;
inline void CreateRoomRequest::clear_node_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.node_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CreateRoomRequest::node_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:livekit.CreateRoomRequest.node_id)
  return _internal_node_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CreateRoomRequest::set_node_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.node_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:livekit.CreateRoomRequest.node_id)
}
inline std::string* PROTOBUF_NONNULL CreateRoomRequest::mutable_node_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_node_id();
  // @@protoc_insertion_point(field_mutable:livekit.CreateRoomRequest.node_id)
  return _s;
}
inline const std::string& CreateRoomRequest::_internal_node_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.node_id_.Get();
}
inline void CreateRoomRequest::_internal_set_node_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.node_id_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL CreateRoomRequest::_internal_mutable_node_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.node_id_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE CreateRoomRequest::release_node_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:livekit.CreateRoomRequest.node_id)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.node_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.node_id_.Set("", GetArena());
  }
  return released;
}
inline void CreateRoomRequest::set_allocated_node_id(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.node_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.node_id_.IsDefault()) {
    _impl_.node_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:livekit.CreateRoomRequest.node_id)
}

// string metadata = 5;
inline void CreateRoomRequest::clear_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.metadata_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const std::string& CreateRoomRequest::metadata() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:livekit.CreateRoomRequest.metadata)
  return _internal_metadata();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CreateRoomRequest::set_metadata(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.metadata_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:livekit.CreateRoomRequest.metadata)
}
inline std::string* PROTOBUF_NONNULL CreateRoomRequest::mutable_metadata()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_metadata();
  // @@protoc_insertion_point(field_mutable:livekit.CreateRoomRequest.metadata)
  return _s;
}
inline const std::string& CreateRoomRequest::_internal_metadata() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.metadata_.Get();
}
inline void CreateRoomRequest::_internal_set_metadata(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.metadata_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL CreateRoomRequest::_internal_mutable_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.metadata_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE CreateRoomRequest::release_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:livekit.CreateRoomRequest.metadata)
  if ((_impl_._has_bits_[0] & 0x00000004u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* released = _impl_.metadata_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.metadata_.Set("", GetArena());
  }
  return released;
}
inline void CreateRoomRequest::set_allocated_metadata(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.metadata_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.metadata_.IsDefault()) {
    _impl_.metadata_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:livekit.CreateRoomRequest.metadata)
}

// .livekit.RoomEgress egress = 6;
inline bool CreateRoomRequest::has_egress() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.egress_ != nullptr);
  return value;
}
inline void CreateRoomRequest::clear_egress() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.egress_ != nullptr) _impl_.egress_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline const ::livekit::RoomEgress& CreateRoomRequest::_internal_egress() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::livekit::RoomEgress* p = _impl_.egress_;
  return p != nullptr ? *p : reinterpret_cast<const ::livekit::RoomEgress&>(::livekit::_RoomEgress_default_instance_);
}
inline const ::livekit::RoomEgress& CreateRoomRequest::egress() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:livekit.CreateRoomRequest.egress)
  return _internal_egress();
}
inline void CreateRoomRequest::unsafe_arena_set_allocated_egress(
    ::livekit::RoomEgress* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.egress_);
  }
  _impl_.egress_ = reinterpret_cast<::livekit::RoomEgress*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:livekit.CreateRoomRequest.egress)
}
inline ::livekit::RoomEgress* PROTOBUF_NULLABLE CreateRoomRequest::release_egress() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::livekit::RoomEgress* released = _impl_.egress_;
  _impl_.egress_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::livekit::RoomEgress* PROTOBUF_NULLABLE CreateRoomRequest::unsafe_arena_release_egress() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:livekit.CreateRoomRequest.egress)

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::livekit::RoomEgress* temp = _impl_.egress_;
  _impl_.egress_ = nullptr;
  return temp;
}
inline ::livekit::RoomEgress* PROTOBUF_NONNULL CreateRoomRequest::_internal_mutable_egress() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.egress_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::livekit::RoomEgress>(GetArena());
    _impl_.egress_ = reinterpret_cast<::livekit::RoomEgress*>(p);
  }
  return _impl_.egress_;
}
inline ::livekit::RoomEgress* PROTOBUF_NONNULL CreateRoomRequest::mutable_egress()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000010u;
  ::livekit::RoomEgress* _msg = _internal_mutable_egress();
  // @@protoc_insertion_point(field_mutable:livekit.CreateRoomRequest.egress)
  return _msg;
}
inline void CreateRoomRequest::set_allocated_egress(::livekit::RoomEgress* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.egress_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }

  _impl_.egress_ = reinterpret_cast<::livekit::RoomEgress*>(value);
  // @@protoc_insertion_point(field_set_allocated:livekit.CreateRoomRequest.egress)
}

// uint32 min_playout_delay = 7;
inline void CreateRoomRequest::clear_min_playout_delay() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_playout_delay_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline ::uint32_t CreateRoomRequest::min_playout_delay() const {
  // @@protoc_insertion_point(field_get:livekit.CreateRoomRequest.min_playout_delay)
  return _internal_min_playout_delay();
}
inline void CreateRoomRequest::set_min_playout_delay(::uint32_t value) {
  _internal_set_min_playout_delay(value);
  _impl_._has_bits_[0] |= 0x00000080u;
  // @@protoc_insertion_point(field_set:livekit.CreateRoomRequest.min_playout_delay)
}
inline ::uint32_t CreateRoomRequest::_internal_min_playout_delay() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.min_playout_delay_;
}
inline void CreateRoomRequest::_internal_set_min_playout_delay(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_playout_delay_ = value;
}

// uint32 max_playout_delay = 8;
inline void CreateRoomRequest::clear_max_playout_delay() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_playout_delay_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000100u;
}
inline ::uint32_t CreateRoomRequest::max_playout_delay() const {
  // @@protoc_insertion_point(field_get:livekit.CreateRoomRequest.max_playout_delay)
  return _internal_max_playout_delay();
}
inline void CreateRoomRequest::set_max_playout_delay(::uint32_t value) {
  _internal_set_max_playout_delay(value);
  _impl_._has_bits_[0] |= 0x00000100u;
  // @@protoc_insertion_point(field_set:livekit.CreateRoomRequest.max_playout_delay)
}
inline ::uint32_t CreateRoomRequest::_internal_max_playout_delay() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.max_playout_delay_;
}
inline void CreateRoomRequest::_internal_set_max_playout_delay(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_playout_delay_ = value;
}

// bool sync_streams = 9;
inline void CreateRoomRequest::clear_sync_streams() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sync_streams_ = false;
  _impl_._has_bits_[0] &= ~0x00000400u;
}
inline bool CreateRoomRequest::sync_streams() const {
  // @@protoc_insertion_point(field_get:livekit.CreateRoomRequest.sync_streams)
  return _internal_sync_streams();
}
inline void CreateRoomRequest::set_sync_streams(bool value) {
  _internal_set_sync_streams(value);
  _impl_._has_bits_[0] |= 0x00000400u;
  // @@protoc_insertion_point(field_set:livekit.CreateRoomRequest.sync_streams)
}
inline bool CreateRoomRequest::_internal_sync_streams() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sync_streams_;
}
inline void CreateRoomRequest::_internal_set_sync_streams(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sync_streams_ = value;
}

// bool replay_enabled = 13;
inline void CreateRoomRequest::clear_replay_enabled() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.replay_enabled_ = false;
  _impl_._has_bits_[0] &= ~0x00000800u;
}
inline bool CreateRoomRequest::replay_enabled() const {
  // @@protoc_insertion_point(field_get:livekit.CreateRoomRequest.replay_enabled)
  return _internal_replay_enabled();
}
inline void CreateRoomRequest::set_replay_enabled(bool value) {
  _internal_set_replay_enabled(value);
  _impl_._has_bits_[0] |= 0x00000800u;
  // @@protoc_insertion_point(field_set:livekit.CreateRoomRequest.replay_enabled)
}
inline bool CreateRoomRequest::_internal_replay_enabled() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.replay_enabled_;
}
inline void CreateRoomRequest::_internal_set_replay_enabled(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.replay_enabled_ = value;
}

// repeated .livekit.RoomAgentDispatch agents = 14;
inline int CreateRoomRequest::_internal_agents_size() const {
  return _internal_agents().size();
}
inline int CreateRoomRequest::agents_size() const {
  return _internal_agents_size();
}
inline ::livekit::RoomAgentDispatch* PROTOBUF_NONNULL CreateRoomRequest::mutable_agents(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:livekit.CreateRoomRequest.agents)
  return _internal_mutable_agents()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::livekit::RoomAgentDispatch>* PROTOBUF_NONNULL CreateRoomRequest::mutable_agents()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:livekit.CreateRoomRequest.agents)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_agents();
}
inline const ::livekit::RoomAgentDispatch& CreateRoomRequest::agents(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:livekit.CreateRoomRequest.agents)
  return _internal_agents().Get(index);
}
inline ::livekit::RoomAgentDispatch* PROTOBUF_NONNULL CreateRoomRequest::add_agents()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::livekit::RoomAgentDispatch* _add = _internal_mutable_agents()->Add();
  // @@protoc_insertion_point(field_add:livekit.CreateRoomRequest.agents)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::livekit::RoomAgentDispatch>& CreateRoomRequest::agents() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:livekit.CreateRoomRequest.agents)
  return _internal_agents();
}
inline const ::google::protobuf::RepeatedPtrField<::livekit::RoomAgentDispatch>&
CreateRoomRequest::_internal_agents() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.agents_;
}
inline ::google::protobuf::RepeatedPtrField<::livekit::RoomAgentDispatch>* PROTOBUF_NONNULL
CreateRoomRequest::_internal_mutable_agents() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.agents_;
}

// -------------------------------------------------------------------

// RoomEgress

// .livekit.RoomCompositeEgressRequest room = 1;
inline bool RoomEgress::has_room() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.room_ != nullptr);
  return value;
}
inline const ::livekit::RoomCompositeEgressRequest& RoomEgress::_internal_room() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::livekit::RoomCompositeEgressRequest* p = _impl_.room_;
  return p != nullptr ? *p : reinterpret_cast<const ::livekit::RoomCompositeEgressRequest&>(::livekit::_RoomCompositeEgressRequest_default_instance_);
}
inline const ::livekit::RoomCompositeEgressRequest& RoomEgress::room() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:livekit.RoomEgress.room)
  return _internal_room();
}
inline void RoomEgress::unsafe_arena_set_allocated_room(
    ::livekit::RoomCompositeEgressRequest* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.room_);
  }
  _impl_.room_ = reinterpret_cast<::livekit::RoomCompositeEgressRequest*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:livekit.RoomEgress.room)
}
inline ::livekit::RoomCompositeEgressRequest* PROTOBUF_NULLABLE RoomEgress::release_room() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::livekit::RoomCompositeEgressRequest* released = _impl_.room_;
  _impl_.room_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::livekit::RoomCompositeEgressRequest* PROTOBUF_NULLABLE RoomEgress::unsafe_arena_release_room() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:livekit.RoomEgress.room)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::livekit::RoomCompositeEgressRequest* temp = _impl_.room_;
  _impl_.room_ = nullptr;
  return temp;
}
inline ::livekit::RoomCompositeEgressRequest* PROTOBUF_NONNULL RoomEgress::_internal_mutable_room() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.room_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::livekit::RoomCompositeEgressRequest>(GetArena());
    _impl_.room_ = reinterpret_cast<::livekit::RoomCompositeEgressRequest*>(p);
  }
  return _impl_.room_;
}
inline ::livekit::RoomCompositeEgressRequest* PROTOBUF_NONNULL RoomEgress::mutable_room()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::livekit::RoomCompositeEgressRequest* _msg = _internal_mutable_room();
  // @@protoc_insertion_point(field_mutable:livekit.RoomEgress.room)
  return _msg;
}
inline void RoomEgress::set_allocated_room(::livekit::RoomCompositeEgressRequest* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.room_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.room_ = reinterpret_cast<::livekit::RoomCompositeEgressRequest*>(value);
  // @@protoc_insertion_point(field_set_allocated:livekit.RoomEgress.room)
}

// .livekit.AutoParticipantEgress participant = 3;
inline bool RoomEgress::has_participant() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.participant_ != nullptr);
  return value;
}
inline const ::livekit::AutoParticipantEgress& RoomEgress::_internal_participant() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::livekit::AutoParticipantEgress* p = _impl_.participant_;
  return p != nullptr ? *p : reinterpret_cast<const ::livekit::AutoParticipantEgress&>(::livekit::_AutoParticipantEgress_default_instance_);
}
inline const ::livekit::AutoParticipantEgress& RoomEgress::participant() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:livekit.RoomEgress.participant)
  return _internal_participant();
}
inline void RoomEgress::unsafe_arena_set_allocated_participant(
    ::livekit::AutoParticipantEgress* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.participant_);
  }
  _impl_.participant_ = reinterpret_cast<::livekit::AutoParticipantEgress*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:livekit.RoomEgress.participant)
}
inline ::livekit::AutoParticipantEgress* PROTOBUF_NULLABLE RoomEgress::release_participant() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::livekit::AutoParticipantEgress* released = _impl_.participant_;
  _impl_.participant_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::livekit::AutoParticipantEgress* PROTOBUF_NULLABLE RoomEgress::unsafe_arena_release_participant() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:livekit.RoomEgress.participant)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::livekit::AutoParticipantEgress* temp = _impl_.participant_;
  _impl_.participant_ = nullptr;
  return temp;
}
inline ::livekit::AutoParticipantEgress* PROTOBUF_NONNULL RoomEgress::_internal_mutable_participant() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.participant_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::livekit::AutoParticipantEgress>(GetArena());
    _impl_.participant_ = reinterpret_cast<::livekit::AutoParticipantEgress*>(p);
  }
  return _impl_.participant_;
}
inline ::livekit::AutoParticipantEgress* PROTOBUF_NONNULL RoomEgress::mutable_participant()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::livekit::AutoParticipantEgress* _msg = _internal_mutable_participant();
  // @@protoc_insertion_point(field_mutable:livekit.RoomEgress.participant)
  return _msg;
}
inline void RoomEgress::set_allocated_participant(::livekit::AutoParticipantEgress* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.participant_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.participant_ = reinterpret_cast<::livekit::AutoParticipantEgress*>(value);
  // @@protoc_insertion_point(field_set_allocated:livekit.RoomEgress.participant)
}

// .livekit.AutoTrackEgress tracks = 2;
inline bool RoomEgress::has_tracks() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.tracks_ != nullptr);
  return value;
}
inline const ::livekit::AutoTrackEgress& RoomEgress::_internal_tracks() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::livekit::AutoTrackEgress* p = _impl_.tracks_;
  return p != nullptr ? *p : reinterpret_cast<const ::livekit::AutoTrackEgress&>(::livekit::_AutoTrackEgress_default_instance_);
}
inline const ::livekit::AutoTrackEgress& RoomEgress::tracks() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:livekit.RoomEgress.tracks)
  return _internal_tracks();
}
inline void RoomEgress::unsafe_arena_set_allocated_tracks(
    ::livekit::AutoTrackEgress* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.tracks_);
  }
  _impl_.tracks_ = reinterpret_cast<::livekit::AutoTrackEgress*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:livekit.RoomEgress.tracks)
}
inline ::livekit::AutoTrackEgress* PROTOBUF_NULLABLE RoomEgress::release_tracks() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::livekit::AutoTrackEgress* released = _impl_.tracks_;
  _impl_.tracks_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::livekit::AutoTrackEgress* PROTOBUF_NULLABLE RoomEgress::unsafe_arena_release_tracks() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:livekit.RoomEgress.tracks)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::livekit::AutoTrackEgress* temp = _impl_.tracks_;
  _impl_.tracks_ = nullptr;
  return temp;
}
inline ::livekit::AutoTrackEgress* PROTOBUF_NONNULL RoomEgress::_internal_mutable_tracks() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.tracks_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::livekit::AutoTrackEgress>(GetArena());
    _impl_.tracks_ = reinterpret_cast<::livekit::AutoTrackEgress*>(p);
  }
  return _impl_.tracks_;
}
inline ::livekit::AutoTrackEgress* PROTOBUF_NONNULL RoomEgress::mutable_tracks()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::livekit::AutoTrackEgress* _msg = _internal_mutable_tracks();
  // @@protoc_insertion_point(field_mutable:livekit.RoomEgress.tracks)
  return _msg;
}
inline void RoomEgress::set_allocated_tracks(::livekit::AutoTrackEgress* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.tracks_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.tracks_ = reinterpret_cast<::livekit::AutoTrackEgress*>(value);
  // @@protoc_insertion_point(field_set_allocated:livekit.RoomEgress.tracks)
}

// -------------------------------------------------------------------

// RoomAgent

// repeated .livekit.RoomAgentDispatch dispatches = 1;
inline int RoomAgent::_internal_dispatches_size() const {
  return _internal_dispatches().size();
}
inline int RoomAgent::dispatches_size() const {
  return _internal_dispatches_size();
}
inline ::livekit::RoomAgentDispatch* PROTOBUF_NONNULL RoomAgent::mutable_dispatches(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:livekit.RoomAgent.dispatches)
  return _internal_mutable_dispatches()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::livekit::RoomAgentDispatch>* PROTOBUF_NONNULL RoomAgent::mutable_dispatches()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:livekit.RoomAgent.dispatches)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_dispatches();
}
inline const ::livekit::RoomAgentDispatch& RoomAgent::dispatches(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:livekit.RoomAgent.dispatches)
  return _internal_dispatches().Get(index);
}
inline ::livekit::RoomAgentDispatch* PROTOBUF_NONNULL RoomAgent::add_dispatches()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::livekit::RoomAgentDispatch* _add = _internal_mutable_dispatches()->Add();
  // @@protoc_insertion_point(field_add:livekit.RoomAgent.dispatches)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::livekit::RoomAgentDispatch>& RoomAgent::dispatches() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:livekit.RoomAgent.dispatches)
  return _internal_dispatches();
}
inline const ::google::protobuf::RepeatedPtrField<::livekit::RoomAgentDispatch>&
RoomAgent::_internal_dispatches() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dispatches_;
}
inline ::google::protobuf::RepeatedPtrField<::livekit::RoomAgentDispatch>* PROTOBUF_NONNULL
RoomAgent::_internal_mutable_dispatches() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.dispatches_;
}

// -------------------------------------------------------------------

// ListRoomsRequest

// repeated string names = 1;
inline int ListRoomsRequest::_internal_names_size() const {
  return _internal_names().size();
}
inline int ListRoomsRequest::names_size() const {
  return _internal_names_size();
}
inline void ListRoomsRequest::clear_names() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.names_.Clear();
}
inline std::string* PROTOBUF_NONNULL ListRoomsRequest::add_names()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_names()->Add();
  // @@protoc_insertion_point(field_add_mutable:livekit.ListRoomsRequest.names)
  return _s;
}
inline const std::string& ListRoomsRequest::names(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:livekit.ListRoomsRequest.names)
  return _internal_names().Get(index);
}
inline std::string* PROTOBUF_NONNULL ListRoomsRequest::mutable_names(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:livekit.ListRoomsRequest.names)
  return _internal_mutable_names()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void ListRoomsRequest::set_names(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(*_internal_mutable_names()->Mutable(index), std::forward<Arg_>(value),
                        args... );
  // @@protoc_insertion_point(field_set:livekit.ListRoomsRequest.names)
}
template <typename Arg_, typename... Args_>
inline void ListRoomsRequest::add_names(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_names(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:livekit.ListRoomsRequest.names)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>& ListRoomsRequest::names() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:livekit.ListRoomsRequest.names)
  return _internal_names();
}
inline ::google::protobuf::RepeatedPtrField<std::string>* PROTOBUF_NONNULL
ListRoomsRequest::mutable_names() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:livekit.ListRoomsRequest.names)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_names();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
ListRoomsRequest::_internal_names() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.names_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>* PROTOBUF_NONNULL
ListRoomsRequest::_internal_mutable_names() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.names_;
}

// -------------------------------------------------------------------

// ListRoomsResponse

// repeated .livekit.Room rooms = 1;
inline int ListRoomsResponse::_internal_rooms_size() const {
  return _internal_rooms().size();
}
inline int ListRoomsResponse::rooms_size() const {
  return _internal_rooms_size();
}
inline ::livekit::Room* PROTOBUF_NONNULL ListRoomsResponse::mutable_rooms(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:livekit.ListRoomsResponse.rooms)
  return _internal_mutable_rooms()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::livekit::Room>* PROTOBUF_NONNULL ListRoomsResponse::mutable_rooms()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:livekit.ListRoomsResponse.rooms)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_rooms();
}
inline const ::livekit::Room& ListRoomsResponse::rooms(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:livekit.ListRoomsResponse.rooms)
  return _internal_rooms().Get(index);
}
inline ::livekit::Room* PROTOBUF_NONNULL ListRoomsResponse::add_rooms()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::livekit::Room* _add = _internal_mutable_rooms()->Add();
  // @@protoc_insertion_point(field_add:livekit.ListRoomsResponse.rooms)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::livekit::Room>& ListRoomsResponse::rooms() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:livekit.ListRoomsResponse.rooms)
  return _internal_rooms();
}
inline const ::google::protobuf::RepeatedPtrField<::livekit::Room>&
ListRoomsResponse::_internal_rooms() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.rooms_;
}
inline ::google::protobuf::RepeatedPtrField<::livekit::Room>* PROTOBUF_NONNULL
ListRoomsResponse::_internal_mutable_rooms() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.rooms_;
}

// -------------------------------------------------------------------

// DeleteRoomRequest

// string room = 1;
inline void DeleteRoomRequest::clear_room() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.room_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& DeleteRoomRequest::room() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:livekit.DeleteRoomRequest.room)
  return _internal_room();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void DeleteRoomRequest::set_room(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.room_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:livekit.DeleteRoomRequest.room)
}
inline std::string* PROTOBUF_NONNULL DeleteRoomRequest::mutable_room()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_room();
  // @@protoc_insertion_point(field_mutable:livekit.DeleteRoomRequest.room)
  return _s;
}
inline const std::string& DeleteRoomRequest::_internal_room() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.room_.Get();
}
inline void DeleteRoomRequest::_internal_set_room(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.room_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL DeleteRoomRequest::_internal_mutable_room() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.room_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE DeleteRoomRequest::release_room() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:livekit.DeleteRoomRequest.room)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.room_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.room_.Set("", GetArena());
  }
  return released;
}
inline void DeleteRoomRequest::set_allocated_room(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.room_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.room_.IsDefault()) {
    _impl_.room_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:livekit.DeleteRoomRequest.room)
}

// -------------------------------------------------------------------

// DeleteRoomResponse

// -------------------------------------------------------------------

// ListParticipantsRequest

// string room = 1;
inline void ListParticipantsRequest::clear_room() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.room_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& ListParticipantsRequest::room() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:livekit.ListParticipantsRequest.room)
  return _internal_room();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ListParticipantsRequest::set_room(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.room_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:livekit.ListParticipantsRequest.room)
}
inline std::string* PROTOBUF_NONNULL ListParticipantsRequest::mutable_room()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_room();
  // @@protoc_insertion_point(field_mutable:livekit.ListParticipantsRequest.room)
  return _s;
}
inline const std::string& ListParticipantsRequest::_internal_room() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.room_.Get();
}
inline void ListParticipantsRequest::_internal_set_room(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.room_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL ListParticipantsRequest::_internal_mutable_room() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.room_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE ListParticipantsRequest::release_room() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:livekit.ListParticipantsRequest.room)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.room_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.room_.Set("", GetArena());
  }
  return released;
}
inline void ListParticipantsRequest::set_allocated_room(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.room_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.room_.IsDefault()) {
    _impl_.room_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:livekit.ListParticipantsRequest.room)
}

// -------------------------------------------------------------------

// ListParticipantsResponse

// repeated .livekit.ParticipantInfo participants = 1;
inline int ListParticipantsResponse::_internal_participants_size() const {
  return _internal_participants().size();
}
inline int ListParticipantsResponse::participants_size() const {
  return _internal_participants_size();
}
inline ::livekit::ParticipantInfo* PROTOBUF_NONNULL ListParticipantsResponse::mutable_participants(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:livekit.ListParticipantsResponse.participants)
  return _internal_mutable_participants()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::livekit::ParticipantInfo>* PROTOBUF_NONNULL ListParticipantsResponse::mutable_participants()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:livekit.ListParticipantsResponse.participants)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_participants();
}
inline const ::livekit::ParticipantInfo& ListParticipantsResponse::participants(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:livekit.ListParticipantsResponse.participants)
  return _internal_participants().Get(index);
}
inline ::livekit::ParticipantInfo* PROTOBUF_NONNULL ListParticipantsResponse::add_participants()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::livekit::ParticipantInfo* _add = _internal_mutable_participants()->Add();
  // @@protoc_insertion_point(field_add:livekit.ListParticipantsResponse.participants)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::livekit::ParticipantInfo>& ListParticipantsResponse::participants() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:livekit.ListParticipantsResponse.participants)
  return _internal_participants();
}
inline const ::google::protobuf::RepeatedPtrField<::livekit::ParticipantInfo>&
ListParticipantsResponse::_internal_participants() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.participants_;
}
inline ::google::protobuf::RepeatedPtrField<::livekit::ParticipantInfo>* PROTOBUF_NONNULL
ListParticipantsResponse::_internal_mutable_participants() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.participants_;
}

// -------------------------------------------------------------------

// RoomParticipantIdentity

// string room = 1;
inline void RoomParticipantIdentity::clear_room() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.room_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& RoomParticipantIdentity::room() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:livekit.RoomParticipantIdentity.room)
  return _internal_room();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void RoomParticipantIdentity::set_room(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.room_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:livekit.RoomParticipantIdentity.room)
}
inline std::string* PROTOBUF_NONNULL RoomParticipantIdentity::mutable_room()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_room();
  // @@protoc_insertion_point(field_mutable:livekit.RoomParticipantIdentity.room)
  return _s;
}
inline const std::string& RoomParticipantIdentity::_internal_room() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.room_.Get();
}
inline void RoomParticipantIdentity::_internal_set_room(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.room_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL RoomParticipantIdentity::_internal_mutable_room() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.room_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE RoomParticipantIdentity::release_room() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:livekit.RoomParticipantIdentity.room)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.room_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.room_.Set("", GetArena());
  }
  return released;
}
inline void RoomParticipantIdentity::set_allocated_room(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.room_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.room_.IsDefault()) {
    _impl_.room_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:livekit.RoomParticipantIdentity.room)
}

// string identity = 2;
inline void RoomParticipantIdentity::clear_identity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.identity_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& RoomParticipantIdentity::identity() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:livekit.RoomParticipantIdentity.identity)
  return _internal_identity();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void RoomParticipantIdentity::set_identity(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.identity_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:livekit.RoomParticipantIdentity.identity)
}
inline std::string* PROTOBUF_NONNULL RoomParticipantIdentity::mutable_identity()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_identity();
  // @@protoc_insertion_point(field_mutable:livekit.RoomParticipantIdentity.identity)
  return _s;
}
inline const std::string& RoomParticipantIdentity::_internal_identity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.identity_.Get();
}
inline void RoomParticipantIdentity::_internal_set_identity(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.identity_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL RoomParticipantIdentity::_internal_mutable_identity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.identity_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE RoomParticipantIdentity::release_identity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:livekit.RoomParticipantIdentity.identity)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.identity_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.identity_.Set("", GetArena());
  }
  return released;
}
inline void RoomParticipantIdentity::set_allocated_identity(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.identity_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.identity_.IsDefault()) {
    _impl_.identity_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:livekit.RoomParticipantIdentity.identity)
}

// -------------------------------------------------------------------

// RemoveParticipantResponse

// -------------------------------------------------------------------

// MuteRoomTrackRequest

// string room = 1;
inline void MuteRoomTrackRequest::clear_room() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.room_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& MuteRoomTrackRequest::room() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:livekit.MuteRoomTrackRequest.room)
  return _internal_room();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void MuteRoomTrackRequest::set_room(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.room_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:livekit.MuteRoomTrackRequest.room)
}
inline std::string* PROTOBUF_NONNULL MuteRoomTrackRequest::mutable_room()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_room();
  // @@protoc_insertion_point(field_mutable:livekit.MuteRoomTrackRequest.room)
  return _s;
}
inline const std::string& MuteRoomTrackRequest::_internal_room() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.room_.Get();
}
inline void MuteRoomTrackRequest::_internal_set_room(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.room_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL MuteRoomTrackRequest::_internal_mutable_room() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.room_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE MuteRoomTrackRequest::release_room() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:livekit.MuteRoomTrackRequest.room)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.room_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.room_.Set("", GetArena());
  }
  return released;
}
inline void MuteRoomTrackRequest::set_allocated_room(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.room_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.room_.IsDefault()) {
    _impl_.room_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:livekit.MuteRoomTrackRequest.room)
}

// string identity = 2;
inline void MuteRoomTrackRequest::clear_identity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.identity_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& MuteRoomTrackRequest::identity() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:livekit.MuteRoomTrackRequest.identity)
  return _internal_identity();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void MuteRoomTrackRequest::set_identity(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.identity_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:livekit.MuteRoomTrackRequest.identity)
}
inline std::string* PROTOBUF_NONNULL MuteRoomTrackRequest::mutable_identity()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_identity();
  // @@protoc_insertion_point(field_mutable:livekit.MuteRoomTrackRequest.identity)
  return _s;
}
inline const std::string& MuteRoomTrackRequest::_internal_identity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.identity_.Get();
}
inline void MuteRoomTrackRequest::_internal_set_identity(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.identity_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL MuteRoomTrackRequest::_internal_mutable_identity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.identity_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE MuteRoomTrackRequest::release_identity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:livekit.MuteRoomTrackRequest.identity)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.identity_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.identity_.Set("", GetArena());
  }
  return released;
}
inline void MuteRoomTrackRequest::set_allocated_identity(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.identity_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.identity_.IsDefault()) {
    _impl_.identity_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:livekit.MuteRoomTrackRequest.identity)
}

// string track_sid = 3;
inline void MuteRoomTrackRequest::clear_track_sid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.track_sid_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const std::string& MuteRoomTrackRequest::track_sid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:livekit.MuteRoomTrackRequest.track_sid)
  return _internal_track_sid();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void MuteRoomTrackRequest::set_track_sid(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.track_sid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:livekit.MuteRoomTrackRequest.track_sid)
}
inline std::string* PROTOBUF_NONNULL MuteRoomTrackRequest::mutable_track_sid()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_track_sid();
  // @@protoc_insertion_point(field_mutable:livekit.MuteRoomTrackRequest.track_sid)
  return _s;
}
inline const std::string& MuteRoomTrackRequest::_internal_track_sid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.track_sid_.Get();
}
inline void MuteRoomTrackRequest::_internal_set_track_sid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.track_sid_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL MuteRoomTrackRequest::_internal_mutable_track_sid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.track_sid_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE MuteRoomTrackRequest::release_track_sid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:livekit.MuteRoomTrackRequest.track_sid)
  if ((_impl_._has_bits_[0] & 0x00000004u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* released = _impl_.track_sid_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.track_sid_.Set("", GetArena());
  }
  return released;
}
inline void MuteRoomTrackRequest::set_allocated_track_sid(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.track_sid_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.track_sid_.IsDefault()) {
    _impl_.track_sid_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:livekit.MuteRoomTrackRequest.track_sid)
}

// bool muted = 4;
inline void MuteRoomTrackRequest::clear_muted() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.muted_ = false;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline bool MuteRoomTrackRequest::muted() const {
  // @@protoc_insertion_point(field_get:livekit.MuteRoomTrackRequest.muted)
  return _internal_muted();
}
inline void MuteRoomTrackRequest::set_muted(bool value) {
  _internal_set_muted(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:livekit.MuteRoomTrackRequest.muted)
}
inline bool MuteRoomTrackRequest::_internal_muted() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.muted_;
}
inline void MuteRoomTrackRequest::_internal_set_muted(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.muted_ = value;
}

// -------------------------------------------------------------------

// MuteRoomTrackResponse

// .livekit.TrackInfo track = 1;
inline bool MuteRoomTrackResponse::has_track() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.track_ != nullptr);
  return value;
}
inline const ::livekit::TrackInfo& MuteRoomTrackResponse::_internal_track() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::livekit::TrackInfo* p = _impl_.track_;
  return p != nullptr ? *p : reinterpret_cast<const ::livekit::TrackInfo&>(::livekit::_TrackInfo_default_instance_);
}
inline const ::livekit::TrackInfo& MuteRoomTrackResponse::track() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:livekit.MuteRoomTrackResponse.track)
  return _internal_track();
}
inline void MuteRoomTrackResponse::unsafe_arena_set_allocated_track(
    ::livekit::TrackInfo* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.track_);
  }
  _impl_.track_ = reinterpret_cast<::livekit::TrackInfo*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:livekit.MuteRoomTrackResponse.track)
}
inline ::livekit::TrackInfo* PROTOBUF_NULLABLE MuteRoomTrackResponse::release_track() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::livekit::TrackInfo* released = _impl_.track_;
  _impl_.track_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::livekit::TrackInfo* PROTOBUF_NULLABLE MuteRoomTrackResponse::unsafe_arena_release_track() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:livekit.MuteRoomTrackResponse.track)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::livekit::TrackInfo* temp = _impl_.track_;
  _impl_.track_ = nullptr;
  return temp;
}
inline ::livekit::TrackInfo* PROTOBUF_NONNULL MuteRoomTrackResponse::_internal_mutable_track() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.track_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::livekit::TrackInfo>(GetArena());
    _impl_.track_ = reinterpret_cast<::livekit::TrackInfo*>(p);
  }
  return _impl_.track_;
}
inline ::livekit::TrackInfo* PROTOBUF_NONNULL MuteRoomTrackResponse::mutable_track()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::livekit::TrackInfo* _msg = _internal_mutable_track();
  // @@protoc_insertion_point(field_mutable:livekit.MuteRoomTrackResponse.track)
  return _msg;
}
inline void MuteRoomTrackResponse::set_allocated_track(::livekit::TrackInfo* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.track_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.track_ = reinterpret_cast<::livekit::TrackInfo*>(value);
  // @@protoc_insertion_point(field_set_allocated:livekit.MuteRoomTrackResponse.track)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// UpdateParticipantRequest

// string room = 1;
inline void UpdateParticipantRequest::clear_room() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.room_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& UpdateParticipantRequest::room() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:livekit.UpdateParticipantRequest.room)
  return _internal_room();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void UpdateParticipantRequest::set_room(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.room_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:livekit.UpdateParticipantRequest.room)
}
inline std::string* PROTOBUF_NONNULL UpdateParticipantRequest::mutable_room()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_room();
  // @@protoc_insertion_point(field_mutable:livekit.UpdateParticipantRequest.room)
  return _s;
}
inline const std::string& UpdateParticipantRequest::_internal_room() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.room_.Get();
}
inline void UpdateParticipantRequest::_internal_set_room(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.room_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL UpdateParticipantRequest::_internal_mutable_room() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.room_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE UpdateParticipantRequest::release_room() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:livekit.UpdateParticipantRequest.room)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.room_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.room_.Set("", GetArena());
  }
  return released;
}
inline void UpdateParticipantRequest::set_allocated_room(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.room_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.room_.IsDefault()) {
    _impl_.room_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:livekit.UpdateParticipantRequest.room)
}

// string identity = 2;
inline void UpdateParticipantRequest::clear_identity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.identity_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& UpdateParticipantRequest::identity() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:livekit.UpdateParticipantRequest.identity)
  return _internal_identity();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void UpdateParticipantRequest::set_identity(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.identity_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:livekit.UpdateParticipantRequest.identity)
}
inline std::string* PROTOBUF_NONNULL UpdateParticipantRequest::mutable_identity()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_identity();
  // @@protoc_insertion_point(field_mutable:livekit.UpdateParticipantRequest.identity)
  return _s;
}
inline const std::string& UpdateParticipantRequest::_internal_identity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.identity_.Get();
}
inline void UpdateParticipantRequest::_internal_set_identity(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.identity_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL UpdateParticipantRequest::_internal_mutable_identity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.identity_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE UpdateParticipantRequest::release_identity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:livekit.UpdateParticipantRequest.identity)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.identity_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.identity_.Set("", GetArena());
  }
  return released;
}
inline void UpdateParticipantRequest::set_allocated_identity(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.identity_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.identity_.IsDefault()) {
    _impl_.identity_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:livekit.UpdateParticipantRequest.identity)
}

// string metadata = 3;
inline void UpdateParticipantRequest::clear_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.metadata_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const std::string& UpdateParticipantRequest::metadata() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:livekit.UpdateParticipantRequest.metadata)
  return _internal_metadata();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void UpdateParticipantRequest::set_metadata(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.metadata_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:livekit.UpdateParticipantRequest.metadata)
}
inline std::string* PROTOBUF_NONNULL UpdateParticipantRequest::mutable_metadata()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_metadata();
  // @@protoc_insertion_point(field_mutable:livekit.UpdateParticipantRequest.metadata)
  return _s;
}
inline const std::string& UpdateParticipantRequest::_internal_metadata() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.metadata_.Get();
}
inline void UpdateParticipantRequest::_internal_set_metadata(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.metadata_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL UpdateParticipantRequest::_internal_mutable_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.metadata_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE UpdateParticipantRequest::release_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:livekit.UpdateParticipantRequest.metadata)
  if ((_impl_._has_bits_[0] & 0x00000004u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* released = _impl_.metadata_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.metadata_.Set("", GetArena());
  }
  return released;
}
inline void UpdateParticipantRequest::set_allocated_metadata(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.metadata_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.metadata_.IsDefault()) {
    _impl_.metadata_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:livekit.UpdateParticipantRequest.metadata)
}

// .livekit.ParticipantPermission permission = 4;
inline bool UpdateParticipantRequest::has_permission() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.permission_ != nullptr);
  return value;
}
inline const ::livekit::ParticipantPermission& UpdateParticipantRequest::_internal_permission() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::livekit::ParticipantPermission* p = _impl_.permission_;
  return p != nullptr ? *p : reinterpret_cast<const ::livekit::ParticipantPermission&>(::livekit::_ParticipantPermission_default_instance_);
}
inline const ::livekit::ParticipantPermission& UpdateParticipantRequest::permission() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:livekit.UpdateParticipantRequest.permission)
  return _internal_permission();
}
inline void UpdateParticipantRequest::unsafe_arena_set_allocated_permission(
    ::livekit::ParticipantPermission* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.permission_);
  }
  _impl_.permission_ = reinterpret_cast<::livekit::ParticipantPermission*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:livekit.UpdateParticipantRequest.permission)
}
inline ::livekit::ParticipantPermission* PROTOBUF_NULLABLE UpdateParticipantRequest::release_permission() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::livekit::ParticipantPermission* released = _impl_.permission_;
  _impl_.permission_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::livekit::ParticipantPermission* PROTOBUF_NULLABLE UpdateParticipantRequest::unsafe_arena_release_permission() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:livekit.UpdateParticipantRequest.permission)

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::livekit::ParticipantPermission* temp = _impl_.permission_;
  _impl_.permission_ = nullptr;
  return temp;
}
inline ::livekit::ParticipantPermission* PROTOBUF_NONNULL UpdateParticipantRequest::_internal_mutable_permission() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.permission_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::livekit::ParticipantPermission>(GetArena());
    _impl_.permission_ = reinterpret_cast<::livekit::ParticipantPermission*>(p);
  }
  return _impl_.permission_;
}
inline ::livekit::ParticipantPermission* PROTOBUF_NONNULL UpdateParticipantRequest::mutable_permission()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000010u;
  ::livekit::ParticipantPermission* _msg = _internal_mutable_permission();
  // @@protoc_insertion_point(field_mutable:livekit.UpdateParticipantRequest.permission)
  return _msg;
}
inline void UpdateParticipantRequest::set_allocated_permission(::livekit::ParticipantPermission* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.permission_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }

  _impl_.permission_ = reinterpret_cast<::livekit::ParticipantPermission*>(value);
  // @@protoc_insertion_point(field_set_allocated:livekit.UpdateParticipantRequest.permission)
}

// string name = 5;
inline void UpdateParticipantRequest::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const std::string& UpdateParticipantRequest::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:livekit.UpdateParticipantRequest.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void UpdateParticipantRequest::set_name(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:livekit.UpdateParticipantRequest.name)
}
inline std::string* PROTOBUF_NONNULL UpdateParticipantRequest::mutable_name()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:livekit.UpdateParticipantRequest.name)
  return _s;
}
inline const std::string& UpdateParticipantRequest::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void UpdateParticipantRequest::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.name_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL UpdateParticipantRequest::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE UpdateParticipantRequest::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:livekit.UpdateParticipantRequest.name)
  if ((_impl_._has_bits_[0] & 0x00000008u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000008u;
  auto* released = _impl_.name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.name_.Set("", GetArena());
  }
  return released;
}
inline void UpdateParticipantRequest::set_allocated_name(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  _impl_.name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:livekit.UpdateParticipantRequest.name)
}

// map<string, string> attributes = 6;
inline int UpdateParticipantRequest::_internal_attributes_size() const {
  return _internal_attributes().size();
}
inline int UpdateParticipantRequest::attributes_size() const {
  return _internal_attributes_size();
}
inline void UpdateParticipantRequest::clear_attributes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.attributes_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& UpdateParticipantRequest::_internal_attributes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.attributes_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& UpdateParticipantRequest::attributes() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:livekit.UpdateParticipantRequest.attributes)
  return _internal_attributes();
}
inline ::google::protobuf::Map<std::string, std::string>* PROTOBUF_NONNULL UpdateParticipantRequest::_internal_mutable_attributes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.attributes_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* PROTOBUF_NONNULL UpdateParticipantRequest::mutable_attributes()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:livekit.UpdateParticipantRequest.attributes)
  return _internal_mutable_attributes();
}

// -------------------------------------------------------------------

// UpdateSubscriptionsRequest

// string room = 1;
inline void UpdateSubscriptionsRequest::clear_room() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.room_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& UpdateSubscriptionsRequest::room() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:livekit.UpdateSubscriptionsRequest.room)
  return _internal_room();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void UpdateSubscriptionsRequest::set_room(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.room_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:livekit.UpdateSubscriptionsRequest.room)
}
inline std::string* PROTOBUF_NONNULL UpdateSubscriptionsRequest::mutable_room()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_room();
  // @@protoc_insertion_point(field_mutable:livekit.UpdateSubscriptionsRequest.room)
  return _s;
}
inline const std::string& UpdateSubscriptionsRequest::_internal_room() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.room_.Get();
}
inline void UpdateSubscriptionsRequest::_internal_set_room(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.room_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL UpdateSubscriptionsRequest::_internal_mutable_room() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.room_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE UpdateSubscriptionsRequest::release_room() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:livekit.UpdateSubscriptionsRequest.room)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.room_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.room_.Set("", GetArena());
  }
  return released;
}
inline void UpdateSubscriptionsRequest::set_allocated_room(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.room_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.room_.IsDefault()) {
    _impl_.room_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:livekit.UpdateSubscriptionsRequest.room)
}

// string identity = 2;
inline void UpdateSubscriptionsRequest::clear_identity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.identity_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& UpdateSubscriptionsRequest::identity() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:livekit.UpdateSubscriptionsRequest.identity)
  return _internal_identity();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void UpdateSubscriptionsRequest::set_identity(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.identity_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:livekit.UpdateSubscriptionsRequest.identity)
}
inline std::string* PROTOBUF_NONNULL UpdateSubscriptionsRequest::mutable_identity()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_identity();
  // @@protoc_insertion_point(field_mutable:livekit.UpdateSubscriptionsRequest.identity)
  return _s;
}
inline const std::string& UpdateSubscriptionsRequest::_internal_identity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.identity_.Get();
}
inline void UpdateSubscriptionsRequest::_internal_set_identity(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.identity_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL UpdateSubscriptionsRequest::_internal_mutable_identity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.identity_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE UpdateSubscriptionsRequest::release_identity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:livekit.UpdateSubscriptionsRequest.identity)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.identity_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.identity_.Set("", GetArena());
  }
  return released;
}
inline void UpdateSubscriptionsRequest::set_allocated_identity(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.identity_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.identity_.IsDefault()) {
    _impl_.identity_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:livekit.UpdateSubscriptionsRequest.identity)
}

// repeated string track_sids = 3;
inline int UpdateSubscriptionsRequest::_internal_track_sids_size() const {
  return _internal_track_sids().size();
}
inline int UpdateSubscriptionsRequest::track_sids_size() const {
  return _internal_track_sids_size();
}
inline void UpdateSubscriptionsRequest::clear_track_sids() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.track_sids_.Clear();
}
inline std::string* PROTOBUF_NONNULL UpdateSubscriptionsRequest::add_track_sids()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_track_sids()->Add();
  // @@protoc_insertion_point(field_add_mutable:livekit.UpdateSubscriptionsRequest.track_sids)
  return _s;
}
inline const std::string& UpdateSubscriptionsRequest::track_sids(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:livekit.UpdateSubscriptionsRequest.track_sids)
  return _internal_track_sids().Get(index);
}
inline std::string* PROTOBUF_NONNULL UpdateSubscriptionsRequest::mutable_track_sids(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:livekit.UpdateSubscriptionsRequest.track_sids)
  return _internal_mutable_track_sids()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void UpdateSubscriptionsRequest::set_track_sids(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(*_internal_mutable_track_sids()->Mutable(index), std::forward<Arg_>(value),
                        args... );
  // @@protoc_insertion_point(field_set:livekit.UpdateSubscriptionsRequest.track_sids)
}
template <typename Arg_, typename... Args_>
inline void UpdateSubscriptionsRequest::add_track_sids(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_track_sids(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:livekit.UpdateSubscriptionsRequest.track_sids)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>& UpdateSubscriptionsRequest::track_sids() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:livekit.UpdateSubscriptionsRequest.track_sids)
  return _internal_track_sids();
}
inline ::google::protobuf::RepeatedPtrField<std::string>* PROTOBUF_NONNULL
UpdateSubscriptionsRequest::mutable_track_sids() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:livekit.UpdateSubscriptionsRequest.track_sids)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_track_sids();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
UpdateSubscriptionsRequest::_internal_track_sids() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.track_sids_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>* PROTOBUF_NONNULL
UpdateSubscriptionsRequest::_internal_mutable_track_sids() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.track_sids_;
}

// bool subscribe = 4;
inline void UpdateSubscriptionsRequest::clear_subscribe() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.subscribe_ = false;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline bool UpdateSubscriptionsRequest::subscribe() const {
  // @@protoc_insertion_point(field_get:livekit.UpdateSubscriptionsRequest.subscribe)
  return _internal_subscribe();
}
inline void UpdateSubscriptionsRequest::set_subscribe(bool value) {
  _internal_set_subscribe(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:livekit.UpdateSubscriptionsRequest.subscribe)
}
inline bool UpdateSubscriptionsRequest::_internal_subscribe() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.subscribe_;
}
inline void UpdateSubscriptionsRequest::_internal_set_subscribe(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.subscribe_ = value;
}

// repeated .livekit.ParticipantTracks participant_tracks = 5;
inline int UpdateSubscriptionsRequest::_internal_participant_tracks_size() const {
  return _internal_participant_tracks().size();
}
inline int UpdateSubscriptionsRequest::participant_tracks_size() const {
  return _internal_participant_tracks_size();
}
inline ::livekit::ParticipantTracks* PROTOBUF_NONNULL UpdateSubscriptionsRequest::mutable_participant_tracks(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:livekit.UpdateSubscriptionsRequest.participant_tracks)
  return _internal_mutable_participant_tracks()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::livekit::ParticipantTracks>* PROTOBUF_NONNULL UpdateSubscriptionsRequest::mutable_participant_tracks()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:livekit.UpdateSubscriptionsRequest.participant_tracks)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_participant_tracks();
}
inline const ::livekit::ParticipantTracks& UpdateSubscriptionsRequest::participant_tracks(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:livekit.UpdateSubscriptionsRequest.participant_tracks)
  return _internal_participant_tracks().Get(index);
}
inline ::livekit::ParticipantTracks* PROTOBUF_NONNULL UpdateSubscriptionsRequest::add_participant_tracks()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::livekit::ParticipantTracks* _add = _internal_mutable_participant_tracks()->Add();
  // @@protoc_insertion_point(field_add:livekit.UpdateSubscriptionsRequest.participant_tracks)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::livekit::ParticipantTracks>& UpdateSubscriptionsRequest::participant_tracks() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:livekit.UpdateSubscriptionsRequest.participant_tracks)
  return _internal_participant_tracks();
}
inline const ::google::protobuf::RepeatedPtrField<::livekit::ParticipantTracks>&
UpdateSubscriptionsRequest::_internal_participant_tracks() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.participant_tracks_;
}
inline ::google::protobuf::RepeatedPtrField<::livekit::ParticipantTracks>* PROTOBUF_NONNULL
UpdateSubscriptionsRequest::_internal_mutable_participant_tracks() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.participant_tracks_;
}

// -------------------------------------------------------------------

// UpdateSubscriptionsResponse

// -------------------------------------------------------------------

// SendDataRequest

// string room = 1;
inline void SendDataRequest::clear_room() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.room_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& SendDataRequest::room() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:livekit.SendDataRequest.room)
  return _internal_room();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void SendDataRequest::set_room(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.room_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:livekit.SendDataRequest.room)
}
inline std::string* PROTOBUF_NONNULL SendDataRequest::mutable_room()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_room();
  // @@protoc_insertion_point(field_mutable:livekit.SendDataRequest.room)
  return _s;
}
inline const std::string& SendDataRequest::_internal_room() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.room_.Get();
}
inline void SendDataRequest::_internal_set_room(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.room_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL SendDataRequest::_internal_mutable_room() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.room_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE SendDataRequest::release_room() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:livekit.SendDataRequest.room)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.room_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.room_.Set("", GetArena());
  }
  return released;
}
inline void SendDataRequest::set_allocated_room(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.room_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.room_.IsDefault()) {
    _impl_.room_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:livekit.SendDataRequest.room)
}

// bytes data = 2;
inline void SendDataRequest::clear_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& SendDataRequest::data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:livekit.SendDataRequest.data)
  return _internal_data();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void SendDataRequest::set_data(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.data_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:livekit.SendDataRequest.data)
}
inline std::string* PROTOBUF_NONNULL SendDataRequest::mutable_data()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_data();
  // @@protoc_insertion_point(field_mutable:livekit.SendDataRequest.data)
  return _s;
}
inline const std::string& SendDataRequest::_internal_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.data_.Get();
}
inline void SendDataRequest::_internal_set_data(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.data_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL SendDataRequest::_internal_mutable_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.data_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE SendDataRequest::release_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:livekit.SendDataRequest.data)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.data_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.data_.Set("", GetArena());
  }
  return released;
}
inline void SendDataRequest::set_allocated_data(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.data_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.data_.IsDefault()) {
    _impl_.data_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:livekit.SendDataRequest.data)
}

// .livekit.DataPacket.Kind kind = 3;
inline void SendDataRequest::clear_kind() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.kind_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::livekit::DataPacket_Kind SendDataRequest::kind() const {
  // @@protoc_insertion_point(field_get:livekit.SendDataRequest.kind)
  return _internal_kind();
}
inline void SendDataRequest::set_kind(::livekit::DataPacket_Kind value) {
  _internal_set_kind(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:livekit.SendDataRequest.kind)
}
inline ::livekit::DataPacket_Kind SendDataRequest::_internal_kind() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::livekit::DataPacket_Kind>(_impl_.kind_);
}
inline void SendDataRequest::_internal_set_kind(::livekit::DataPacket_Kind value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.kind_ = value;
}

// repeated string destination_sids = 4 [deprecated = true];
inline int SendDataRequest::_internal_destination_sids_size() const {
  return _internal_destination_sids().size();
}
inline int SendDataRequest::destination_sids_size() const {
  return _internal_destination_sids_size();
}
inline void SendDataRequest::clear_destination_sids() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.destination_sids_.Clear();
}
inline std::string* PROTOBUF_NONNULL SendDataRequest::add_destination_sids()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_destination_sids()->Add();
  // @@protoc_insertion_point(field_add_mutable:livekit.SendDataRequest.destination_sids)
  return _s;
}
inline const std::string& SendDataRequest::destination_sids(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:livekit.SendDataRequest.destination_sids)
  return _internal_destination_sids().Get(index);
}
inline std::string* PROTOBUF_NONNULL SendDataRequest::mutable_destination_sids(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:livekit.SendDataRequest.destination_sids)
  return _internal_mutable_destination_sids()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void SendDataRequest::set_destination_sids(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(*_internal_mutable_destination_sids()->Mutable(index), std::forward<Arg_>(value),
                        args... );
  // @@protoc_insertion_point(field_set:livekit.SendDataRequest.destination_sids)
}
template <typename Arg_, typename... Args_>
inline void SendDataRequest::add_destination_sids(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_destination_sids(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:livekit.SendDataRequest.destination_sids)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>& SendDataRequest::destination_sids() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:livekit.SendDataRequest.destination_sids)
  return _internal_destination_sids();
}
inline ::google::protobuf::RepeatedPtrField<std::string>* PROTOBUF_NONNULL
SendDataRequest::mutable_destination_sids() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:livekit.SendDataRequest.destination_sids)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_destination_sids();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
SendDataRequest::_internal_destination_sids() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.destination_sids_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>* PROTOBUF_NONNULL
SendDataRequest::_internal_mutable_destination_sids() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.destination_sids_;
}

// repeated string destination_identities = 6;
inline int SendDataRequest::_internal_destination_identities_size() const {
  return _internal_destination_identities().size();
}
inline int SendDataRequest::destination_identities_size() const {
  return _internal_destination_identities_size();
}
inline void SendDataRequest::clear_destination_identities() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.destination_identities_.Clear();
}
inline std::string* PROTOBUF_NONNULL SendDataRequest::add_destination_identities()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_destination_identities()->Add();
  // @@protoc_insertion_point(field_add_mutable:livekit.SendDataRequest.destination_identities)
  return _s;
}
inline const std::string& SendDataRequest::destination_identities(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:livekit.SendDataRequest.destination_identities)
  return _internal_destination_identities().Get(index);
}
inline std::string* PROTOBUF_NONNULL SendDataRequest::mutable_destination_identities(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:livekit.SendDataRequest.destination_identities)
  return _internal_mutable_destination_identities()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void SendDataRequest::set_destination_identities(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(*_internal_mutable_destination_identities()->Mutable(index), std::forward<Arg_>(value),
                        args... );
  // @@protoc_insertion_point(field_set:livekit.SendDataRequest.destination_identities)
}
template <typename Arg_, typename... Args_>
inline void SendDataRequest::add_destination_identities(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_destination_identities(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:livekit.SendDataRequest.destination_identities)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>& SendDataRequest::destination_identities() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:livekit.SendDataRequest.destination_identities)
  return _internal_destination_identities();
}
inline ::google::protobuf::RepeatedPtrField<std::string>* PROTOBUF_NONNULL
SendDataRequest::mutable_destination_identities() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:livekit.SendDataRequest.destination_identities)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_destination_identities();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
SendDataRequest::_internal_destination_identities() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.destination_identities_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>* PROTOBUF_NONNULL
SendDataRequest::_internal_mutable_destination_identities() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.destination_identities_;
}

// optional string topic = 5;
inline bool SendDataRequest::has_topic() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void SendDataRequest::clear_topic() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.topic_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const std::string& SendDataRequest::topic() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:livekit.SendDataRequest.topic)
  return _internal_topic();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void SendDataRequest::set_topic(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.topic_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:livekit.SendDataRequest.topic)
}
inline std::string* PROTOBUF_NONNULL SendDataRequest::mutable_topic()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_topic();
  // @@protoc_insertion_point(field_mutable:livekit.SendDataRequest.topic)
  return _s;
}
inline const std::string& SendDataRequest::_internal_topic() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.topic_.Get();
}
inline void SendDataRequest::_internal_set_topic(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.topic_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL SendDataRequest::_internal_mutable_topic() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.topic_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE SendDataRequest::release_topic() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:livekit.SendDataRequest.topic)
  if ((_impl_._has_bits_[0] & 0x00000004u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* released = _impl_.topic_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.topic_.Set("", GetArena());
  }
  return released;
}
inline void SendDataRequest::set_allocated_topic(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.topic_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.topic_.IsDefault()) {
    _impl_.topic_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:livekit.SendDataRequest.topic)
}

// bytes nonce = 7;
inline void SendDataRequest::clear_nonce() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nonce_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const std::string& SendDataRequest::nonce() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:livekit.SendDataRequest.nonce)
  return _internal_nonce();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void SendDataRequest::set_nonce(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.nonce_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:livekit.SendDataRequest.nonce)
}
inline std::string* PROTOBUF_NONNULL SendDataRequest::mutable_nonce()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_nonce();
  // @@protoc_insertion_point(field_mutable:livekit.SendDataRequest.nonce)
  return _s;
}
inline const std::string& SendDataRequest::_internal_nonce() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.nonce_.Get();
}
inline void SendDataRequest::_internal_set_nonce(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.nonce_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL SendDataRequest::_internal_mutable_nonce() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  return _impl_.nonce_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE SendDataRequest::release_nonce() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:livekit.SendDataRequest.nonce)
  if ((_impl_._has_bits_[0] & 0x00000008u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000008u;
  auto* released = _impl_.nonce_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.nonce_.Set("", GetArena());
  }
  return released;
}
inline void SendDataRequest::set_allocated_nonce(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  _impl_.nonce_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.nonce_.IsDefault()) {
    _impl_.nonce_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:livekit.SendDataRequest.nonce)
}

// -------------------------------------------------------------------

// SendDataResponse

// -------------------------------------------------------------------

// UpdateRoomMetadataRequest

// string room = 1;
inline void UpdateRoomMetadataRequest::clear_room() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.room_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& UpdateRoomMetadataRequest::room() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:livekit.UpdateRoomMetadataRequest.room)
  return _internal_room();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void UpdateRoomMetadataRequest::set_room(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.room_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:livekit.UpdateRoomMetadataRequest.room)
}
inline std::string* PROTOBUF_NONNULL UpdateRoomMetadataRequest::mutable_room()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_room();
  // @@protoc_insertion_point(field_mutable:livekit.UpdateRoomMetadataRequest.room)
  return _s;
}
inline const std::string& UpdateRoomMetadataRequest::_internal_room() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.room_.Get();
}
inline void UpdateRoomMetadataRequest::_internal_set_room(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.room_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL UpdateRoomMetadataRequest::_internal_mutable_room() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.room_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE UpdateRoomMetadataRequest::release_room() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:livekit.UpdateRoomMetadataRequest.room)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.room_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.room_.Set("", GetArena());
  }
  return released;
}
inline void UpdateRoomMetadataRequest::set_allocated_room(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.room_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.room_.IsDefault()) {
    _impl_.room_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:livekit.UpdateRoomMetadataRequest.room)
}

// string metadata = 2;
inline void UpdateRoomMetadataRequest::clear_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.metadata_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& UpdateRoomMetadataRequest::metadata() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:livekit.UpdateRoomMetadataRequest.metadata)
  return _internal_metadata();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void UpdateRoomMetadataRequest::set_metadata(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.metadata_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:livekit.UpdateRoomMetadataRequest.metadata)
}
inline std::string* PROTOBUF_NONNULL UpdateRoomMetadataRequest::mutable_metadata()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_metadata();
  // @@protoc_insertion_point(field_mutable:livekit.UpdateRoomMetadataRequest.metadata)
  return _s;
}
inline const std::string& UpdateRoomMetadataRequest::_internal_metadata() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.metadata_.Get();
}
inline void UpdateRoomMetadataRequest::_internal_set_metadata(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.metadata_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL UpdateRoomMetadataRequest::_internal_mutable_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.metadata_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE UpdateRoomMetadataRequest::release_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:livekit.UpdateRoomMetadataRequest.metadata)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.metadata_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.metadata_.Set("", GetArena());
  }
  return released;
}
inline void UpdateRoomMetadataRequest::set_allocated_metadata(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.metadata_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.metadata_.IsDefault()) {
    _impl_.metadata_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:livekit.UpdateRoomMetadataRequest.metadata)
}

// -------------------------------------------------------------------

// RoomConfiguration

// string name = 1;
inline void RoomConfiguration::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& RoomConfiguration::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:livekit.RoomConfiguration.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void RoomConfiguration::set_name(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:livekit.RoomConfiguration.name)
}
inline std::string* PROTOBUF_NONNULL RoomConfiguration::mutable_name()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:livekit.RoomConfiguration.name)
  return _s;
}
inline const std::string& RoomConfiguration::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void RoomConfiguration::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.name_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL RoomConfiguration::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE RoomConfiguration::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:livekit.RoomConfiguration.name)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.name_.Set("", GetArena());
  }
  return released;
}
inline void RoomConfiguration::set_allocated_name(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:livekit.RoomConfiguration.name)
}

// uint32 empty_timeout = 2;
inline void RoomConfiguration::clear_empty_timeout() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.empty_timeout_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::uint32_t RoomConfiguration::empty_timeout() const {
  // @@protoc_insertion_point(field_get:livekit.RoomConfiguration.empty_timeout)
  return _internal_empty_timeout();
}
inline void RoomConfiguration::set_empty_timeout(::uint32_t value) {
  _internal_set_empty_timeout(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:livekit.RoomConfiguration.empty_timeout)
}
inline ::uint32_t RoomConfiguration::_internal_empty_timeout() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.empty_timeout_;
}
inline void RoomConfiguration::_internal_set_empty_timeout(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.empty_timeout_ = value;
}

// uint32 departure_timeout = 3;
inline void RoomConfiguration::clear_departure_timeout() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.departure_timeout_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::uint32_t RoomConfiguration::departure_timeout() const {
  // @@protoc_insertion_point(field_get:livekit.RoomConfiguration.departure_timeout)
  return _internal_departure_timeout();
}
inline void RoomConfiguration::set_departure_timeout(::uint32_t value) {
  _internal_set_departure_timeout(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:livekit.RoomConfiguration.departure_timeout)
}
inline ::uint32_t RoomConfiguration::_internal_departure_timeout() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.departure_timeout_;
}
inline void RoomConfiguration::_internal_set_departure_timeout(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.departure_timeout_ = value;
}

// uint32 max_participants = 4;
inline void RoomConfiguration::clear_max_participants() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_participants_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::uint32_t RoomConfiguration::max_participants() const {
  // @@protoc_insertion_point(field_get:livekit.RoomConfiguration.max_participants)
  return _internal_max_participants();
}
inline void RoomConfiguration::set_max_participants(::uint32_t value) {
  _internal_set_max_participants(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:livekit.RoomConfiguration.max_participants)
}
inline ::uint32_t RoomConfiguration::_internal_max_participants() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.max_participants_;
}
inline void RoomConfiguration::_internal_set_max_participants(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_participants_ = value;
}

// .livekit.RoomEgress egress = 5;
inline bool RoomConfiguration::has_egress() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.egress_ != nullptr);
  return value;
}
inline void RoomConfiguration::clear_egress() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.egress_ != nullptr) _impl_.egress_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::livekit::RoomEgress& RoomConfiguration::_internal_egress() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::livekit::RoomEgress* p = _impl_.egress_;
  return p != nullptr ? *p : reinterpret_cast<const ::livekit::RoomEgress&>(::livekit::_RoomEgress_default_instance_);
}
inline const ::livekit::RoomEgress& RoomConfiguration::egress() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:livekit.RoomConfiguration.egress)
  return _internal_egress();
}
inline void RoomConfiguration::unsafe_arena_set_allocated_egress(
    ::livekit::RoomEgress* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.egress_);
  }
  _impl_.egress_ = reinterpret_cast<::livekit::RoomEgress*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:livekit.RoomConfiguration.egress)
}
inline ::livekit::RoomEgress* PROTOBUF_NULLABLE RoomConfiguration::release_egress() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::livekit::RoomEgress* released = _impl_.egress_;
  _impl_.egress_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::livekit::RoomEgress* PROTOBUF_NULLABLE RoomConfiguration::unsafe_arena_release_egress() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:livekit.RoomConfiguration.egress)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::livekit::RoomEgress* temp = _impl_.egress_;
  _impl_.egress_ = nullptr;
  return temp;
}
inline ::livekit::RoomEgress* PROTOBUF_NONNULL RoomConfiguration::_internal_mutable_egress() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.egress_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::livekit::RoomEgress>(GetArena());
    _impl_.egress_ = reinterpret_cast<::livekit::RoomEgress*>(p);
  }
  return _impl_.egress_;
}
inline ::livekit::RoomEgress* PROTOBUF_NONNULL RoomConfiguration::mutable_egress()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::livekit::RoomEgress* _msg = _internal_mutable_egress();
  // @@protoc_insertion_point(field_mutable:livekit.RoomConfiguration.egress)
  return _msg;
}
inline void RoomConfiguration::set_allocated_egress(::livekit::RoomEgress* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.egress_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.egress_ = reinterpret_cast<::livekit::RoomEgress*>(value);
  // @@protoc_insertion_point(field_set_allocated:livekit.RoomConfiguration.egress)
}

// uint32 min_playout_delay = 7;
inline void RoomConfiguration::clear_min_playout_delay() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_playout_delay_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::uint32_t RoomConfiguration::min_playout_delay() const {
  // @@protoc_insertion_point(field_get:livekit.RoomConfiguration.min_playout_delay)
  return _internal_min_playout_delay();
}
inline void RoomConfiguration::set_min_playout_delay(::uint32_t value) {
  _internal_set_min_playout_delay(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:livekit.RoomConfiguration.min_playout_delay)
}
inline ::uint32_t RoomConfiguration::_internal_min_playout_delay() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.min_playout_delay_;
}
inline void RoomConfiguration::_internal_set_min_playout_delay(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_playout_delay_ = value;
}

// uint32 max_playout_delay = 8;
inline void RoomConfiguration::clear_max_playout_delay() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_playout_delay_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline ::uint32_t RoomConfiguration::max_playout_delay() const {
  // @@protoc_insertion_point(field_get:livekit.RoomConfiguration.max_playout_delay)
  return _internal_max_playout_delay();
}
inline void RoomConfiguration::set_max_playout_delay(::uint32_t value) {
  _internal_set_max_playout_delay(value);
  _impl_._has_bits_[0] |= 0x00000040u;
  // @@protoc_insertion_point(field_set:livekit.RoomConfiguration.max_playout_delay)
}
inline ::uint32_t RoomConfiguration::_internal_max_playout_delay() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.max_playout_delay_;
}
inline void RoomConfiguration::_internal_set_max_playout_delay(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_playout_delay_ = value;
}

// bool sync_streams = 9;
inline void RoomConfiguration::clear_sync_streams() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sync_streams_ = false;
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline bool RoomConfiguration::sync_streams() const {
  // @@protoc_insertion_point(field_get:livekit.RoomConfiguration.sync_streams)
  return _internal_sync_streams();
}
inline void RoomConfiguration::set_sync_streams(bool value) {
  _internal_set_sync_streams(value);
  _impl_._has_bits_[0] |= 0x00000080u;
  // @@protoc_insertion_point(field_set:livekit.RoomConfiguration.sync_streams)
}
inline bool RoomConfiguration::_internal_sync_streams() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sync_streams_;
}
inline void RoomConfiguration::_internal_set_sync_streams(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sync_streams_ = value;
}

// repeated .livekit.RoomAgentDispatch agents = 10;
inline int RoomConfiguration::_internal_agents_size() const {
  return _internal_agents().size();
}
inline int RoomConfiguration::agents_size() const {
  return _internal_agents_size();
}
inline ::livekit::RoomAgentDispatch* PROTOBUF_NONNULL RoomConfiguration::mutable_agents(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:livekit.RoomConfiguration.agents)
  return _internal_mutable_agents()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::livekit::RoomAgentDispatch>* PROTOBUF_NONNULL RoomConfiguration::mutable_agents()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:livekit.RoomConfiguration.agents)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_agents();
}
inline const ::livekit::RoomAgentDispatch& RoomConfiguration::agents(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:livekit.RoomConfiguration.agents)
  return _internal_agents().Get(index);
}
inline ::livekit::RoomAgentDispatch* PROTOBUF_NONNULL RoomConfiguration::add_agents()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::livekit::RoomAgentDispatch* _add = _internal_mutable_agents()->Add();
  // @@protoc_insertion_point(field_add:livekit.RoomConfiguration.agents)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::livekit::RoomAgentDispatch>& RoomConfiguration::agents() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:livekit.RoomConfiguration.agents)
  return _internal_agents();
}
inline const ::google::protobuf::RepeatedPtrField<::livekit::RoomAgentDispatch>&
RoomConfiguration::_internal_agents() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.agents_;
}
inline ::google::protobuf::RepeatedPtrField<::livekit::RoomAgentDispatch>* PROTOBUF_NONNULL
RoomConfiguration::_internal_mutable_agents() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.agents_;
}

// -------------------------------------------------------------------

// ForwardParticipantRequest

// string room = 1;
inline void ForwardParticipantRequest::clear_room() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.room_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& ForwardParticipantRequest::room() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:livekit.ForwardParticipantRequest.room)
  return _internal_room();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ForwardParticipantRequest::set_room(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.room_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:livekit.ForwardParticipantRequest.room)
}
inline std::string* PROTOBUF_NONNULL ForwardParticipantRequest::mutable_room()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_room();
  // @@protoc_insertion_point(field_mutable:livekit.ForwardParticipantRequest.room)
  return _s;
}
inline const std::string& ForwardParticipantRequest::_internal_room() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.room_.Get();
}
inline void ForwardParticipantRequest::_internal_set_room(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.room_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL ForwardParticipantRequest::_internal_mutable_room() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.room_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE ForwardParticipantRequest::release_room() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:livekit.ForwardParticipantRequest.room)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.room_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.room_.Set("", GetArena());
  }
  return released;
}
inline void ForwardParticipantRequest::set_allocated_room(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.room_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.room_.IsDefault()) {
    _impl_.room_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:livekit.ForwardParticipantRequest.room)
}

// string identity = 2;
inline void ForwardParticipantRequest::clear_identity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.identity_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& ForwardParticipantRequest::identity() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:livekit.ForwardParticipantRequest.identity)
  return _internal_identity();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ForwardParticipantRequest::set_identity(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.identity_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:livekit.ForwardParticipantRequest.identity)
}
inline std::string* PROTOBUF_NONNULL ForwardParticipantRequest::mutable_identity()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_identity();
  // @@protoc_insertion_point(field_mutable:livekit.ForwardParticipantRequest.identity)
  return _s;
}
inline const std::string& ForwardParticipantRequest::_internal_identity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.identity_.Get();
}
inline void ForwardParticipantRequest::_internal_set_identity(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.identity_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL ForwardParticipantRequest::_internal_mutable_identity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.identity_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE ForwardParticipantRequest::release_identity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:livekit.ForwardParticipantRequest.identity)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.identity_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.identity_.Set("", GetArena());
  }
  return released;
}
inline void ForwardParticipantRequest::set_allocated_identity(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.identity_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.identity_.IsDefault()) {
    _impl_.identity_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:livekit.ForwardParticipantRequest.identity)
}

// string destination_room = 3;
inline void ForwardParticipantRequest::clear_destination_room() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.destination_room_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const std::string& ForwardParticipantRequest::destination_room() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:livekit.ForwardParticipantRequest.destination_room)
  return _internal_destination_room();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ForwardParticipantRequest::set_destination_room(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.destination_room_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:livekit.ForwardParticipantRequest.destination_room)
}
inline std::string* PROTOBUF_NONNULL ForwardParticipantRequest::mutable_destination_room()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_destination_room();
  // @@protoc_insertion_point(field_mutable:livekit.ForwardParticipantRequest.destination_room)
  return _s;
}
inline const std::string& ForwardParticipantRequest::_internal_destination_room() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.destination_room_.Get();
}
inline void ForwardParticipantRequest::_internal_set_destination_room(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.destination_room_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL ForwardParticipantRequest::_internal_mutable_destination_room() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.destination_room_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE ForwardParticipantRequest::release_destination_room() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:livekit.ForwardParticipantRequest.destination_room)
  if ((_impl_._has_bits_[0] & 0x00000004u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* released = _impl_.destination_room_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.destination_room_.Set("", GetArena());
  }
  return released;
}
inline void ForwardParticipantRequest::set_allocated_destination_room(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.destination_room_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.destination_room_.IsDefault()) {
    _impl_.destination_room_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:livekit.ForwardParticipantRequest.destination_room)
}

// -------------------------------------------------------------------

// ForwardParticipantResponse

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace livekit


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // livekit_5froom_2eproto_2epb_2eh
