// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: livekit_agent.proto
// Protobuf C++ Version: 6.30.1

#include "livekit_agent.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace livekit {

inline constexpr WorkerPong::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        last_timestamp_{::int64_t{0}},
        timestamp_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR WorkerPong::WorkerPong(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(WorkerPong_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct WorkerPongDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WorkerPongDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WorkerPongDefaultTypeInternal() {}
  union {
    WorkerPong _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WorkerPongDefaultTypeInternal _WorkerPong_default_instance_;

inline constexpr WorkerPing::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        timestamp_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR WorkerPing::WorkerPing(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(WorkerPing_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct WorkerPingDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WorkerPingDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WorkerPingDefaultTypeInternal() {}
  union {
    WorkerPing _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WorkerPingDefaultTypeInternal _WorkerPing_default_instance_;

inline constexpr UpdateWorkerStatus::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        status_{static_cast< ::livekit::WorkerStatus >(0)},
        load_{0},
        job_count_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR UpdateWorkerStatus::UpdateWorkerStatus(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(UpdateWorkerStatus_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct UpdateWorkerStatusDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateWorkerStatusDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateWorkerStatusDefaultTypeInternal() {}
  union {
    UpdateWorkerStatus _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateWorkerStatusDefaultTypeInternal _UpdateWorkerStatus_default_instance_;

inline constexpr UpdateJobStatus::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        job_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        error_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        status_{static_cast< ::livekit::JobStatus >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR UpdateJobStatus::UpdateJobStatus(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(UpdateJobStatus_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct UpdateJobStatusDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateJobStatusDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateJobStatusDefaultTypeInternal() {}
  union {
    UpdateJobStatus _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateJobStatusDefaultTypeInternal _UpdateJobStatus_default_instance_;

inline constexpr MigrateJobRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : job_ids_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR MigrateJobRequest::MigrateJobRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(MigrateJobRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MigrateJobRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MigrateJobRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MigrateJobRequestDefaultTypeInternal() {}
  union {
    MigrateJobRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MigrateJobRequestDefaultTypeInternal _MigrateJobRequest_default_instance_;

inline constexpr JobTermination::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        job_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR JobTermination::JobTermination(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(JobTermination_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct JobTerminationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR JobTerminationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~JobTerminationDefaultTypeInternal() {}
  union {
    JobTermination _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 JobTerminationDefaultTypeInternal _JobTermination_default_instance_;

inline constexpr JobState::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        error_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        participant_identity_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        started_at_{::int64_t{0}},
        ended_at_{::int64_t{0}},
        updated_at_{::int64_t{0}},
        status_{static_cast< ::livekit::JobStatus >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR JobState::JobState(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(JobState_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct JobStateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR JobStateDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~JobStateDefaultTypeInternal() {}
  union {
    JobState _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 JobStateDefaultTypeInternal _JobState_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR AvailabilityResponse_ParticipantAttributesEntry_DoNotUse::AvailabilityResponse_ParticipantAttributesEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : AvailabilityResponse_ParticipantAttributesEntry_DoNotUse::MapEntry(AvailabilityResponse_ParticipantAttributesEntry_DoNotUse_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : AvailabilityResponse_ParticipantAttributesEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct AvailabilityResponse_ParticipantAttributesEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AvailabilityResponse_ParticipantAttributesEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AvailabilityResponse_ParticipantAttributesEntry_DoNotUseDefaultTypeInternal() {}
  union {
    AvailabilityResponse_ParticipantAttributesEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AvailabilityResponse_ParticipantAttributesEntry_DoNotUseDefaultTypeInternal _AvailabilityResponse_ParticipantAttributesEntry_DoNotUse_default_instance_;

inline constexpr RegisterWorkerResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        worker_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        server_info_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR RegisterWorkerResponse::RegisterWorkerResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(RegisterWorkerResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RegisterWorkerResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RegisterWorkerResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RegisterWorkerResponseDefaultTypeInternal() {}
  union {
    RegisterWorkerResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RegisterWorkerResponseDefaultTypeInternal _RegisterWorkerResponse_default_instance_;

inline constexpr RegisterWorkerRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        version_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        namespace__(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        agent_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        allowed_permissions_{nullptr},
        type_{static_cast< ::livekit::JobType >(0)},
        ping_interval_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR RegisterWorkerRequest::RegisterWorkerRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(RegisterWorkerRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RegisterWorkerRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RegisterWorkerRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RegisterWorkerRequestDefaultTypeInternal() {}
  union {
    RegisterWorkerRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RegisterWorkerRequestDefaultTypeInternal _RegisterWorkerRequest_default_instance_;

inline constexpr AvailabilityResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        participant_attributes_{},
        job_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        participant_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        participant_identity_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        participant_metadata_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        available_{false},
        supports_resume_{false} {}

template <typename>
PROTOBUF_CONSTEXPR AvailabilityResponse::AvailabilityResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(AvailabilityResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AvailabilityResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AvailabilityResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AvailabilityResponseDefaultTypeInternal() {}
  union {
    AvailabilityResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AvailabilityResponseDefaultTypeInternal _AvailabilityResponse_default_instance_;

inline constexpr SimulateJobRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        room_{nullptr},
        participant_{nullptr},
        type_{static_cast< ::livekit::JobType >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR SimulateJobRequest::SimulateJobRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(SimulateJobRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SimulateJobRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SimulateJobRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SimulateJobRequestDefaultTypeInternal() {}
  union {
    SimulateJobRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SimulateJobRequestDefaultTypeInternal _SimulateJobRequest_default_instance_;

inline constexpr Job::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        namespace__(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        metadata_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        agent_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        dispatch_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        room_{nullptr},
        participant_{nullptr},
        state_{nullptr},
        type_{static_cast< ::livekit::JobType >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR Job::Job(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Job_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct JobDefaultTypeInternal {
  PROTOBUF_CONSTEXPR JobDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~JobDefaultTypeInternal() {}
  union {
    Job _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 JobDefaultTypeInternal _Job_default_instance_;

inline constexpr WorkerMessage::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : message_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR WorkerMessage::WorkerMessage(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(WorkerMessage_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct WorkerMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WorkerMessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WorkerMessageDefaultTypeInternal() {}
  union {
    WorkerMessage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WorkerMessageDefaultTypeInternal _WorkerMessage_default_instance_;

inline constexpr JobAssignment::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        url_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        token_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        job_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR JobAssignment::JobAssignment(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(JobAssignment_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct JobAssignmentDefaultTypeInternal {
  PROTOBUF_CONSTEXPR JobAssignmentDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~JobAssignmentDefaultTypeInternal() {}
  union {
    JobAssignment _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 JobAssignmentDefaultTypeInternal _JobAssignment_default_instance_;

inline constexpr AvailabilityRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        job_{nullptr},
        resuming_{false} {}

template <typename>
PROTOBUF_CONSTEXPR AvailabilityRequest::AvailabilityRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(AvailabilityRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AvailabilityRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AvailabilityRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AvailabilityRequestDefaultTypeInternal() {}
  union {
    AvailabilityRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AvailabilityRequestDefaultTypeInternal _AvailabilityRequest_default_instance_;

inline constexpr ServerMessage::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : message_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR ServerMessage::ServerMessage(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ServerMessage_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ServerMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ServerMessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ServerMessageDefaultTypeInternal() {}
  union {
    ServerMessage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ServerMessageDefaultTypeInternal _ServerMessage_default_instance_;
}  // namespace livekit
static const ::_pb::EnumDescriptor* PROTOBUF_NONNULL
    file_level_enum_descriptors_livekit_5fagent_2eproto[3];
static constexpr const ::_pb::ServiceDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_service_descriptors_livekit_5fagent_2eproto = nullptr;
const ::uint32_t
    TableStruct_livekit_5fagent_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::livekit::Job, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::livekit::Job, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::livekit::Job, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::livekit::Job, _impl_.dispatch_id_),
        PROTOBUF_FIELD_OFFSET(::livekit::Job, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::livekit::Job, _impl_.room_),
        PROTOBUF_FIELD_OFFSET(::livekit::Job, _impl_.participant_),
        PROTOBUF_FIELD_OFFSET(::livekit::Job, _impl_.namespace__),
        PROTOBUF_FIELD_OFFSET(::livekit::Job, _impl_.metadata_),
        PROTOBUF_FIELD_OFFSET(::livekit::Job, _impl_.agent_name_),
        PROTOBUF_FIELD_OFFSET(::livekit::Job, _impl_.state_),
        0,
        4,
        8,
        5,
        6,
        1,
        2,
        3,
        7,
        PROTOBUF_FIELD_OFFSET(::livekit::JobState, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::livekit::JobState, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::livekit::JobState, _impl_.status_),
        PROTOBUF_FIELD_OFFSET(::livekit::JobState, _impl_.error_),
        PROTOBUF_FIELD_OFFSET(::livekit::JobState, _impl_.started_at_),
        PROTOBUF_FIELD_OFFSET(::livekit::JobState, _impl_.ended_at_),
        PROTOBUF_FIELD_OFFSET(::livekit::JobState, _impl_.updated_at_),
        PROTOBUF_FIELD_OFFSET(::livekit::JobState, _impl_.participant_identity_),
        5,
        0,
        2,
        3,
        4,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::livekit::WorkerMessage, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::livekit::WorkerMessage, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::livekit::WorkerMessage, _impl_.message_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::livekit::ServerMessage, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::livekit::ServerMessage, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::livekit::ServerMessage, _impl_.message_),
        PROTOBUF_FIELD_OFFSET(::livekit::SimulateJobRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::livekit::SimulateJobRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::livekit::SimulateJobRequest, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::livekit::SimulateJobRequest, _impl_.room_),
        PROTOBUF_FIELD_OFFSET(::livekit::SimulateJobRequest, _impl_.participant_),
        2,
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::livekit::WorkerPing, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::livekit::WorkerPing, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::livekit::WorkerPing, _impl_.timestamp_),
        0,
        PROTOBUF_FIELD_OFFSET(::livekit::WorkerPong, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::livekit::WorkerPong, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::livekit::WorkerPong, _impl_.last_timestamp_),
        PROTOBUF_FIELD_OFFSET(::livekit::WorkerPong, _impl_.timestamp_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::livekit::RegisterWorkerRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::livekit::RegisterWorkerRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::livekit::RegisterWorkerRequest, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::livekit::RegisterWorkerRequest, _impl_.agent_name_),
        PROTOBUF_FIELD_OFFSET(::livekit::RegisterWorkerRequest, _impl_.version_),
        PROTOBUF_FIELD_OFFSET(::livekit::RegisterWorkerRequest, _impl_.ping_interval_),
        PROTOBUF_FIELD_OFFSET(::livekit::RegisterWorkerRequest, _impl_.namespace__),
        PROTOBUF_FIELD_OFFSET(::livekit::RegisterWorkerRequest, _impl_.allowed_permissions_),
        4,
        2,
        0,
        5,
        1,
        3,
        PROTOBUF_FIELD_OFFSET(::livekit::RegisterWorkerResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::livekit::RegisterWorkerResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::livekit::RegisterWorkerResponse, _impl_.worker_id_),
        PROTOBUF_FIELD_OFFSET(::livekit::RegisterWorkerResponse, _impl_.server_info_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::livekit::MigrateJobRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::livekit::MigrateJobRequest, _impl_.job_ids_),
        PROTOBUF_FIELD_OFFSET(::livekit::AvailabilityRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::livekit::AvailabilityRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::livekit::AvailabilityRequest, _impl_.job_),
        PROTOBUF_FIELD_OFFSET(::livekit::AvailabilityRequest, _impl_.resuming_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::livekit::AvailabilityResponse_ParticipantAttributesEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::livekit::AvailabilityResponse_ParticipantAttributesEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::livekit::AvailabilityResponse_ParticipantAttributesEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::livekit::AvailabilityResponse_ParticipantAttributesEntry_DoNotUse, _impl_.value_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::livekit::AvailabilityResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::livekit::AvailabilityResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::livekit::AvailabilityResponse, _impl_.job_id_),
        PROTOBUF_FIELD_OFFSET(::livekit::AvailabilityResponse, _impl_.available_),
        PROTOBUF_FIELD_OFFSET(::livekit::AvailabilityResponse, _impl_.supports_resume_),
        PROTOBUF_FIELD_OFFSET(::livekit::AvailabilityResponse, _impl_.participant_name_),
        PROTOBUF_FIELD_OFFSET(::livekit::AvailabilityResponse, _impl_.participant_identity_),
        PROTOBUF_FIELD_OFFSET(::livekit::AvailabilityResponse, _impl_.participant_metadata_),
        PROTOBUF_FIELD_OFFSET(::livekit::AvailabilityResponse, _impl_.participant_attributes_),
        0,
        4,
        5,
        1,
        2,
        3,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::livekit::UpdateJobStatus, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::livekit::UpdateJobStatus, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::livekit::UpdateJobStatus, _impl_.job_id_),
        PROTOBUF_FIELD_OFFSET(::livekit::UpdateJobStatus, _impl_.status_),
        PROTOBUF_FIELD_OFFSET(::livekit::UpdateJobStatus, _impl_.error_),
        0,
        2,
        1,
        PROTOBUF_FIELD_OFFSET(::livekit::UpdateWorkerStatus, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::livekit::UpdateWorkerStatus, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::livekit::UpdateWorkerStatus, _impl_.status_),
        PROTOBUF_FIELD_OFFSET(::livekit::UpdateWorkerStatus, _impl_.load_),
        PROTOBUF_FIELD_OFFSET(::livekit::UpdateWorkerStatus, _impl_.job_count_),
        0,
        1,
        2,
        PROTOBUF_FIELD_OFFSET(::livekit::JobAssignment, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::livekit::JobAssignment, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::livekit::JobAssignment, _impl_.job_),
        PROTOBUF_FIELD_OFFSET(::livekit::JobAssignment, _impl_.url_),
        PROTOBUF_FIELD_OFFSET(::livekit::JobAssignment, _impl_.token_),
        2,
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::livekit::JobTermination, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::livekit::JobTermination, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::livekit::JobTermination, _impl_.job_id_),
        0,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 17, -1, sizeof(::livekit::Job)},
        {26, 40, -1, sizeof(::livekit::JobState)},
        {46, -1, -1, sizeof(::livekit::WorkerMessage)},
        {62, -1, -1, sizeof(::livekit::ServerMessage)},
        {76, 87, -1, sizeof(::livekit::SimulateJobRequest)},
        {90, 99, -1, sizeof(::livekit::WorkerPing)},
        {100, 110, -1, sizeof(::livekit::WorkerPong)},
        {112, 126, -1, sizeof(::livekit::RegisterWorkerRequest)},
        {132, 142, -1, sizeof(::livekit::RegisterWorkerResponse)},
        {144, -1, -1, sizeof(::livekit::MigrateJobRequest)},
        {153, 163, -1, sizeof(::livekit::AvailabilityRequest)},
        {165, 175, -1, sizeof(::livekit::AvailabilityResponse_ParticipantAttributesEntry_DoNotUse)},
        {177, 192, -1, sizeof(::livekit::AvailabilityResponse)},
        {199, 210, -1, sizeof(::livekit::UpdateJobStatus)},
        {213, 224, -1, sizeof(::livekit::UpdateWorkerStatus)},
        {227, 238, -1, sizeof(::livekit::JobAssignment)},
        {241, 250, -1, sizeof(::livekit::JobTermination)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::livekit::_Job_default_instance_._instance,
    &::livekit::_JobState_default_instance_._instance,
    &::livekit::_WorkerMessage_default_instance_._instance,
    &::livekit::_ServerMessage_default_instance_._instance,
    &::livekit::_SimulateJobRequest_default_instance_._instance,
    &::livekit::_WorkerPing_default_instance_._instance,
    &::livekit::_WorkerPong_default_instance_._instance,
    &::livekit::_RegisterWorkerRequest_default_instance_._instance,
    &::livekit::_RegisterWorkerResponse_default_instance_._instance,
    &::livekit::_MigrateJobRequest_default_instance_._instance,
    &::livekit::_AvailabilityRequest_default_instance_._instance,
    &::livekit::_AvailabilityResponse_ParticipantAttributesEntry_DoNotUse_default_instance_._instance,
    &::livekit::_AvailabilityResponse_default_instance_._instance,
    &::livekit::_UpdateJobStatus_default_instance_._instance,
    &::livekit::_UpdateWorkerStatus_default_instance_._instance,
    &::livekit::_JobAssignment_default_instance_._instance,
    &::livekit::_JobTermination_default_instance_._instance,
};
const char descriptor_table_protodef_livekit_5fagent_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\023livekit_agent.proto\022\007livekit\032\024livekit_"
    "models.proto\"\206\002\n\003Job\022\n\n\002id\030\001 \001(\t\022\023\n\013disp"
    "atch_id\030\t \001(\t\022\036\n\004type\030\002 \001(\0162\020.livekit.Jo"
    "bType\022\033\n\004room\030\003 \001(\0132\r.livekit.Room\0222\n\013pa"
    "rticipant\030\004 \001(\0132\030.livekit.ParticipantInf"
    "oH\000\210\001\001\022\025\n\tnamespace\030\005 \001(\tB\002\030\001\022\020\n\010metadat"
    "a\030\006 \001(\t\022\022\n\nagent_name\030\007 \001(\t\022 \n\005state\030\010 \001"
    "(\0132\021.livekit.JobStateB\016\n\014_participant\"\225\001"
    "\n\010JobState\022\"\n\006status\030\001 \001(\0162\022.livekit.Job"
    "Status\022\r\n\005error\030\002 \001(\t\022\022\n\nstarted_at\030\003 \001("
    "\003\022\020\n\010ended_at\030\004 \001(\003\022\022\n\nupdated_at\030\005 \001(\003\022"
    "\034\n\024participant_identity\030\006 \001(\t\"\370\002\n\rWorker"
    "Message\0222\n\010register\030\001 \001(\0132\036.livekit.Regi"
    "sterWorkerRequestH\000\0225\n\014availability\030\002 \001("
    "\0132\035.livekit.AvailabilityResponseH\000\0224\n\rup"
    "date_worker\030\003 \001(\0132\033.livekit.UpdateWorker"
    "StatusH\000\022.\n\nupdate_job\030\004 \001(\0132\030.livekit.U"
    "pdateJobStatusH\000\022#\n\004ping\030\005 \001(\0132\023.livekit"
    ".WorkerPingH\000\0223\n\014simulate_job\030\006 \001(\0132\033.li"
    "vekit.SimulateJobRequestH\000\0221\n\013migrate_jo"
    "b\030\007 \001(\0132\032.livekit.MigrateJobRequestH\000B\t\n"
    "\007message\"\210\002\n\rServerMessage\0223\n\010register\030\001"
    " \001(\0132\037.livekit.RegisterWorkerResponseH\000\022"
    "4\n\014availability\030\002 \001(\0132\034.livekit.Availabi"
    "lityRequestH\000\022,\n\nassignment\030\003 \001(\0132\026.live"
    "kit.JobAssignmentH\000\022.\n\013termination\030\005 \001(\013"
    "2\027.livekit.JobTerminationH\000\022#\n\004pong\030\004 \001("
    "\0132\023.livekit.WorkerPongH\000B\t\n\007message\"\200\001\n\022"
    "SimulateJobRequest\022\036\n\004type\030\001 \001(\0162\020.livek"
    "it.JobType\022\033\n\004room\030\002 \001(\0132\r.livekit.Room\022"
    "-\n\013participant\030\003 \001(\0132\030.livekit.Participa"
    "ntInfo\"\037\n\nWorkerPing\022\021\n\ttimestamp\030\001 \001(\003\""
    "7\n\nWorkerPong\022\026\n\016last_timestamp\030\001 \001(\003\022\021\n"
    "\ttimestamp\030\002 \001(\003\"\326\001\n\025RegisterWorkerReque"
    "st\022\036\n\004type\030\001 \001(\0162\020.livekit.JobType\022\022\n\nag"
    "ent_name\030\010 \001(\t\022\017\n\007version\030\003 \001(\t\022\025\n\rping_"
    "interval\030\005 \001(\r\022\026\n\tnamespace\030\006 \001(\tH\000\210\001\001\022;"
    "\n\023allowed_permissions\030\007 \001(\0132\036.livekit.Pa"
    "rticipantPermissionB\014\n\n_namespace\"U\n\026Reg"
    "isterWorkerResponse\022\021\n\tworker_id\030\001 \001(\t\022("
    "\n\013server_info\030\003 \001(\0132\023.livekit.ServerInfo"
    "\"$\n\021MigrateJobRequest\022\017\n\007job_ids\030\002 \003(\t\"B"
    "\n\023AvailabilityRequest\022\031\n\003job\030\001 \001(\0132\014.liv"
    "ekit.Job\022\020\n\010resuming\030\002 \001(\010\"\300\002\n\024Availabil"
    "ityResponse\022\016\n\006job_id\030\001 \001(\t\022\021\n\tavailable"
    "\030\002 \001(\010\022\027\n\017supports_resume\030\003 \001(\010\022\030\n\020parti"
    "cipant_name\030\004 \001(\t\022\034\n\024participant_identit"
    "y\030\005 \001(\t\022\034\n\024participant_metadata\030\006 \001(\t\022X\n"
    "\026participant_attributes\030\007 \003(\01328.livekit."
    "AvailabilityResponse.ParticipantAttribut"
    "esEntry\032<\n\032ParticipantAttributesEntry\022\013\n"
    "\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"T\n\017UpdateJ"
    "obStatus\022\016\n\006job_id\030\001 \001(\t\022\"\n\006status\030\002 \001(\016"
    "2\022.livekit.JobStatus\022\r\n\005error\030\003 \001(\t\"l\n\022U"
    "pdateWorkerStatus\022*\n\006status\030\001 \001(\0162\025.live"
    "kit.WorkerStatusH\000\210\001\001\022\014\n\004load\030\003 \001(\002\022\021\n\tj"
    "ob_count\030\004 \001(\rB\t\n\007_status\"S\n\rJobAssignme"
    "nt\022\031\n\003job\030\001 \001(\0132\014.livekit.Job\022\020\n\003url\030\002 \001"
    "(\tH\000\210\001\001\022\r\n\005token\030\003 \001(\tB\006\n\004_url\" \n\016JobTer"
    "mination\022\016\n\006job_id\030\001 \001(\t*<\n\007JobType\022\013\n\007J"
    "T_ROOM\020\000\022\020\n\014JT_PUBLISHER\020\001\022\022\n\016JT_PARTICI"
    "PANT\020\002*-\n\014WorkerStatus\022\020\n\014WS_AVAILABLE\020\000"
    "\022\013\n\007WS_FULL\020\001*J\n\tJobStatus\022\016\n\nJS_PENDING"
    "\020\000\022\016\n\nJS_RUNNING\020\001\022\016\n\nJS_SUCCESS\020\002\022\r\n\tJS"
    "_FAILED\020\003BFZ#github.com/livekit/protocol"
    "/livekit\252\002\rLiveKit.Proto\352\002\016LiveKit::Prot"
    "ob\006proto3"
};
static const ::_pbi::DescriptorTable* PROTOBUF_NONNULL const
    descriptor_table_livekit_5fagent_2eproto_deps[1] = {
        &::descriptor_table_livekit_5fmodels_2eproto,
};
static ::absl::once_flag descriptor_table_livekit_5fagent_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_livekit_5fagent_2eproto = {
    false,
    false,
    2649,
    descriptor_table_protodef_livekit_5fagent_2eproto,
    "livekit_agent.proto",
    &descriptor_table_livekit_5fagent_2eproto_once,
    descriptor_table_livekit_5fagent_2eproto_deps,
    1,
    17,
    schemas,
    file_default_instances,
    TableStruct_livekit_5fagent_2eproto::offsets,
    file_level_enum_descriptors_livekit_5fagent_2eproto,
    file_level_service_descriptors_livekit_5fagent_2eproto,
};
namespace livekit {
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL JobType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_livekit_5fagent_2eproto);
  return file_level_enum_descriptors_livekit_5fagent_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t JobType_internal_data_[] = {
    196608u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL WorkerStatus_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_livekit_5fagent_2eproto);
  return file_level_enum_descriptors_livekit_5fagent_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t WorkerStatus_internal_data_[] = {
    131072u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL JobStatus_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_livekit_5fagent_2eproto);
  return file_level_enum_descriptors_livekit_5fagent_2eproto[2];
}
PROTOBUF_CONSTINIT const uint32_t JobStatus_internal_data_[] = {
    262144u, 0u, };
// ===================================================================

class Job::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Job>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Job, _impl_._has_bits_);
};

void Job::clear_room() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.room_ != nullptr) _impl_.room_->Clear();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
void Job::clear_participant() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.participant_ != nullptr) _impl_.participant_->Clear();
  _impl_._has_bits_[0] &= ~0x00000040u;
}
Job::Job(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Job_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:livekit.Job)
}
PROTOBUF_NDEBUG_INLINE Job::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::livekit::Job& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        id_(arena, from.id_),
        namespace__(arena, from.namespace__),
        metadata_(arena, from.metadata_),
        agent_name_(arena, from.agent_name_),
        dispatch_id_(arena, from.dispatch_id_) {}

Job::Job(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const Job& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Job_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Job* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.room_ = ((cached_has_bits & 0x00000020u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.room_)
                : nullptr;
  _impl_.participant_ = ((cached_has_bits & 0x00000040u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.participant_)
                : nullptr;
  _impl_.state_ = ((cached_has_bits & 0x00000080u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.state_)
                : nullptr;
  _impl_.type_ = from._impl_.type_;

  // @@protoc_insertion_point(copy_constructor:livekit.Job)
}
PROTOBUF_NDEBUG_INLINE Job::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        id_(arena),
        namespace__(arena),
        metadata_(arena),
        agent_name_(arena),
        dispatch_id_(arena) {}

inline void Job::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, room_),
           0,
           offsetof(Impl_, type_) -
               offsetof(Impl_, room_) +
               sizeof(Impl_::type_));
}
Job::~Job() {
  // @@protoc_insertion_point(destructor:livekit.Job)
  SharedDtor(*this);
}
inline void Job::SharedDtor(MessageLite& self) {
  Job& this_ = static_cast<Job&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.id_.Destroy();
  this_._impl_.namespace__.Destroy();
  this_._impl_.metadata_.Destroy();
  this_._impl_.agent_name_.Destroy();
  this_._impl_.dispatch_id_.Destroy();
  delete this_._impl_.room_;
  delete this_._impl_.participant_;
  delete this_._impl_.state_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL Job::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Job(arena);
}
constexpr auto Job::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Job),
                                            alignof(Job));
}
constexpr auto Job::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Job_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Job::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Job>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Job::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Job>(), &Job::ByteSizeLong,
              &Job::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Job, _impl_._cached_size_),
          false,
      },
      &Job::kDescriptorMethods,
      &descriptor_table_livekit_5fagent_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        Job_class_data_ =
            Job::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL Job::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Job_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Job_class_data_.tc_table);
  return Job_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 9, 3, 68, 2>
Job::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Job, _impl_._has_bits_),
    0, // no _extensions_
    9, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966784,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    Job_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::livekit::Job>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Job, _impl_.id_)}},
    // .livekit.JobType type = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Job, _impl_.type_), 8>(),
     {16, 8, 0, PROTOBUF_FIELD_OFFSET(Job, _impl_.type_)}},
    // .livekit.Room room = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 5, 0, PROTOBUF_FIELD_OFFSET(Job, _impl_.room_)}},
    // optional .livekit.ParticipantInfo participant = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 6, 1, PROTOBUF_FIELD_OFFSET(Job, _impl_.participant_)}},
    // string namespace = 5 [deprecated = true];
    {::_pbi::TcParser::FastUS1,
     {42, 1, 0, PROTOBUF_FIELD_OFFSET(Job, _impl_.namespace__)}},
    // string metadata = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 2, 0, PROTOBUF_FIELD_OFFSET(Job, _impl_.metadata_)}},
    // string agent_name = 7;
    {::_pbi::TcParser::FastUS1,
     {58, 3, 0, PROTOBUF_FIELD_OFFSET(Job, _impl_.agent_name_)}},
    // .livekit.JobState state = 8;
    {::_pbi::TcParser::FastMtS1,
     {66, 7, 2, PROTOBUF_FIELD_OFFSET(Job, _impl_.state_)}},
    // string dispatch_id = 9;
    {::_pbi::TcParser::FastUS1,
     {74, 4, 0, PROTOBUF_FIELD_OFFSET(Job, _impl_.dispatch_id_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string id = 1;
    {PROTOBUF_FIELD_OFFSET(Job, _impl_.id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .livekit.JobType type = 2;
    {PROTOBUF_FIELD_OFFSET(Job, _impl_.type_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // .livekit.Room room = 3;
    {PROTOBUF_FIELD_OFFSET(Job, _impl_.room_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .livekit.ParticipantInfo participant = 4;
    {PROTOBUF_FIELD_OFFSET(Job, _impl_.participant_), _Internal::kHasBitsOffset + 6, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string namespace = 5 [deprecated = true];
    {PROTOBUF_FIELD_OFFSET(Job, _impl_.namespace__), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string metadata = 6;
    {PROTOBUF_FIELD_OFFSET(Job, _impl_.metadata_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string agent_name = 7;
    {PROTOBUF_FIELD_OFFSET(Job, _impl_.agent_name_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .livekit.JobState state = 8;
    {PROTOBUF_FIELD_OFFSET(Job, _impl_.state_), _Internal::kHasBitsOffset + 7, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string dispatch_id = 9;
    {PROTOBUF_FIELD_OFFSET(Job, _impl_.dispatch_id_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::livekit::Room>()},
      {::_pbi::TcParser::GetTable<::livekit::ParticipantInfo>()},
      {::_pbi::TcParser::GetTable<::livekit::JobState>()},
  }},
  {{
    "\13\2\0\0\0\11\10\12\0\13\0\0\0\0\0\0"
    "livekit.Job"
    "id"
    "namespace"
    "metadata"
    "agent_name"
    "dispatch_id"
  }},
};
PROTOBUF_NOINLINE void Job::Clear() {
// @@protoc_insertion_point(message_clear_start:livekit.Job)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.namespace__.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _impl_.metadata_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _impl_.agent_name_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      _impl_.dispatch_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      ABSL_DCHECK(_impl_.room_ != nullptr);
      _impl_.room_->Clear();
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      ABSL_DCHECK(_impl_.participant_ != nullptr);
      _impl_.participant_->Clear();
    }
    if ((cached_has_bits & 0x00000080u) != 0) {
      ABSL_DCHECK(_impl_.state_ != nullptr);
      _impl_.state_->Clear();
    }
  }
  _impl_.type_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Job::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Job& this_ = static_cast<const Job&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Job::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Job& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:livekit.Job)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string id = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_id().empty()) {
      const std::string& _s = this_._internal_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "livekit.Job.id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // .livekit.JobType type = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000100u) != 0) {
    if (this_._internal_type() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          2, this_._internal_type(), target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .livekit.Room room = 3;
  if ((cached_has_bits & 0x00000020u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.room_, this_._impl_.room_->GetCachedSize(), target,
        stream);
  }

  // optional .livekit.ParticipantInfo participant = 4;
  if ((cached_has_bits & 0x00000040u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *this_._impl_.participant_, this_._impl_.participant_->GetCachedSize(), target,
        stream);
  }

  // string namespace = 5 [deprecated = true];
  if ((cached_has_bits & 0x00000002u) != 0) {
    if (!this_._internal_namespace_().empty()) {
      const std::string& _s = this_._internal_namespace_();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "livekit.Job.namespace");
      target = stream->WriteStringMaybeAliased(5, _s, target);
    }
  }

  // string metadata = 6;
  if ((cached_has_bits & 0x00000004u) != 0) {
    if (!this_._internal_metadata().empty()) {
      const std::string& _s = this_._internal_metadata();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "livekit.Job.metadata");
      target = stream->WriteStringMaybeAliased(6, _s, target);
    }
  }

  // string agent_name = 7;
  if ((cached_has_bits & 0x00000008u) != 0) {
    if (!this_._internal_agent_name().empty()) {
      const std::string& _s = this_._internal_agent_name();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "livekit.Job.agent_name");
      target = stream->WriteStringMaybeAliased(7, _s, target);
    }
  }

  // .livekit.JobState state = 8;
  if ((cached_has_bits & 0x00000080u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        8, *this_._impl_.state_, this_._impl_.state_->GetCachedSize(), target,
        stream);
  }

  // string dispatch_id = 9;
  if ((cached_has_bits & 0x00000010u) != 0) {
    if (!this_._internal_dispatch_id().empty()) {
      const std::string& _s = this_._internal_dispatch_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "livekit.Job.dispatch_id");
      target = stream->WriteStringMaybeAliased(9, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:livekit.Job)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Job::ByteSizeLong(const MessageLite& base) {
  const Job& this_ = static_cast<const Job&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Job::ByteSizeLong() const {
  const Job& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:livekit.Job)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    // string id = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_id());
      }
    }
    // string namespace = 5 [deprecated = true];
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!this_._internal_namespace_().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_namespace_());
      }
    }
    // string metadata = 6;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (!this_._internal_metadata().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_metadata());
      }
    }
    // string agent_name = 7;
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (!this_._internal_agent_name().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_agent_name());
      }
    }
    // string dispatch_id = 9;
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (!this_._internal_dispatch_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_dispatch_id());
      }
    }
    // .livekit.Room room = 3;
    if ((cached_has_bits & 0x00000020u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.room_);
    }
    // optional .livekit.ParticipantInfo participant = 4;
    if ((cached_has_bits & 0x00000040u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.participant_);
    }
    // .livekit.JobState state = 8;
    if ((cached_has_bits & 0x00000080u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.state_);
    }
  }
   {
    // .livekit.JobType type = 2;
    if ((cached_has_bits & 0x00000100u) != 0) {
      if (this_._internal_type() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_type());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Job::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Job*>(&to_msg);
  auto& from = static_cast<const Job&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:livekit.Job)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_id().empty()) {
        _this->_internal_set_id(from._internal_id());
      } else {
        if (_this->_impl_.id_.IsDefault()) {
          _this->_internal_set_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!from._internal_namespace_().empty()) {
        _this->_internal_set_namespace_(from._internal_namespace_());
      } else {
        if (_this->_impl_.namespace__.IsDefault()) {
          _this->_internal_set_namespace_("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (!from._internal_metadata().empty()) {
        _this->_internal_set_metadata(from._internal_metadata());
      } else {
        if (_this->_impl_.metadata_.IsDefault()) {
          _this->_internal_set_metadata("");
        }
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (!from._internal_agent_name().empty()) {
        _this->_internal_set_agent_name(from._internal_agent_name());
      } else {
        if (_this->_impl_.agent_name_.IsDefault()) {
          _this->_internal_set_agent_name("");
        }
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (!from._internal_dispatch_id().empty()) {
        _this->_internal_set_dispatch_id(from._internal_dispatch_id());
      } else {
        if (_this->_impl_.dispatch_id_.IsDefault()) {
          _this->_internal_set_dispatch_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      ABSL_DCHECK(from._impl_.room_ != nullptr);
      if (_this->_impl_.room_ == nullptr) {
        _this->_impl_.room_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.room_);
      } else {
        _this->_impl_.room_->MergeFrom(*from._impl_.room_);
      }
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      ABSL_DCHECK(from._impl_.participant_ != nullptr);
      if (_this->_impl_.participant_ == nullptr) {
        _this->_impl_.participant_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.participant_);
      } else {
        _this->_impl_.participant_->MergeFrom(*from._impl_.participant_);
      }
    }
    if ((cached_has_bits & 0x00000080u) != 0) {
      ABSL_DCHECK(from._impl_.state_ != nullptr);
      if (_this->_impl_.state_ == nullptr) {
        _this->_impl_.state_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.state_);
      } else {
        _this->_impl_.state_->MergeFrom(*from._impl_.state_);
      }
    }
  }
  if ((cached_has_bits & 0x00000100u) != 0) {
    if (from._internal_type() != 0) {
      _this->_impl_.type_ = from._impl_.type_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Job::CopyFrom(const Job& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:livekit.Job)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Job::InternalSwap(Job* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.namespace__, &other->_impl_.namespace__, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.metadata_, &other->_impl_.metadata_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.agent_name_, &other->_impl_.agent_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.dispatch_id_, &other->_impl_.dispatch_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Job, _impl_.type_)
      + sizeof(Job::_impl_.type_)
      - PROTOBUF_FIELD_OFFSET(Job, _impl_.room_)>(
          reinterpret_cast<char*>(&_impl_.room_),
          reinterpret_cast<char*>(&other->_impl_.room_));
}

::google::protobuf::Metadata Job::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class JobState::_Internal {
 public:
  using HasBits =
      decltype(std::declval<JobState>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(JobState, _impl_._has_bits_);
};

JobState::JobState(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, JobState_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:livekit.JobState)
}
PROTOBUF_NDEBUG_INLINE JobState::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::livekit::JobState& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        error_(arena, from.error_),
        participant_identity_(arena, from.participant_identity_) {}

JobState::JobState(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const JobState& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, JobState_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  JobState* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, started_at_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, started_at_),
           offsetof(Impl_, status_) -
               offsetof(Impl_, started_at_) +
               sizeof(Impl_::status_));

  // @@protoc_insertion_point(copy_constructor:livekit.JobState)
}
PROTOBUF_NDEBUG_INLINE JobState::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        error_(arena),
        participant_identity_(arena) {}

inline void JobState::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, started_at_),
           0,
           offsetof(Impl_, status_) -
               offsetof(Impl_, started_at_) +
               sizeof(Impl_::status_));
}
JobState::~JobState() {
  // @@protoc_insertion_point(destructor:livekit.JobState)
  SharedDtor(*this);
}
inline void JobState::SharedDtor(MessageLite& self) {
  JobState& this_ = static_cast<JobState&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.error_.Destroy();
  this_._impl_.participant_identity_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL JobState::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) JobState(arena);
}
constexpr auto JobState::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(JobState),
                                            alignof(JobState));
}
constexpr auto JobState::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_JobState_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &JobState::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<JobState>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &JobState::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<JobState>(), &JobState::ByteSizeLong,
              &JobState::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(JobState, _impl_._cached_size_),
          false,
      },
      &JobState::kDescriptorMethods,
      &descriptor_table_livekit_5fagent_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        JobState_class_data_ =
            JobState::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL JobState::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&JobState_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(JobState_class_data_.tc_table);
  return JobState_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 50, 2>
JobState::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(JobState, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    JobState_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::livekit::JobState>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .livekit.JobStatus status = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(JobState, _impl_.status_), 5>(),
     {8, 5, 0, PROTOBUF_FIELD_OFFSET(JobState, _impl_.status_)}},
    // string error = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(JobState, _impl_.error_)}},
    // int64 started_at = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(JobState, _impl_.started_at_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(JobState, _impl_.started_at_)}},
    // int64 ended_at = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(JobState, _impl_.ended_at_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(JobState, _impl_.ended_at_)}},
    // int64 updated_at = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(JobState, _impl_.updated_at_), 4>(),
     {40, 4, 0, PROTOBUF_FIELD_OFFSET(JobState, _impl_.updated_at_)}},
    // string participant_identity = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 1, 0, PROTOBUF_FIELD_OFFSET(JobState, _impl_.participant_identity_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .livekit.JobStatus status = 1;
    {PROTOBUF_FIELD_OFFSET(JobState, _impl_.status_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // string error = 2;
    {PROTOBUF_FIELD_OFFSET(JobState, _impl_.error_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 started_at = 3;
    {PROTOBUF_FIELD_OFFSET(JobState, _impl_.started_at_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // int64 ended_at = 4;
    {PROTOBUF_FIELD_OFFSET(JobState, _impl_.ended_at_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // int64 updated_at = 5;
    {PROTOBUF_FIELD_OFFSET(JobState, _impl_.updated_at_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // string participant_identity = 6;
    {PROTOBUF_FIELD_OFFSET(JobState, _impl_.participant_identity_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\20\0\5\0\0\0\24\0"
    "livekit.JobState"
    "error"
    "participant_identity"
  }},
};
PROTOBUF_NOINLINE void JobState::Clear() {
// @@protoc_insertion_point(message_clear_start:livekit.JobState)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.error_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.participant_identity_.ClearNonDefaultToEmpty();
    }
  }
  if ((cached_has_bits & 0x0000003cu) != 0) {
    ::memset(&_impl_.started_at_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.status_) -
        reinterpret_cast<char*>(&_impl_.started_at_)) + sizeof(_impl_.status_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL JobState::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const JobState& this_ = static_cast<const JobState&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL JobState::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const JobState& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:livekit.JobState)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .livekit.JobStatus status = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000020u) != 0) {
    if (this_._internal_status() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          1, this_._internal_status(), target);
    }
  }

  // string error = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_error().empty()) {
      const std::string& _s = this_._internal_error();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "livekit.JobState.error");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // int64 started_at = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (this_._internal_started_at() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<3>(
              stream, this_._internal_started_at(), target);
    }
  }

  // int64 ended_at = 4;
  if ((this_._impl_._has_bits_[0] & 0x00000008u) != 0) {
    if (this_._internal_ended_at() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<4>(
              stream, this_._internal_ended_at(), target);
    }
  }

  // int64 updated_at = 5;
  if ((this_._impl_._has_bits_[0] & 0x00000010u) != 0) {
    if (this_._internal_updated_at() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<5>(
              stream, this_._internal_updated_at(), target);
    }
  }

  // string participant_identity = 6;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!this_._internal_participant_identity().empty()) {
      const std::string& _s = this_._internal_participant_identity();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "livekit.JobState.participant_identity");
      target = stream->WriteStringMaybeAliased(6, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:livekit.JobState)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t JobState::ByteSizeLong(const MessageLite& base) {
  const JobState& this_ = static_cast<const JobState&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t JobState::ByteSizeLong() const {
  const JobState& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:livekit.JobState)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fu) != 0) {
    // string error = 2;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_error().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_error());
      }
    }
    // string participant_identity = 6;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!this_._internal_participant_identity().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_participant_identity());
      }
    }
    // int64 started_at = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_started_at() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_started_at());
      }
    }
    // int64 ended_at = 4;
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (this_._internal_ended_at() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_ended_at());
      }
    }
    // int64 updated_at = 5;
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (this_._internal_updated_at() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_updated_at());
      }
    }
    // .livekit.JobStatus status = 1;
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (this_._internal_status() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_status());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void JobState::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<JobState*>(&to_msg);
  auto& from = static_cast<const JobState&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:livekit.JobState)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_error().empty()) {
        _this->_internal_set_error(from._internal_error());
      } else {
        if (_this->_impl_.error_.IsDefault()) {
          _this->_internal_set_error("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!from._internal_participant_identity().empty()) {
        _this->_internal_set_participant_identity(from._internal_participant_identity());
      } else {
        if (_this->_impl_.participant_identity_.IsDefault()) {
          _this->_internal_set_participant_identity("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_started_at() != 0) {
        _this->_impl_.started_at_ = from._impl_.started_at_;
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (from._internal_ended_at() != 0) {
        _this->_impl_.ended_at_ = from._impl_.ended_at_;
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (from._internal_updated_at() != 0) {
        _this->_impl_.updated_at_ = from._impl_.updated_at_;
      }
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (from._internal_status() != 0) {
        _this->_impl_.status_ = from._impl_.status_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void JobState::CopyFrom(const JobState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:livekit.JobState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void JobState::InternalSwap(JobState* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.error_, &other->_impl_.error_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.participant_identity_, &other->_impl_.participant_identity_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(JobState, _impl_.status_)
      + sizeof(JobState::_impl_.status_)
      - PROTOBUF_FIELD_OFFSET(JobState, _impl_.started_at_)>(
          reinterpret_cast<char*>(&_impl_.started_at_),
          reinterpret_cast<char*>(&other->_impl_.started_at_));
}

::google::protobuf::Metadata JobState::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class WorkerMessage::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::livekit::WorkerMessage, _impl_._oneof_case_);
};

void WorkerMessage::set_allocated_register_(::livekit::RegisterWorkerRequest* PROTOBUF_NULLABLE register_) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_message();
  if (register_) {
    ::google::protobuf::Arena* submessage_arena = register_->GetArena();
    if (message_arena != submessage_arena) {
      register_ = ::google::protobuf::internal::GetOwnedMessage(message_arena, register_, submessage_arena);
    }
    set_has_register_();
    _impl_.message_.register__ = register_;
  }
  // @@protoc_insertion_point(field_set_allocated:livekit.WorkerMessage.register)
}
void WorkerMessage::set_allocated_availability(::livekit::AvailabilityResponse* PROTOBUF_NULLABLE availability) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_message();
  if (availability) {
    ::google::protobuf::Arena* submessage_arena = availability->GetArena();
    if (message_arena != submessage_arena) {
      availability = ::google::protobuf::internal::GetOwnedMessage(message_arena, availability, submessage_arena);
    }
    set_has_availability();
    _impl_.message_.availability_ = availability;
  }
  // @@protoc_insertion_point(field_set_allocated:livekit.WorkerMessage.availability)
}
void WorkerMessage::set_allocated_update_worker(::livekit::UpdateWorkerStatus* PROTOBUF_NULLABLE update_worker) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_message();
  if (update_worker) {
    ::google::protobuf::Arena* submessage_arena = update_worker->GetArena();
    if (message_arena != submessage_arena) {
      update_worker = ::google::protobuf::internal::GetOwnedMessage(message_arena, update_worker, submessage_arena);
    }
    set_has_update_worker();
    _impl_.message_.update_worker_ = update_worker;
  }
  // @@protoc_insertion_point(field_set_allocated:livekit.WorkerMessage.update_worker)
}
void WorkerMessage::set_allocated_update_job(::livekit::UpdateJobStatus* PROTOBUF_NULLABLE update_job) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_message();
  if (update_job) {
    ::google::protobuf::Arena* submessage_arena = update_job->GetArena();
    if (message_arena != submessage_arena) {
      update_job = ::google::protobuf::internal::GetOwnedMessage(message_arena, update_job, submessage_arena);
    }
    set_has_update_job();
    _impl_.message_.update_job_ = update_job;
  }
  // @@protoc_insertion_point(field_set_allocated:livekit.WorkerMessage.update_job)
}
void WorkerMessage::set_allocated_ping(::livekit::WorkerPing* PROTOBUF_NULLABLE ping) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_message();
  if (ping) {
    ::google::protobuf::Arena* submessage_arena = ping->GetArena();
    if (message_arena != submessage_arena) {
      ping = ::google::protobuf::internal::GetOwnedMessage(message_arena, ping, submessage_arena);
    }
    set_has_ping();
    _impl_.message_.ping_ = ping;
  }
  // @@protoc_insertion_point(field_set_allocated:livekit.WorkerMessage.ping)
}
void WorkerMessage::set_allocated_simulate_job(::livekit::SimulateJobRequest* PROTOBUF_NULLABLE simulate_job) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_message();
  if (simulate_job) {
    ::google::protobuf::Arena* submessage_arena = simulate_job->GetArena();
    if (message_arena != submessage_arena) {
      simulate_job = ::google::protobuf::internal::GetOwnedMessage(message_arena, simulate_job, submessage_arena);
    }
    set_has_simulate_job();
    _impl_.message_.simulate_job_ = simulate_job;
  }
  // @@protoc_insertion_point(field_set_allocated:livekit.WorkerMessage.simulate_job)
}
void WorkerMessage::set_allocated_migrate_job(::livekit::MigrateJobRequest* PROTOBUF_NULLABLE migrate_job) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_message();
  if (migrate_job) {
    ::google::protobuf::Arena* submessage_arena = migrate_job->GetArena();
    if (message_arena != submessage_arena) {
      migrate_job = ::google::protobuf::internal::GetOwnedMessage(message_arena, migrate_job, submessage_arena);
    }
    set_has_migrate_job();
    _impl_.message_.migrate_job_ = migrate_job;
  }
  // @@protoc_insertion_point(field_set_allocated:livekit.WorkerMessage.migrate_job)
}
WorkerMessage::WorkerMessage(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, WorkerMessage_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:livekit.WorkerMessage)
}
PROTOBUF_NDEBUG_INLINE WorkerMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::livekit::WorkerMessage& from_msg)
      : message_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

WorkerMessage::WorkerMessage(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const WorkerMessage& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, WorkerMessage_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  WorkerMessage* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  switch (message_case()) {
    case MESSAGE_NOT_SET:
      break;
      case kRegister:
        _impl_.message_.register__ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.message_.register__);
        break;
      case kAvailability:
        _impl_.message_.availability_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.message_.availability_);
        break;
      case kUpdateWorker:
        _impl_.message_.update_worker_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.message_.update_worker_);
        break;
      case kUpdateJob:
        _impl_.message_.update_job_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.message_.update_job_);
        break;
      case kPing:
        _impl_.message_.ping_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.message_.ping_);
        break;
      case kSimulateJob:
        _impl_.message_.simulate_job_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.message_.simulate_job_);
        break;
      case kMigrateJob:
        _impl_.message_.migrate_job_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.message_.migrate_job_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:livekit.WorkerMessage)
}
PROTOBUF_NDEBUG_INLINE WorkerMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : message_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void WorkerMessage::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
WorkerMessage::~WorkerMessage() {
  // @@protoc_insertion_point(destructor:livekit.WorkerMessage)
  SharedDtor(*this);
}
inline void WorkerMessage::SharedDtor(MessageLite& self) {
  WorkerMessage& this_ = static_cast<WorkerMessage&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  if (this_.has_message()) {
    this_.clear_message();
  }
  this_._impl_.~Impl_();
}

void WorkerMessage::clear_message() {
// @@protoc_insertion_point(one_of_clear_start:livekit.WorkerMessage)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (message_case()) {
    case kRegister: {
      if (GetArena() == nullptr) {
        delete _impl_.message_.register__;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.message_.register__);
      }
      break;
    }
    case kAvailability: {
      if (GetArena() == nullptr) {
        delete _impl_.message_.availability_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.message_.availability_);
      }
      break;
    }
    case kUpdateWorker: {
      if (GetArena() == nullptr) {
        delete _impl_.message_.update_worker_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.message_.update_worker_);
      }
      break;
    }
    case kUpdateJob: {
      if (GetArena() == nullptr) {
        delete _impl_.message_.update_job_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.message_.update_job_);
      }
      break;
    }
    case kPing: {
      if (GetArena() == nullptr) {
        delete _impl_.message_.ping_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.message_.ping_);
      }
      break;
    }
    case kSimulateJob: {
      if (GetArena() == nullptr) {
        delete _impl_.message_.simulate_job_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.message_.simulate_job_);
      }
      break;
    }
    case kMigrateJob: {
      if (GetArena() == nullptr) {
        delete _impl_.message_.migrate_job_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.message_.migrate_job_);
      }
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = MESSAGE_NOT_SET;
}


inline void* PROTOBUF_NONNULL WorkerMessage::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) WorkerMessage(arena);
}
constexpr auto WorkerMessage::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(WorkerMessage),
                                            alignof(WorkerMessage));
}
constexpr auto WorkerMessage::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_WorkerMessage_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &WorkerMessage::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<WorkerMessage>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &WorkerMessage::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<WorkerMessage>(), &WorkerMessage::ByteSizeLong,
              &WorkerMessage::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(WorkerMessage, _impl_._cached_size_),
          false,
      },
      &WorkerMessage::kDescriptorMethods,
      &descriptor_table_livekit_5fagent_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        WorkerMessage_class_data_ =
            WorkerMessage::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL WorkerMessage::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&WorkerMessage_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(WorkerMessage_class_data_.tc_table);
  return WorkerMessage_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 7, 7, 0, 2>
WorkerMessage::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    7, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    7,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    WorkerMessage_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::livekit::WorkerMessage>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .livekit.RegisterWorkerRequest register = 1;
    {PROTOBUF_FIELD_OFFSET(WorkerMessage, _impl_.message_.register__), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .livekit.AvailabilityResponse availability = 2;
    {PROTOBUF_FIELD_OFFSET(WorkerMessage, _impl_.message_.availability_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .livekit.UpdateWorkerStatus update_worker = 3;
    {PROTOBUF_FIELD_OFFSET(WorkerMessage, _impl_.message_.update_worker_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .livekit.UpdateJobStatus update_job = 4;
    {PROTOBUF_FIELD_OFFSET(WorkerMessage, _impl_.message_.update_job_), _Internal::kOneofCaseOffset + 0, 3,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .livekit.WorkerPing ping = 5;
    {PROTOBUF_FIELD_OFFSET(WorkerMessage, _impl_.message_.ping_), _Internal::kOneofCaseOffset + 0, 4,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .livekit.SimulateJobRequest simulate_job = 6;
    {PROTOBUF_FIELD_OFFSET(WorkerMessage, _impl_.message_.simulate_job_), _Internal::kOneofCaseOffset + 0, 5,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .livekit.MigrateJobRequest migrate_job = 7;
    {PROTOBUF_FIELD_OFFSET(WorkerMessage, _impl_.message_.migrate_job_), _Internal::kOneofCaseOffset + 0, 6,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::livekit::RegisterWorkerRequest>()},
      {::_pbi::TcParser::GetTable<::livekit::AvailabilityResponse>()},
      {::_pbi::TcParser::GetTable<::livekit::UpdateWorkerStatus>()},
      {::_pbi::TcParser::GetTable<::livekit::UpdateJobStatus>()},
      {::_pbi::TcParser::GetTable<::livekit::WorkerPing>()},
      {::_pbi::TcParser::GetTable<::livekit::SimulateJobRequest>()},
      {::_pbi::TcParser::GetTable<::livekit::MigrateJobRequest>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void WorkerMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:livekit.WorkerMessage)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_message();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL WorkerMessage::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const WorkerMessage& this_ = static_cast<const WorkerMessage&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL WorkerMessage::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const WorkerMessage& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:livekit.WorkerMessage)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (this_.message_case()) {
    case kRegister: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          1, *this_._impl_.message_.register__, this_._impl_.message_.register__->GetCachedSize(), target,
          stream);
      break;
    }
    case kAvailability: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          2, *this_._impl_.message_.availability_, this_._impl_.message_.availability_->GetCachedSize(), target,
          stream);
      break;
    }
    case kUpdateWorker: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          3, *this_._impl_.message_.update_worker_, this_._impl_.message_.update_worker_->GetCachedSize(), target,
          stream);
      break;
    }
    case kUpdateJob: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          4, *this_._impl_.message_.update_job_, this_._impl_.message_.update_job_->GetCachedSize(), target,
          stream);
      break;
    }
    case kPing: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          5, *this_._impl_.message_.ping_, this_._impl_.message_.ping_->GetCachedSize(), target,
          stream);
      break;
    }
    case kSimulateJob: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          6, *this_._impl_.message_.simulate_job_, this_._impl_.message_.simulate_job_->GetCachedSize(), target,
          stream);
      break;
    }
    case kMigrateJob: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          7, *this_._impl_.message_.migrate_job_, this_._impl_.message_.migrate_job_->GetCachedSize(), target,
          stream);
      break;
    }
    default:
      break;
  }
  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:livekit.WorkerMessage)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t WorkerMessage::ByteSizeLong(const MessageLite& base) {
  const WorkerMessage& this_ = static_cast<const WorkerMessage&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t WorkerMessage::ByteSizeLong() const {
  const WorkerMessage& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:livekit.WorkerMessage)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  switch (this_.message_case()) {
    // .livekit.RegisterWorkerRequest register = 1;
    case kRegister: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.message_.register__);
      break;
    }
    // .livekit.AvailabilityResponse availability = 2;
    case kAvailability: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.message_.availability_);
      break;
    }
    // .livekit.UpdateWorkerStatus update_worker = 3;
    case kUpdateWorker: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.message_.update_worker_);
      break;
    }
    // .livekit.UpdateJobStatus update_job = 4;
    case kUpdateJob: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.message_.update_job_);
      break;
    }
    // .livekit.WorkerPing ping = 5;
    case kPing: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.message_.ping_);
      break;
    }
    // .livekit.SimulateJobRequest simulate_job = 6;
    case kSimulateJob: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.message_.simulate_job_);
      break;
    }
    // .livekit.MigrateJobRequest migrate_job = 7;
    case kMigrateJob: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.message_.migrate_job_);
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void WorkerMessage::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<WorkerMessage*>(&to_msg);
  auto& from = static_cast<const WorkerMessage&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:livekit.WorkerMessage)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_message();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kRegister: {
        if (oneof_needs_init) {
          _this->_impl_.message_.register__ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.message_.register__);
        } else {
          _this->_impl_.message_.register__->MergeFrom(*from._impl_.message_.register__);
        }
        break;
      }
      case kAvailability: {
        if (oneof_needs_init) {
          _this->_impl_.message_.availability_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.message_.availability_);
        } else {
          _this->_impl_.message_.availability_->MergeFrom(*from._impl_.message_.availability_);
        }
        break;
      }
      case kUpdateWorker: {
        if (oneof_needs_init) {
          _this->_impl_.message_.update_worker_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.message_.update_worker_);
        } else {
          _this->_impl_.message_.update_worker_->MergeFrom(*from._impl_.message_.update_worker_);
        }
        break;
      }
      case kUpdateJob: {
        if (oneof_needs_init) {
          _this->_impl_.message_.update_job_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.message_.update_job_);
        } else {
          _this->_impl_.message_.update_job_->MergeFrom(*from._impl_.message_.update_job_);
        }
        break;
      }
      case kPing: {
        if (oneof_needs_init) {
          _this->_impl_.message_.ping_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.message_.ping_);
        } else {
          _this->_impl_.message_.ping_->MergeFrom(*from._impl_.message_.ping_);
        }
        break;
      }
      case kSimulateJob: {
        if (oneof_needs_init) {
          _this->_impl_.message_.simulate_job_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.message_.simulate_job_);
        } else {
          _this->_impl_.message_.simulate_job_->MergeFrom(*from._impl_.message_.simulate_job_);
        }
        break;
      }
      case kMigrateJob: {
        if (oneof_needs_init) {
          _this->_impl_.message_.migrate_job_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.message_.migrate_job_);
        } else {
          _this->_impl_.message_.migrate_job_->MergeFrom(*from._impl_.message_.migrate_job_);
        }
        break;
      }
      case MESSAGE_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void WorkerMessage::CopyFrom(const WorkerMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:livekit.WorkerMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void WorkerMessage::InternalSwap(WorkerMessage* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.message_, other->_impl_.message_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata WorkerMessage::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ServerMessage::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::livekit::ServerMessage, _impl_._oneof_case_);
};

void ServerMessage::set_allocated_register_(::livekit::RegisterWorkerResponse* PROTOBUF_NULLABLE register_) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_message();
  if (register_) {
    ::google::protobuf::Arena* submessage_arena = register_->GetArena();
    if (message_arena != submessage_arena) {
      register_ = ::google::protobuf::internal::GetOwnedMessage(message_arena, register_, submessage_arena);
    }
    set_has_register_();
    _impl_.message_.register__ = register_;
  }
  // @@protoc_insertion_point(field_set_allocated:livekit.ServerMessage.register)
}
void ServerMessage::set_allocated_availability(::livekit::AvailabilityRequest* PROTOBUF_NULLABLE availability) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_message();
  if (availability) {
    ::google::protobuf::Arena* submessage_arena = availability->GetArena();
    if (message_arena != submessage_arena) {
      availability = ::google::protobuf::internal::GetOwnedMessage(message_arena, availability, submessage_arena);
    }
    set_has_availability();
    _impl_.message_.availability_ = availability;
  }
  // @@protoc_insertion_point(field_set_allocated:livekit.ServerMessage.availability)
}
void ServerMessage::set_allocated_assignment(::livekit::JobAssignment* PROTOBUF_NULLABLE assignment) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_message();
  if (assignment) {
    ::google::protobuf::Arena* submessage_arena = assignment->GetArena();
    if (message_arena != submessage_arena) {
      assignment = ::google::protobuf::internal::GetOwnedMessage(message_arena, assignment, submessage_arena);
    }
    set_has_assignment();
    _impl_.message_.assignment_ = assignment;
  }
  // @@protoc_insertion_point(field_set_allocated:livekit.ServerMessage.assignment)
}
void ServerMessage::set_allocated_termination(::livekit::JobTermination* PROTOBUF_NULLABLE termination) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_message();
  if (termination) {
    ::google::protobuf::Arena* submessage_arena = termination->GetArena();
    if (message_arena != submessage_arena) {
      termination = ::google::protobuf::internal::GetOwnedMessage(message_arena, termination, submessage_arena);
    }
    set_has_termination();
    _impl_.message_.termination_ = termination;
  }
  // @@protoc_insertion_point(field_set_allocated:livekit.ServerMessage.termination)
}
void ServerMessage::set_allocated_pong(::livekit::WorkerPong* PROTOBUF_NULLABLE pong) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_message();
  if (pong) {
    ::google::protobuf::Arena* submessage_arena = pong->GetArena();
    if (message_arena != submessage_arena) {
      pong = ::google::protobuf::internal::GetOwnedMessage(message_arena, pong, submessage_arena);
    }
    set_has_pong();
    _impl_.message_.pong_ = pong;
  }
  // @@protoc_insertion_point(field_set_allocated:livekit.ServerMessage.pong)
}
ServerMessage::ServerMessage(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ServerMessage_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:livekit.ServerMessage)
}
PROTOBUF_NDEBUG_INLINE ServerMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::livekit::ServerMessage& from_msg)
      : message_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

ServerMessage::ServerMessage(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ServerMessage& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ServerMessage_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ServerMessage* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  switch (message_case()) {
    case MESSAGE_NOT_SET:
      break;
      case kRegister:
        _impl_.message_.register__ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.message_.register__);
        break;
      case kAvailability:
        _impl_.message_.availability_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.message_.availability_);
        break;
      case kAssignment:
        _impl_.message_.assignment_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.message_.assignment_);
        break;
      case kTermination:
        _impl_.message_.termination_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.message_.termination_);
        break;
      case kPong:
        _impl_.message_.pong_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.message_.pong_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:livekit.ServerMessage)
}
PROTOBUF_NDEBUG_INLINE ServerMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : message_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void ServerMessage::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ServerMessage::~ServerMessage() {
  // @@protoc_insertion_point(destructor:livekit.ServerMessage)
  SharedDtor(*this);
}
inline void ServerMessage::SharedDtor(MessageLite& self) {
  ServerMessage& this_ = static_cast<ServerMessage&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  if (this_.has_message()) {
    this_.clear_message();
  }
  this_._impl_.~Impl_();
}

void ServerMessage::clear_message() {
// @@protoc_insertion_point(one_of_clear_start:livekit.ServerMessage)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (message_case()) {
    case kRegister: {
      if (GetArena() == nullptr) {
        delete _impl_.message_.register__;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.message_.register__);
      }
      break;
    }
    case kAvailability: {
      if (GetArena() == nullptr) {
        delete _impl_.message_.availability_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.message_.availability_);
      }
      break;
    }
    case kAssignment: {
      if (GetArena() == nullptr) {
        delete _impl_.message_.assignment_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.message_.assignment_);
      }
      break;
    }
    case kTermination: {
      if (GetArena() == nullptr) {
        delete _impl_.message_.termination_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.message_.termination_);
      }
      break;
    }
    case kPong: {
      if (GetArena() == nullptr) {
        delete _impl_.message_.pong_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.message_.pong_);
      }
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = MESSAGE_NOT_SET;
}


inline void* PROTOBUF_NONNULL ServerMessage::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ServerMessage(arena);
}
constexpr auto ServerMessage::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ServerMessage),
                                            alignof(ServerMessage));
}
constexpr auto ServerMessage::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ServerMessage_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ServerMessage::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ServerMessage>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ServerMessage::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ServerMessage>(), &ServerMessage::ByteSizeLong,
              &ServerMessage::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ServerMessage, _impl_._cached_size_),
          false,
      },
      &ServerMessage::kDescriptorMethods,
      &descriptor_table_livekit_5fagent_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        ServerMessage_class_data_ =
            ServerMessage::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL ServerMessage::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ServerMessage_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ServerMessage_class_data_.tc_table);
  return ServerMessage_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 5, 5, 0, 2>
ServerMessage::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    5,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    ServerMessage_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::livekit::ServerMessage>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .livekit.RegisterWorkerResponse register = 1;
    {PROTOBUF_FIELD_OFFSET(ServerMessage, _impl_.message_.register__), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .livekit.AvailabilityRequest availability = 2;
    {PROTOBUF_FIELD_OFFSET(ServerMessage, _impl_.message_.availability_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .livekit.JobAssignment assignment = 3;
    {PROTOBUF_FIELD_OFFSET(ServerMessage, _impl_.message_.assignment_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .livekit.WorkerPong pong = 4;
    {PROTOBUF_FIELD_OFFSET(ServerMessage, _impl_.message_.pong_), _Internal::kOneofCaseOffset + 0, 3,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .livekit.JobTermination termination = 5;
    {PROTOBUF_FIELD_OFFSET(ServerMessage, _impl_.message_.termination_), _Internal::kOneofCaseOffset + 0, 4,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::livekit::RegisterWorkerResponse>()},
      {::_pbi::TcParser::GetTable<::livekit::AvailabilityRequest>()},
      {::_pbi::TcParser::GetTable<::livekit::JobAssignment>()},
      {::_pbi::TcParser::GetTable<::livekit::WorkerPong>()},
      {::_pbi::TcParser::GetTable<::livekit::JobTermination>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void ServerMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:livekit.ServerMessage)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_message();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ServerMessage::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ServerMessage& this_ = static_cast<const ServerMessage&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ServerMessage::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ServerMessage& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:livekit.ServerMessage)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (this_.message_case()) {
    case kRegister: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          1, *this_._impl_.message_.register__, this_._impl_.message_.register__->GetCachedSize(), target,
          stream);
      break;
    }
    case kAvailability: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          2, *this_._impl_.message_.availability_, this_._impl_.message_.availability_->GetCachedSize(), target,
          stream);
      break;
    }
    case kAssignment: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          3, *this_._impl_.message_.assignment_, this_._impl_.message_.assignment_->GetCachedSize(), target,
          stream);
      break;
    }
    case kPong: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          4, *this_._impl_.message_.pong_, this_._impl_.message_.pong_->GetCachedSize(), target,
          stream);
      break;
    }
    case kTermination: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          5, *this_._impl_.message_.termination_, this_._impl_.message_.termination_->GetCachedSize(), target,
          stream);
      break;
    }
    default:
      break;
  }
  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:livekit.ServerMessage)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ServerMessage::ByteSizeLong(const MessageLite& base) {
  const ServerMessage& this_ = static_cast<const ServerMessage&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ServerMessage::ByteSizeLong() const {
  const ServerMessage& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:livekit.ServerMessage)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  switch (this_.message_case()) {
    // .livekit.RegisterWorkerResponse register = 1;
    case kRegister: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.message_.register__);
      break;
    }
    // .livekit.AvailabilityRequest availability = 2;
    case kAvailability: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.message_.availability_);
      break;
    }
    // .livekit.JobAssignment assignment = 3;
    case kAssignment: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.message_.assignment_);
      break;
    }
    // .livekit.JobTermination termination = 5;
    case kTermination: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.message_.termination_);
      break;
    }
    // .livekit.WorkerPong pong = 4;
    case kPong: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.message_.pong_);
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ServerMessage::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ServerMessage*>(&to_msg);
  auto& from = static_cast<const ServerMessage&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:livekit.ServerMessage)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_message();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kRegister: {
        if (oneof_needs_init) {
          _this->_impl_.message_.register__ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.message_.register__);
        } else {
          _this->_impl_.message_.register__->MergeFrom(*from._impl_.message_.register__);
        }
        break;
      }
      case kAvailability: {
        if (oneof_needs_init) {
          _this->_impl_.message_.availability_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.message_.availability_);
        } else {
          _this->_impl_.message_.availability_->MergeFrom(*from._impl_.message_.availability_);
        }
        break;
      }
      case kAssignment: {
        if (oneof_needs_init) {
          _this->_impl_.message_.assignment_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.message_.assignment_);
        } else {
          _this->_impl_.message_.assignment_->MergeFrom(*from._impl_.message_.assignment_);
        }
        break;
      }
      case kTermination: {
        if (oneof_needs_init) {
          _this->_impl_.message_.termination_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.message_.termination_);
        } else {
          _this->_impl_.message_.termination_->MergeFrom(*from._impl_.message_.termination_);
        }
        break;
      }
      case kPong: {
        if (oneof_needs_init) {
          _this->_impl_.message_.pong_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.message_.pong_);
        } else {
          _this->_impl_.message_.pong_->MergeFrom(*from._impl_.message_.pong_);
        }
        break;
      }
      case MESSAGE_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ServerMessage::CopyFrom(const ServerMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:livekit.ServerMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ServerMessage::InternalSwap(ServerMessage* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.message_, other->_impl_.message_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata ServerMessage::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SimulateJobRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<SimulateJobRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SimulateJobRequest, _impl_._has_bits_);
};

void SimulateJobRequest::clear_room() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.room_ != nullptr) _impl_.room_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void SimulateJobRequest::clear_participant() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.participant_ != nullptr) _impl_.participant_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
SimulateJobRequest::SimulateJobRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SimulateJobRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:livekit.SimulateJobRequest)
}
PROTOBUF_NDEBUG_INLINE SimulateJobRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::livekit::SimulateJobRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SimulateJobRequest::SimulateJobRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const SimulateJobRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SimulateJobRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SimulateJobRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.room_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.room_)
                : nullptr;
  _impl_.participant_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.participant_)
                : nullptr;
  _impl_.type_ = from._impl_.type_;

  // @@protoc_insertion_point(copy_constructor:livekit.SimulateJobRequest)
}
PROTOBUF_NDEBUG_INLINE SimulateJobRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void SimulateJobRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, room_),
           0,
           offsetof(Impl_, type_) -
               offsetof(Impl_, room_) +
               sizeof(Impl_::type_));
}
SimulateJobRequest::~SimulateJobRequest() {
  // @@protoc_insertion_point(destructor:livekit.SimulateJobRequest)
  SharedDtor(*this);
}
inline void SimulateJobRequest::SharedDtor(MessageLite& self) {
  SimulateJobRequest& this_ = static_cast<SimulateJobRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.room_;
  delete this_._impl_.participant_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL SimulateJobRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SimulateJobRequest(arena);
}
constexpr auto SimulateJobRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SimulateJobRequest),
                                            alignof(SimulateJobRequest));
}
constexpr auto SimulateJobRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SimulateJobRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SimulateJobRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SimulateJobRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SimulateJobRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<SimulateJobRequest>(), &SimulateJobRequest::ByteSizeLong,
              &SimulateJobRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SimulateJobRequest, _impl_._cached_size_),
          false,
      },
      &SimulateJobRequest::kDescriptorMethods,
      &descriptor_table_livekit_5fagent_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        SimulateJobRequest_class_data_ =
            SimulateJobRequest::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL SimulateJobRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SimulateJobRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SimulateJobRequest_class_data_.tc_table);
  return SimulateJobRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 2, 0, 2>
SimulateJobRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SimulateJobRequest, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    SimulateJobRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::livekit::SimulateJobRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .livekit.JobType type = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SimulateJobRequest, _impl_.type_), 2>(),
     {8, 2, 0, PROTOBUF_FIELD_OFFSET(SimulateJobRequest, _impl_.type_)}},
    // .livekit.Room room = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(SimulateJobRequest, _impl_.room_)}},
    // .livekit.ParticipantInfo participant = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 1, PROTOBUF_FIELD_OFFSET(SimulateJobRequest, _impl_.participant_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .livekit.JobType type = 1;
    {PROTOBUF_FIELD_OFFSET(SimulateJobRequest, _impl_.type_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // .livekit.Room room = 2;
    {PROTOBUF_FIELD_OFFSET(SimulateJobRequest, _impl_.room_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .livekit.ParticipantInfo participant = 3;
    {PROTOBUF_FIELD_OFFSET(SimulateJobRequest, _impl_.participant_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::livekit::Room>()},
      {::_pbi::TcParser::GetTable<::livekit::ParticipantInfo>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void SimulateJobRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:livekit.SimulateJobRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.room_ != nullptr);
      _impl_.room_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.participant_ != nullptr);
      _impl_.participant_->Clear();
    }
  }
  _impl_.type_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL SimulateJobRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const SimulateJobRequest& this_ = static_cast<const SimulateJobRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL SimulateJobRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const SimulateJobRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:livekit.SimulateJobRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .livekit.JobType type = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (this_._internal_type() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          1, this_._internal_type(), target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .livekit.Room room = 2;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.room_, this_._impl_.room_->GetCachedSize(), target,
        stream);
  }

  // .livekit.ParticipantInfo participant = 3;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.participant_, this_._impl_.participant_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:livekit.SimulateJobRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t SimulateJobRequest::ByteSizeLong(const MessageLite& base) {
  const SimulateJobRequest& this_ = static_cast<const SimulateJobRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t SimulateJobRequest::ByteSizeLong() const {
  const SimulateJobRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:livekit.SimulateJobRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // .livekit.Room room = 2;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.room_);
    }
    // .livekit.ParticipantInfo participant = 3;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.participant_);
    }
    // .livekit.JobType type = 1;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_type() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_type());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void SimulateJobRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SimulateJobRequest*>(&to_msg);
  auto& from = static_cast<const SimulateJobRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:livekit.SimulateJobRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.room_ != nullptr);
      if (_this->_impl_.room_ == nullptr) {
        _this->_impl_.room_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.room_);
      } else {
        _this->_impl_.room_->MergeFrom(*from._impl_.room_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.participant_ != nullptr);
      if (_this->_impl_.participant_ == nullptr) {
        _this->_impl_.participant_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.participant_);
      } else {
        _this->_impl_.participant_->MergeFrom(*from._impl_.participant_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_type() != 0) {
        _this->_impl_.type_ = from._impl_.type_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SimulateJobRequest::CopyFrom(const SimulateJobRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:livekit.SimulateJobRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SimulateJobRequest::InternalSwap(SimulateJobRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SimulateJobRequest, _impl_.type_)
      + sizeof(SimulateJobRequest::_impl_.type_)
      - PROTOBUF_FIELD_OFFSET(SimulateJobRequest, _impl_.room_)>(
          reinterpret_cast<char*>(&_impl_.room_),
          reinterpret_cast<char*>(&other->_impl_.room_));
}

::google::protobuf::Metadata SimulateJobRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class WorkerPing::_Internal {
 public:
  using HasBits =
      decltype(std::declval<WorkerPing>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(WorkerPing, _impl_._has_bits_);
};

WorkerPing::WorkerPing(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, WorkerPing_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:livekit.WorkerPing)
}
WorkerPing::WorkerPing(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const WorkerPing& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, WorkerPing_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE WorkerPing::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void WorkerPing::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.timestamp_ = {};
}
WorkerPing::~WorkerPing() {
  // @@protoc_insertion_point(destructor:livekit.WorkerPing)
  SharedDtor(*this);
}
inline void WorkerPing::SharedDtor(MessageLite& self) {
  WorkerPing& this_ = static_cast<WorkerPing&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL WorkerPing::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) WorkerPing(arena);
}
constexpr auto WorkerPing::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(WorkerPing),
                                            alignof(WorkerPing));
}
constexpr auto WorkerPing::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_WorkerPing_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &WorkerPing::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<WorkerPing>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &WorkerPing::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<WorkerPing>(), &WorkerPing::ByteSizeLong,
              &WorkerPing::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(WorkerPing, _impl_._cached_size_),
          false,
      },
      &WorkerPing::kDescriptorMethods,
      &descriptor_table_livekit_5fagent_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        WorkerPing_class_data_ =
            WorkerPing::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL WorkerPing::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&WorkerPing_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(WorkerPing_class_data_.tc_table);
  return WorkerPing_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2>
WorkerPing::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(WorkerPing, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    WorkerPing_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::livekit::WorkerPing>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int64 timestamp = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(WorkerPing, _impl_.timestamp_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(WorkerPing, _impl_.timestamp_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 timestamp = 1;
    {PROTOBUF_FIELD_OFFSET(WorkerPing, _impl_.timestamp_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void WorkerPing::Clear() {
// @@protoc_insertion_point(message_clear_start:livekit.WorkerPing)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.timestamp_ = ::int64_t{0};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL WorkerPing::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const WorkerPing& this_ = static_cast<const WorkerPing&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL WorkerPing::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const WorkerPing& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:livekit.WorkerPing)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int64 timestamp = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (this_._internal_timestamp() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<1>(
              stream, this_._internal_timestamp(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:livekit.WorkerPing)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t WorkerPing::ByteSizeLong(const MessageLite& base) {
  const WorkerPing& this_ = static_cast<const WorkerPing&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t WorkerPing::ByteSizeLong() const {
  const WorkerPing& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:livekit.WorkerPing)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // int64 timestamp = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (this_._internal_timestamp() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_timestamp());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void WorkerPing::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<WorkerPing*>(&to_msg);
  auto& from = static_cast<const WorkerPing&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:livekit.WorkerPing)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    if (from._internal_timestamp() != 0) {
      _this->_impl_.timestamp_ = from._impl_.timestamp_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void WorkerPing::CopyFrom(const WorkerPing& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:livekit.WorkerPing)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void WorkerPing::InternalSwap(WorkerPing* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.timestamp_, other->_impl_.timestamp_);
}

::google::protobuf::Metadata WorkerPing::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class WorkerPong::_Internal {
 public:
  using HasBits =
      decltype(std::declval<WorkerPong>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(WorkerPong, _impl_._has_bits_);
};

WorkerPong::WorkerPong(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, WorkerPong_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:livekit.WorkerPong)
}
WorkerPong::WorkerPong(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const WorkerPong& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, WorkerPong_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE WorkerPong::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void WorkerPong::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, last_timestamp_),
           0,
           offsetof(Impl_, timestamp_) -
               offsetof(Impl_, last_timestamp_) +
               sizeof(Impl_::timestamp_));
}
WorkerPong::~WorkerPong() {
  // @@protoc_insertion_point(destructor:livekit.WorkerPong)
  SharedDtor(*this);
}
inline void WorkerPong::SharedDtor(MessageLite& self) {
  WorkerPong& this_ = static_cast<WorkerPong&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL WorkerPong::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) WorkerPong(arena);
}
constexpr auto WorkerPong::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(WorkerPong),
                                            alignof(WorkerPong));
}
constexpr auto WorkerPong::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_WorkerPong_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &WorkerPong::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<WorkerPong>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &WorkerPong::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<WorkerPong>(), &WorkerPong::ByteSizeLong,
              &WorkerPong::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(WorkerPong, _impl_._cached_size_),
          false,
      },
      &WorkerPong::kDescriptorMethods,
      &descriptor_table_livekit_5fagent_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        WorkerPong_class_data_ =
            WorkerPong::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL WorkerPong::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&WorkerPong_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(WorkerPong_class_data_.tc_table);
  return WorkerPong_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2>
WorkerPong::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(WorkerPong, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    WorkerPong_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::livekit::WorkerPong>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int64 timestamp = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(WorkerPong, _impl_.timestamp_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(WorkerPong, _impl_.timestamp_)}},
    // int64 last_timestamp = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(WorkerPong, _impl_.last_timestamp_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(WorkerPong, _impl_.last_timestamp_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 last_timestamp = 1;
    {PROTOBUF_FIELD_OFFSET(WorkerPong, _impl_.last_timestamp_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // int64 timestamp = 2;
    {PROTOBUF_FIELD_OFFSET(WorkerPong, _impl_.timestamp_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void WorkerPong::Clear() {
// @@protoc_insertion_point(message_clear_start:livekit.WorkerPong)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    ::memset(&_impl_.last_timestamp_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.timestamp_) -
        reinterpret_cast<char*>(&_impl_.last_timestamp_)) + sizeof(_impl_.timestamp_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL WorkerPong::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const WorkerPong& this_ = static_cast<const WorkerPong&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL WorkerPong::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const WorkerPong& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:livekit.WorkerPong)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int64 last_timestamp = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (this_._internal_last_timestamp() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<1>(
              stream, this_._internal_last_timestamp(), target);
    }
  }

  // int64 timestamp = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_timestamp() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<2>(
              stream, this_._internal_timestamp(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:livekit.WorkerPong)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t WorkerPong::ByteSizeLong(const MessageLite& base) {
  const WorkerPong& this_ = static_cast<const WorkerPong&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t WorkerPong::ByteSizeLong() const {
  const WorkerPong& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:livekit.WorkerPong)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // int64 last_timestamp = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (this_._internal_last_timestamp() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_last_timestamp());
      }
    }
    // int64 timestamp = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_timestamp() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_timestamp());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void WorkerPong::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<WorkerPong*>(&to_msg);
  auto& from = static_cast<const WorkerPong&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:livekit.WorkerPong)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (from._internal_last_timestamp() != 0) {
        _this->_impl_.last_timestamp_ = from._impl_.last_timestamp_;
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_timestamp() != 0) {
        _this->_impl_.timestamp_ = from._impl_.timestamp_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void WorkerPong::CopyFrom(const WorkerPong& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:livekit.WorkerPong)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void WorkerPong::InternalSwap(WorkerPong* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(WorkerPong, _impl_.timestamp_)
      + sizeof(WorkerPong::_impl_.timestamp_)
      - PROTOBUF_FIELD_OFFSET(WorkerPong, _impl_.last_timestamp_)>(
          reinterpret_cast<char*>(&_impl_.last_timestamp_),
          reinterpret_cast<char*>(&other->_impl_.last_timestamp_));
}

::google::protobuf::Metadata WorkerPong::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RegisterWorkerRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<RegisterWorkerRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(RegisterWorkerRequest, _impl_._has_bits_);
};

void RegisterWorkerRequest::clear_allowed_permissions() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.allowed_permissions_ != nullptr) _impl_.allowed_permissions_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
RegisterWorkerRequest::RegisterWorkerRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RegisterWorkerRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:livekit.RegisterWorkerRequest)
}
PROTOBUF_NDEBUG_INLINE RegisterWorkerRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::livekit::RegisterWorkerRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        version_(arena, from.version_),
        namespace__(arena, from.namespace__),
        agent_name_(arena, from.agent_name_) {}

RegisterWorkerRequest::RegisterWorkerRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const RegisterWorkerRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RegisterWorkerRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RegisterWorkerRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.allowed_permissions_ = ((cached_has_bits & 0x00000008u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.allowed_permissions_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, type_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, type_),
           offsetof(Impl_, ping_interval_) -
               offsetof(Impl_, type_) +
               sizeof(Impl_::ping_interval_));

  // @@protoc_insertion_point(copy_constructor:livekit.RegisterWorkerRequest)
}
PROTOBUF_NDEBUG_INLINE RegisterWorkerRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        version_(arena),
        namespace__(arena),
        agent_name_(arena) {}

inline void RegisterWorkerRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, allowed_permissions_),
           0,
           offsetof(Impl_, ping_interval_) -
               offsetof(Impl_, allowed_permissions_) +
               sizeof(Impl_::ping_interval_));
}
RegisterWorkerRequest::~RegisterWorkerRequest() {
  // @@protoc_insertion_point(destructor:livekit.RegisterWorkerRequest)
  SharedDtor(*this);
}
inline void RegisterWorkerRequest::SharedDtor(MessageLite& self) {
  RegisterWorkerRequest& this_ = static_cast<RegisterWorkerRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.version_.Destroy();
  this_._impl_.namespace__.Destroy();
  this_._impl_.agent_name_.Destroy();
  delete this_._impl_.allowed_permissions_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL RegisterWorkerRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) RegisterWorkerRequest(arena);
}
constexpr auto RegisterWorkerRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(RegisterWorkerRequest),
                                            alignof(RegisterWorkerRequest));
}
constexpr auto RegisterWorkerRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_RegisterWorkerRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &RegisterWorkerRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<RegisterWorkerRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &RegisterWorkerRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<RegisterWorkerRequest>(), &RegisterWorkerRequest::ByteSizeLong,
              &RegisterWorkerRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(RegisterWorkerRequest, _impl_._cached_size_),
          false,
      },
      &RegisterWorkerRequest::kDescriptorMethods,
      &descriptor_table_livekit_5fagent_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        RegisterWorkerRequest_class_data_ =
            RegisterWorkerRequest::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL RegisterWorkerRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&RegisterWorkerRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(RegisterWorkerRequest_class_data_.tc_table);
  return RegisterWorkerRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 1, 64, 2>
RegisterWorkerRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RegisterWorkerRequest, _impl_._has_bits_),
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967050,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    RegisterWorkerRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::livekit::RegisterWorkerRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string agent_name = 8;
    {::_pbi::TcParser::FastUS1,
     {66, 2, 0, PROTOBUF_FIELD_OFFSET(RegisterWorkerRequest, _impl_.agent_name_)}},
    // .livekit.JobType type = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RegisterWorkerRequest, _impl_.type_), 4>(),
     {8, 4, 0, PROTOBUF_FIELD_OFFSET(RegisterWorkerRequest, _impl_.type_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // string version = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(RegisterWorkerRequest, _impl_.version_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 ping_interval = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RegisterWorkerRequest, _impl_.ping_interval_), 5>(),
     {40, 5, 0, PROTOBUF_FIELD_OFFSET(RegisterWorkerRequest, _impl_.ping_interval_)}},
    // optional string namespace = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 1, 0, PROTOBUF_FIELD_OFFSET(RegisterWorkerRequest, _impl_.namespace__)}},
    // .livekit.ParticipantPermission allowed_permissions = 7;
    {::_pbi::TcParser::FastMtS1,
     {58, 3, 0, PROTOBUF_FIELD_OFFSET(RegisterWorkerRequest, _impl_.allowed_permissions_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .livekit.JobType type = 1;
    {PROTOBUF_FIELD_OFFSET(RegisterWorkerRequest, _impl_.type_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // string version = 3;
    {PROTOBUF_FIELD_OFFSET(RegisterWorkerRequest, _impl_.version_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 ping_interval = 5;
    {PROTOBUF_FIELD_OFFSET(RegisterWorkerRequest, _impl_.ping_interval_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional string namespace = 6;
    {PROTOBUF_FIELD_OFFSET(RegisterWorkerRequest, _impl_.namespace__), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .livekit.ParticipantPermission allowed_permissions = 7;
    {PROTOBUF_FIELD_OFFSET(RegisterWorkerRequest, _impl_.allowed_permissions_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string agent_name = 8;
    {PROTOBUF_FIELD_OFFSET(RegisterWorkerRequest, _impl_.agent_name_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::livekit::ParticipantPermission>()},
  }},
  {{
    "\35\0\7\0\11\0\12\0"
    "livekit.RegisterWorkerRequest"
    "version"
    "namespace"
    "agent_name"
  }},
};
PROTOBUF_NOINLINE void RegisterWorkerRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:livekit.RegisterWorkerRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.version_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.namespace__.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _impl_.agent_name_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      ABSL_DCHECK(_impl_.allowed_permissions_ != nullptr);
      _impl_.allowed_permissions_->Clear();
    }
  }
  if ((cached_has_bits & 0x00000030u) != 0) {
    ::memset(&_impl_.type_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.ping_interval_) -
        reinterpret_cast<char*>(&_impl_.type_)) + sizeof(_impl_.ping_interval_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL RegisterWorkerRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const RegisterWorkerRequest& this_ = static_cast<const RegisterWorkerRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL RegisterWorkerRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const RegisterWorkerRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:livekit.RegisterWorkerRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .livekit.JobType type = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000010u) != 0) {
    if (this_._internal_type() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          1, this_._internal_type(), target);
    }
  }

  // string version = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_version().empty()) {
      const std::string& _s = this_._internal_version();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "livekit.RegisterWorkerRequest.version");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  // uint32 ping_interval = 5;
  if ((this_._impl_._has_bits_[0] & 0x00000020u) != 0) {
    if (this_._internal_ping_interval() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          5, this_._internal_ping_interval(), target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional string namespace = 6;
  if ((cached_has_bits & 0x00000002u) != 0) {
    const std::string& _s = this_._internal_namespace_();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "livekit.RegisterWorkerRequest.namespace");
    target = stream->WriteStringMaybeAliased(6, _s, target);
  }

  // .livekit.ParticipantPermission allowed_permissions = 7;
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        7, *this_._impl_.allowed_permissions_, this_._impl_.allowed_permissions_->GetCachedSize(), target,
        stream);
  }

  // string agent_name = 8;
  if ((cached_has_bits & 0x00000004u) != 0) {
    if (!this_._internal_agent_name().empty()) {
      const std::string& _s = this_._internal_agent_name();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "livekit.RegisterWorkerRequest.agent_name");
      target = stream->WriteStringMaybeAliased(8, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:livekit.RegisterWorkerRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t RegisterWorkerRequest::ByteSizeLong(const MessageLite& base) {
  const RegisterWorkerRequest& this_ = static_cast<const RegisterWorkerRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t RegisterWorkerRequest::ByteSizeLong() const {
  const RegisterWorkerRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:livekit.RegisterWorkerRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fu) != 0) {
    // string version = 3;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_version().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_version());
      }
    }
    // optional string namespace = 6;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_namespace_());
    }
    // string agent_name = 8;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (!this_._internal_agent_name().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_agent_name());
      }
    }
    // .livekit.ParticipantPermission allowed_permissions = 7;
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.allowed_permissions_);
    }
    // .livekit.JobType type = 1;
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (this_._internal_type() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_type());
      }
    }
    // uint32 ping_interval = 5;
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (this_._internal_ping_interval() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_ping_interval());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void RegisterWorkerRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RegisterWorkerRequest*>(&to_msg);
  auto& from = static_cast<const RegisterWorkerRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:livekit.RegisterWorkerRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_version().empty()) {
        _this->_internal_set_version(from._internal_version());
      } else {
        if (_this->_impl_.version_.IsDefault()) {
          _this->_internal_set_version("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_internal_set_namespace_(from._internal_namespace_());
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (!from._internal_agent_name().empty()) {
        _this->_internal_set_agent_name(from._internal_agent_name());
      } else {
        if (_this->_impl_.agent_name_.IsDefault()) {
          _this->_internal_set_agent_name("");
        }
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      ABSL_DCHECK(from._impl_.allowed_permissions_ != nullptr);
      if (_this->_impl_.allowed_permissions_ == nullptr) {
        _this->_impl_.allowed_permissions_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.allowed_permissions_);
      } else {
        _this->_impl_.allowed_permissions_->MergeFrom(*from._impl_.allowed_permissions_);
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (from._internal_type() != 0) {
        _this->_impl_.type_ = from._impl_.type_;
      }
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (from._internal_ping_interval() != 0) {
        _this->_impl_.ping_interval_ = from._impl_.ping_interval_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RegisterWorkerRequest::CopyFrom(const RegisterWorkerRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:livekit.RegisterWorkerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RegisterWorkerRequest::InternalSwap(RegisterWorkerRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.version_, &other->_impl_.version_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.namespace__, &other->_impl_.namespace__, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.agent_name_, &other->_impl_.agent_name_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RegisterWorkerRequest, _impl_.ping_interval_)
      + sizeof(RegisterWorkerRequest::_impl_.ping_interval_)
      - PROTOBUF_FIELD_OFFSET(RegisterWorkerRequest, _impl_.allowed_permissions_)>(
          reinterpret_cast<char*>(&_impl_.allowed_permissions_),
          reinterpret_cast<char*>(&other->_impl_.allowed_permissions_));
}

::google::protobuf::Metadata RegisterWorkerRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RegisterWorkerResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<RegisterWorkerResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(RegisterWorkerResponse, _impl_._has_bits_);
};

void RegisterWorkerResponse::clear_server_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.server_info_ != nullptr) _impl_.server_info_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
RegisterWorkerResponse::RegisterWorkerResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RegisterWorkerResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:livekit.RegisterWorkerResponse)
}
PROTOBUF_NDEBUG_INLINE RegisterWorkerResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::livekit::RegisterWorkerResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        worker_id_(arena, from.worker_id_) {}

RegisterWorkerResponse::RegisterWorkerResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const RegisterWorkerResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RegisterWorkerResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RegisterWorkerResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.server_info_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.server_info_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:livekit.RegisterWorkerResponse)
}
PROTOBUF_NDEBUG_INLINE RegisterWorkerResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        worker_id_(arena) {}

inline void RegisterWorkerResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.server_info_ = {};
}
RegisterWorkerResponse::~RegisterWorkerResponse() {
  // @@protoc_insertion_point(destructor:livekit.RegisterWorkerResponse)
  SharedDtor(*this);
}
inline void RegisterWorkerResponse::SharedDtor(MessageLite& self) {
  RegisterWorkerResponse& this_ = static_cast<RegisterWorkerResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.worker_id_.Destroy();
  delete this_._impl_.server_info_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL RegisterWorkerResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) RegisterWorkerResponse(arena);
}
constexpr auto RegisterWorkerResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(RegisterWorkerResponse),
                                            alignof(RegisterWorkerResponse));
}
constexpr auto RegisterWorkerResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_RegisterWorkerResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &RegisterWorkerResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<RegisterWorkerResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &RegisterWorkerResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<RegisterWorkerResponse>(), &RegisterWorkerResponse::ByteSizeLong,
              &RegisterWorkerResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(RegisterWorkerResponse, _impl_._cached_size_),
          false,
      },
      &RegisterWorkerResponse::kDescriptorMethods,
      &descriptor_table_livekit_5fagent_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        RegisterWorkerResponse_class_data_ =
            RegisterWorkerResponse::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL RegisterWorkerResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&RegisterWorkerResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(RegisterWorkerResponse_class_data_.tc_table);
  return RegisterWorkerResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 2, 1, 48, 2>
RegisterWorkerResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RegisterWorkerResponse, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967290,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    RegisterWorkerResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::livekit::RegisterWorkerResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string worker_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RegisterWorkerResponse, _impl_.worker_id_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // .livekit.ServerInfo server_info = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 0, PROTOBUF_FIELD_OFFSET(RegisterWorkerResponse, _impl_.server_info_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string worker_id = 1;
    {PROTOBUF_FIELD_OFFSET(RegisterWorkerResponse, _impl_.worker_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .livekit.ServerInfo server_info = 3;
    {PROTOBUF_FIELD_OFFSET(RegisterWorkerResponse, _impl_.server_info_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::livekit::ServerInfo>()},
  }},
  {{
    "\36\11\0\0\0\0\0\0"
    "livekit.RegisterWorkerResponse"
    "worker_id"
  }},
};
PROTOBUF_NOINLINE void RegisterWorkerResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:livekit.RegisterWorkerResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.worker_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.server_info_ != nullptr);
      _impl_.server_info_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL RegisterWorkerResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const RegisterWorkerResponse& this_ = static_cast<const RegisterWorkerResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL RegisterWorkerResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const RegisterWorkerResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:livekit.RegisterWorkerResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string worker_id = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_worker_id().empty()) {
      const std::string& _s = this_._internal_worker_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "livekit.RegisterWorkerResponse.worker_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .livekit.ServerInfo server_info = 3;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.server_info_, this_._impl_.server_info_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:livekit.RegisterWorkerResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t RegisterWorkerResponse::ByteSizeLong(const MessageLite& base) {
  const RegisterWorkerResponse& this_ = static_cast<const RegisterWorkerResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t RegisterWorkerResponse::ByteSizeLong() const {
  const RegisterWorkerResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:livekit.RegisterWorkerResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // string worker_id = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_worker_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_worker_id());
      }
    }
    // .livekit.ServerInfo server_info = 3;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.server_info_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void RegisterWorkerResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RegisterWorkerResponse*>(&to_msg);
  auto& from = static_cast<const RegisterWorkerResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:livekit.RegisterWorkerResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_worker_id().empty()) {
        _this->_internal_set_worker_id(from._internal_worker_id());
      } else {
        if (_this->_impl_.worker_id_.IsDefault()) {
          _this->_internal_set_worker_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.server_info_ != nullptr);
      if (_this->_impl_.server_info_ == nullptr) {
        _this->_impl_.server_info_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.server_info_);
      } else {
        _this->_impl_.server_info_->MergeFrom(*from._impl_.server_info_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RegisterWorkerResponse::CopyFrom(const RegisterWorkerResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:livekit.RegisterWorkerResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RegisterWorkerResponse::InternalSwap(RegisterWorkerResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.worker_id_, &other->_impl_.worker_id_, arena);
  swap(_impl_.server_info_, other->_impl_.server_info_);
}

::google::protobuf::Metadata RegisterWorkerResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class MigrateJobRequest::_Internal {
 public:
};

MigrateJobRequest::MigrateJobRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, MigrateJobRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:livekit.MigrateJobRequest)
}
PROTOBUF_NDEBUG_INLINE MigrateJobRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::livekit::MigrateJobRequest& from_msg)
      : job_ids_{visibility, arena, from.job_ids_},
        _cached_size_{0} {}

MigrateJobRequest::MigrateJobRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const MigrateJobRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, MigrateJobRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  MigrateJobRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:livekit.MigrateJobRequest)
}
PROTOBUF_NDEBUG_INLINE MigrateJobRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : job_ids_{visibility, arena},
        _cached_size_{0} {}

inline void MigrateJobRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
MigrateJobRequest::~MigrateJobRequest() {
  // @@protoc_insertion_point(destructor:livekit.MigrateJobRequest)
  SharedDtor(*this);
}
inline void MigrateJobRequest::SharedDtor(MessageLite& self) {
  MigrateJobRequest& this_ = static_cast<MigrateJobRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL MigrateJobRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) MigrateJobRequest(arena);
}
constexpr auto MigrateJobRequest::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(MigrateJobRequest, _impl_.job_ids_) +
          decltype(MigrateJobRequest::_impl_.job_ids_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(MigrateJobRequest), alignof(MigrateJobRequest), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&MigrateJobRequest::PlacementNew_,
                                 sizeof(MigrateJobRequest),
                                 alignof(MigrateJobRequest));
  }
}
constexpr auto MigrateJobRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_MigrateJobRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &MigrateJobRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<MigrateJobRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &MigrateJobRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<MigrateJobRequest>(), &MigrateJobRequest::ByteSizeLong,
              &MigrateJobRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(MigrateJobRequest, _impl_._cached_size_),
          false,
      },
      &MigrateJobRequest::kDescriptorMethods,
      &descriptor_table_livekit_5fagent_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        MigrateJobRequest_class_data_ =
            MigrateJobRequest::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL MigrateJobRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&MigrateJobRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(MigrateJobRequest_class_data_.tc_table);
  return MigrateJobRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 41, 2>
MigrateJobRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967293,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    MigrateJobRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::livekit::MigrateJobRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated string job_ids = 2;
    {::_pbi::TcParser::FastUR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(MigrateJobRequest, _impl_.job_ids_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated string job_ids = 2;
    {PROTOBUF_FIELD_OFFSET(MigrateJobRequest, _impl_.job_ids_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\31\7\0\0\0\0\0\0"
    "livekit.MigrateJobRequest"
    "job_ids"
  }},
};
PROTOBUF_NOINLINE void MigrateJobRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:livekit.MigrateJobRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.job_ids_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL MigrateJobRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const MigrateJobRequest& this_ = static_cast<const MigrateJobRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL MigrateJobRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const MigrateJobRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:livekit.MigrateJobRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated string job_ids = 2;
  for (int i = 0, n = this_._internal_job_ids_size(); i < n; ++i) {
    const auto& s = this_._internal_job_ids().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "livekit.MigrateJobRequest.job_ids");
    target = stream->WriteString(2, s, target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:livekit.MigrateJobRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t MigrateJobRequest::ByteSizeLong(const MessageLite& base) {
  const MigrateJobRequest& this_ = static_cast<const MigrateJobRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t MigrateJobRequest::ByteSizeLong() const {
  const MigrateJobRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:livekit.MigrateJobRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated string job_ids = 2;
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_job_ids().size());
      for (int i = 0, n = this_._internal_job_ids().size(); i < n; ++i) {
        total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
            this_._internal_job_ids().Get(i));
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void MigrateJobRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MigrateJobRequest*>(&to_msg);
  auto& from = static_cast<const MigrateJobRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:livekit.MigrateJobRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_job_ids()->MergeFrom(from._internal_job_ids());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MigrateJobRequest::CopyFrom(const MigrateJobRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:livekit.MigrateJobRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MigrateJobRequest::InternalSwap(MigrateJobRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.job_ids_.InternalSwap(&other->_impl_.job_ids_);
}

::google::protobuf::Metadata MigrateJobRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AvailabilityRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<AvailabilityRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(AvailabilityRequest, _impl_._has_bits_);
};

AvailabilityRequest::AvailabilityRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, AvailabilityRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:livekit.AvailabilityRequest)
}
PROTOBUF_NDEBUG_INLINE AvailabilityRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::livekit::AvailabilityRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

AvailabilityRequest::AvailabilityRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const AvailabilityRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, AvailabilityRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  AvailabilityRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.job_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.job_)
                : nullptr;
  _impl_.resuming_ = from._impl_.resuming_;

  // @@protoc_insertion_point(copy_constructor:livekit.AvailabilityRequest)
}
PROTOBUF_NDEBUG_INLINE AvailabilityRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void AvailabilityRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, job_),
           0,
           offsetof(Impl_, resuming_) -
               offsetof(Impl_, job_) +
               sizeof(Impl_::resuming_));
}
AvailabilityRequest::~AvailabilityRequest() {
  // @@protoc_insertion_point(destructor:livekit.AvailabilityRequest)
  SharedDtor(*this);
}
inline void AvailabilityRequest::SharedDtor(MessageLite& self) {
  AvailabilityRequest& this_ = static_cast<AvailabilityRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.job_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL AvailabilityRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) AvailabilityRequest(arena);
}
constexpr auto AvailabilityRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(AvailabilityRequest),
                                            alignof(AvailabilityRequest));
}
constexpr auto AvailabilityRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_AvailabilityRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &AvailabilityRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<AvailabilityRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &AvailabilityRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<AvailabilityRequest>(), &AvailabilityRequest::ByteSizeLong,
              &AvailabilityRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(AvailabilityRequest, _impl_._cached_size_),
          false,
      },
      &AvailabilityRequest::kDescriptorMethods,
      &descriptor_table_livekit_5fagent_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        AvailabilityRequest_class_data_ =
            AvailabilityRequest::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL AvailabilityRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&AvailabilityRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(AvailabilityRequest_class_data_.tc_table);
  return AvailabilityRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2>
AvailabilityRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AvailabilityRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    AvailabilityRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::livekit::AvailabilityRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bool resuming = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(AvailabilityRequest, _impl_.resuming_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(AvailabilityRequest, _impl_.resuming_)}},
    // .livekit.Job job = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(AvailabilityRequest, _impl_.job_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .livekit.Job job = 1;
    {PROTOBUF_FIELD_OFFSET(AvailabilityRequest, _impl_.job_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool resuming = 2;
    {PROTOBUF_FIELD_OFFSET(AvailabilityRequest, _impl_.resuming_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::livekit::Job>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void AvailabilityRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:livekit.AvailabilityRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(_impl_.job_ != nullptr);
    _impl_.job_->Clear();
  }
  _impl_.resuming_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL AvailabilityRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const AvailabilityRequest& this_ = static_cast<const AvailabilityRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL AvailabilityRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const AvailabilityRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:livekit.AvailabilityRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .livekit.Job job = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.job_, this_._impl_.job_->GetCachedSize(), target,
        stream);
  }

  // bool resuming = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    if (this_._internal_resuming() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          2, this_._internal_resuming(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:livekit.AvailabilityRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t AvailabilityRequest::ByteSizeLong(const MessageLite& base) {
  const AvailabilityRequest& this_ = static_cast<const AvailabilityRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t AvailabilityRequest::ByteSizeLong() const {
  const AvailabilityRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:livekit.AvailabilityRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // .livekit.Job job = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.job_);
    }
    // bool resuming = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_resuming() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void AvailabilityRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AvailabilityRequest*>(&to_msg);
  auto& from = static_cast<const AvailabilityRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:livekit.AvailabilityRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.job_ != nullptr);
      if (_this->_impl_.job_ == nullptr) {
        _this->_impl_.job_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.job_);
      } else {
        _this->_impl_.job_->MergeFrom(*from._impl_.job_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_resuming() != 0) {
        _this->_impl_.resuming_ = from._impl_.resuming_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AvailabilityRequest::CopyFrom(const AvailabilityRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:livekit.AvailabilityRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AvailabilityRequest::InternalSwap(AvailabilityRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AvailabilityRequest, _impl_.resuming_)
      + sizeof(AvailabilityRequest::_impl_.resuming_)
      - PROTOBUF_FIELD_OFFSET(AvailabilityRequest, _impl_.job_)>(
          reinterpret_cast<char*>(&_impl_.job_),
          reinterpret_cast<char*>(&other->_impl_.job_));
}

::google::protobuf::Metadata AvailabilityRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
AvailabilityResponse_ParticipantAttributesEntry_DoNotUse::AvailabilityResponse_ParticipantAttributesEntry_DoNotUse()
    : SuperType(AvailabilityResponse_ParticipantAttributesEntry_DoNotUse_class_data_.base()) {}
AvailabilityResponse_ParticipantAttributesEntry_DoNotUse::AvailabilityResponse_ParticipantAttributesEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
    : SuperType(arena, AvailabilityResponse_ParticipantAttributesEntry_DoNotUse_class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
AvailabilityResponse_ParticipantAttributesEntry_DoNotUse::AvailabilityResponse_ParticipantAttributesEntry_DoNotUse() : SuperType() {}
AvailabilityResponse_ParticipantAttributesEntry_DoNotUse::AvailabilityResponse_ParticipantAttributesEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
inline void* PROTOBUF_NONNULL AvailabilityResponse_ParticipantAttributesEntry_DoNotUse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) AvailabilityResponse_ParticipantAttributesEntry_DoNotUse(arena);
}
constexpr auto AvailabilityResponse_ParticipantAttributesEntry_DoNotUse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(AvailabilityResponse_ParticipantAttributesEntry_DoNotUse),
                                            alignof(AvailabilityResponse_ParticipantAttributesEntry_DoNotUse));
}
constexpr auto AvailabilityResponse_ParticipantAttributesEntry_DoNotUse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_AvailabilityResponse_ParticipantAttributesEntry_DoNotUse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &AvailabilityResponse_ParticipantAttributesEntry_DoNotUse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<AvailabilityResponse_ParticipantAttributesEntry_DoNotUse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &AvailabilityResponse_ParticipantAttributesEntry_DoNotUse::SharedDtor,
          static_cast<void (::google::protobuf::MessageLite::*)()>(&AvailabilityResponse_ParticipantAttributesEntry_DoNotUse::ClearImpl),
              ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
              ,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(AvailabilityResponse_ParticipantAttributesEntry_DoNotUse, _impl_._cached_size_),
          false,
      },
      &AvailabilityResponse_ParticipantAttributesEntry_DoNotUse::kDescriptorMethods,
      &descriptor_table_livekit_5fagent_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        AvailabilityResponse_ParticipantAttributesEntry_DoNotUse_class_data_ =
            AvailabilityResponse_ParticipantAttributesEntry_DoNotUse::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL AvailabilityResponse_ParticipantAttributesEntry_DoNotUse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&AvailabilityResponse_ParticipantAttributesEntry_DoNotUse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(AvailabilityResponse_ParticipantAttributesEntry_DoNotUse_class_data_.tc_table);
  return AvailabilityResponse_ParticipantAttributesEntry_DoNotUse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 72, 2>
AvailabilityResponse_ParticipantAttributesEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AvailabilityResponse_ParticipantAttributesEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    AvailabilityResponse_ParticipantAttributesEntry_DoNotUse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::livekit::AvailabilityResponse_ParticipantAttributesEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(AvailabilityResponse_ParticipantAttributesEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(AvailabilityResponse_ParticipantAttributesEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(AvailabilityResponse_ParticipantAttributesEntry_DoNotUse, _impl_.key_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(AvailabilityResponse_ParticipantAttributesEntry_DoNotUse, _impl_.value_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\67\3\5\0\0\0\0\0"
    "livekit.AvailabilityResponse.ParticipantAttributesEntry"
    "key"
    "value"
  }},
};
// ===================================================================

class AvailabilityResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<AvailabilityResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(AvailabilityResponse, _impl_._has_bits_);
};

AvailabilityResponse::AvailabilityResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, AvailabilityResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:livekit.AvailabilityResponse)
}
PROTOBUF_NDEBUG_INLINE AvailabilityResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::livekit::AvailabilityResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        participant_attributes_{visibility, arena, from.participant_attributes_},
        job_id_(arena, from.job_id_),
        participant_name_(arena, from.participant_name_),
        participant_identity_(arena, from.participant_identity_),
        participant_metadata_(arena, from.participant_metadata_) {}

AvailabilityResponse::AvailabilityResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const AvailabilityResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, AvailabilityResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  AvailabilityResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, available_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, available_),
           offsetof(Impl_, supports_resume_) -
               offsetof(Impl_, available_) +
               sizeof(Impl_::supports_resume_));

  // @@protoc_insertion_point(copy_constructor:livekit.AvailabilityResponse)
}
PROTOBUF_NDEBUG_INLINE AvailabilityResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        participant_attributes_{visibility, arena},
        job_id_(arena),
        participant_name_(arena),
        participant_identity_(arena),
        participant_metadata_(arena) {}

inline void AvailabilityResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, available_),
           0,
           offsetof(Impl_, supports_resume_) -
               offsetof(Impl_, available_) +
               sizeof(Impl_::supports_resume_));
}
AvailabilityResponse::~AvailabilityResponse() {
  // @@protoc_insertion_point(destructor:livekit.AvailabilityResponse)
  SharedDtor(*this);
}
inline void AvailabilityResponse::SharedDtor(MessageLite& self) {
  AvailabilityResponse& this_ = static_cast<AvailabilityResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.job_id_.Destroy();
  this_._impl_.participant_name_.Destroy();
  this_._impl_.participant_identity_.Destroy();
  this_._impl_.participant_metadata_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL AvailabilityResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) AvailabilityResponse(arena);
}
constexpr auto AvailabilityResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(AvailabilityResponse, _impl_.participant_attributes_) +
          decltype(AvailabilityResponse::_impl_.participant_attributes_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(AvailabilityResponse, _impl_.participant_attributes_) +
          decltype(AvailabilityResponse::_impl_.participant_attributes_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(AvailabilityResponse), alignof(AvailabilityResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&AvailabilityResponse::PlacementNew_,
                                 sizeof(AvailabilityResponse),
                                 alignof(AvailabilityResponse));
  }
}
constexpr auto AvailabilityResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_AvailabilityResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &AvailabilityResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<AvailabilityResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &AvailabilityResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<AvailabilityResponse>(), &AvailabilityResponse::ByteSizeLong,
              &AvailabilityResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(AvailabilityResponse, _impl_._cached_size_),
          false,
      },
      &AvailabilityResponse::kDescriptorMethods,
      &descriptor_table_livekit_5fagent_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        AvailabilityResponse_class_data_ =
            AvailabilityResponse::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL AvailabilityResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&AvailabilityResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(AvailabilityResponse_class_data_.tc_table);
  return AvailabilityResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 1, 121, 2>
AvailabilityResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AvailabilityResponse, _impl_._has_bits_),
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    AvailabilityResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::livekit::AvailabilityResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string job_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(AvailabilityResponse, _impl_.job_id_)}},
    // bool available = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(AvailabilityResponse, _impl_.available_), 4>(),
     {16, 4, 0, PROTOBUF_FIELD_OFFSET(AvailabilityResponse, _impl_.available_)}},
    // bool supports_resume = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(AvailabilityResponse, _impl_.supports_resume_), 5>(),
     {24, 5, 0, PROTOBUF_FIELD_OFFSET(AvailabilityResponse, _impl_.supports_resume_)}},
    // string participant_name = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 1, 0, PROTOBUF_FIELD_OFFSET(AvailabilityResponse, _impl_.participant_name_)}},
    // string participant_identity = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 2, 0, PROTOBUF_FIELD_OFFSET(AvailabilityResponse, _impl_.participant_identity_)}},
    // string participant_metadata = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 3, 0, PROTOBUF_FIELD_OFFSET(AvailabilityResponse, _impl_.participant_metadata_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string job_id = 1;
    {PROTOBUF_FIELD_OFFSET(AvailabilityResponse, _impl_.job_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool available = 2;
    {PROTOBUF_FIELD_OFFSET(AvailabilityResponse, _impl_.available_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // bool supports_resume = 3;
    {PROTOBUF_FIELD_OFFSET(AvailabilityResponse, _impl_.supports_resume_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // string participant_name = 4;
    {PROTOBUF_FIELD_OFFSET(AvailabilityResponse, _impl_.participant_name_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string participant_identity = 5;
    {PROTOBUF_FIELD_OFFSET(AvailabilityResponse, _impl_.participant_identity_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string participant_metadata = 6;
    {PROTOBUF_FIELD_OFFSET(AvailabilityResponse, _impl_.participant_metadata_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, string> participant_attributes = 7;
    {PROTOBUF_FIELD_OFFSET(AvailabilityResponse, _impl_.participant_attributes_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }},
  {{
      {::_pbi::TcParser::GetMapAuxInfo(1, 0, 0,
                                       9, 9,
                                       0)},
  }},
  {{
    "\34\6\0\0\20\24\24\26"
    "livekit.AvailabilityResponse"
    "job_id"
    "participant_name"
    "participant_identity"
    "participant_metadata"
    "participant_attributes"
  }},
};
PROTOBUF_NOINLINE void AvailabilityResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:livekit.AvailabilityResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.participant_attributes_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.job_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.participant_name_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _impl_.participant_identity_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _impl_.participant_metadata_.ClearNonDefaultToEmpty();
    }
  }
  ::memset(&_impl_.available_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.supports_resume_) -
      reinterpret_cast<char*>(&_impl_.available_)) + sizeof(_impl_.supports_resume_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL AvailabilityResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const AvailabilityResponse& this_ = static_cast<const AvailabilityResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL AvailabilityResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const AvailabilityResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:livekit.AvailabilityResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string job_id = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_job_id().empty()) {
      const std::string& _s = this_._internal_job_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "livekit.AvailabilityResponse.job_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // bool available = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000010u) != 0) {
    if (this_._internal_available() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          2, this_._internal_available(), target);
    }
  }

  // bool supports_resume = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000020u) != 0) {
    if (this_._internal_supports_resume() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          3, this_._internal_supports_resume(), target);
    }
  }

  // string participant_name = 4;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!this_._internal_participant_name().empty()) {
      const std::string& _s = this_._internal_participant_name();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "livekit.AvailabilityResponse.participant_name");
      target = stream->WriteStringMaybeAliased(4, _s, target);
    }
  }

  // string participant_identity = 5;
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (!this_._internal_participant_identity().empty()) {
      const std::string& _s = this_._internal_participant_identity();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "livekit.AvailabilityResponse.participant_identity");
      target = stream->WriteStringMaybeAliased(5, _s, target);
    }
  }

  // string participant_metadata = 6;
  if ((this_._impl_._has_bits_[0] & 0x00000008u) != 0) {
    if (!this_._internal_participant_metadata().empty()) {
      const std::string& _s = this_._internal_participant_metadata();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "livekit.AvailabilityResponse.participant_metadata");
      target = stream->WriteStringMaybeAliased(6, _s, target);
    }
  }

  // map<string, string> participant_attributes = 7;
  if (!this_._internal_participant_attributes().empty()) {
    using MapType = ::google::protobuf::Map<std::string, std::string>;
    using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>;
    const auto& field = this_._internal_participant_attributes();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            7, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "livekit.AvailabilityResponse.participant_attributes");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "livekit.AvailabilityResponse.participant_attributes");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            7, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "livekit.AvailabilityResponse.participant_attributes");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "livekit.AvailabilityResponse.participant_attributes");
      }
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:livekit.AvailabilityResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t AvailabilityResponse::ByteSizeLong(const MessageLite& base) {
  const AvailabilityResponse& this_ = static_cast<const AvailabilityResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t AvailabilityResponse::ByteSizeLong() const {
  const AvailabilityResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:livekit.AvailabilityResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // map<string, string> participant_attributes = 7;
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_participant_attributes_size());
      for (const auto& entry : this_._internal_participant_attributes()) {
        total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                       _pbi::WireFormatLite::TYPE_STRING,
                                       _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fu) != 0) {
    // string job_id = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_job_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_job_id());
      }
    }
    // string participant_name = 4;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!this_._internal_participant_name().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_participant_name());
      }
    }
    // string participant_identity = 5;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (!this_._internal_participant_identity().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_participant_identity());
      }
    }
    // string participant_metadata = 6;
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (!this_._internal_participant_metadata().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_participant_metadata());
      }
    }
    // bool available = 2;
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (this_._internal_available() != 0) {
        total_size += 2;
      }
    }
    // bool supports_resume = 3;
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (this_._internal_supports_resume() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void AvailabilityResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AvailabilityResponse*>(&to_msg);
  auto& from = static_cast<const AvailabilityResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:livekit.AvailabilityResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.participant_attributes_.MergeFrom(from._impl_.participant_attributes_);
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_job_id().empty()) {
        _this->_internal_set_job_id(from._internal_job_id());
      } else {
        if (_this->_impl_.job_id_.IsDefault()) {
          _this->_internal_set_job_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!from._internal_participant_name().empty()) {
        _this->_internal_set_participant_name(from._internal_participant_name());
      } else {
        if (_this->_impl_.participant_name_.IsDefault()) {
          _this->_internal_set_participant_name("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (!from._internal_participant_identity().empty()) {
        _this->_internal_set_participant_identity(from._internal_participant_identity());
      } else {
        if (_this->_impl_.participant_identity_.IsDefault()) {
          _this->_internal_set_participant_identity("");
        }
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (!from._internal_participant_metadata().empty()) {
        _this->_internal_set_participant_metadata(from._internal_participant_metadata());
      } else {
        if (_this->_impl_.participant_metadata_.IsDefault()) {
          _this->_internal_set_participant_metadata("");
        }
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (from._internal_available() != 0) {
        _this->_impl_.available_ = from._impl_.available_;
      }
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (from._internal_supports_resume() != 0) {
        _this->_impl_.supports_resume_ = from._impl_.supports_resume_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AvailabilityResponse::CopyFrom(const AvailabilityResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:livekit.AvailabilityResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AvailabilityResponse::InternalSwap(AvailabilityResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.participant_attributes_.InternalSwap(&other->_impl_.participant_attributes_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.job_id_, &other->_impl_.job_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.participant_name_, &other->_impl_.participant_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.participant_identity_, &other->_impl_.participant_identity_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.participant_metadata_, &other->_impl_.participant_metadata_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AvailabilityResponse, _impl_.supports_resume_)
      + sizeof(AvailabilityResponse::_impl_.supports_resume_)
      - PROTOBUF_FIELD_OFFSET(AvailabilityResponse, _impl_.available_)>(
          reinterpret_cast<char*>(&_impl_.available_),
          reinterpret_cast<char*>(&other->_impl_.available_));
}

::google::protobuf::Metadata AvailabilityResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class UpdateJobStatus::_Internal {
 public:
  using HasBits =
      decltype(std::declval<UpdateJobStatus>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(UpdateJobStatus, _impl_._has_bits_);
};

UpdateJobStatus::UpdateJobStatus(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, UpdateJobStatus_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:livekit.UpdateJobStatus)
}
PROTOBUF_NDEBUG_INLINE UpdateJobStatus::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::livekit::UpdateJobStatus& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        job_id_(arena, from.job_id_),
        error_(arena, from.error_) {}

UpdateJobStatus::UpdateJobStatus(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const UpdateJobStatus& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, UpdateJobStatus_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  UpdateJobStatus* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.status_ = from._impl_.status_;

  // @@protoc_insertion_point(copy_constructor:livekit.UpdateJobStatus)
}
PROTOBUF_NDEBUG_INLINE UpdateJobStatus::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        job_id_(arena),
        error_(arena) {}

inline void UpdateJobStatus::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.status_ = {};
}
UpdateJobStatus::~UpdateJobStatus() {
  // @@protoc_insertion_point(destructor:livekit.UpdateJobStatus)
  SharedDtor(*this);
}
inline void UpdateJobStatus::SharedDtor(MessageLite& self) {
  UpdateJobStatus& this_ = static_cast<UpdateJobStatus&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.job_id_.Destroy();
  this_._impl_.error_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL UpdateJobStatus::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) UpdateJobStatus(arena);
}
constexpr auto UpdateJobStatus::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(UpdateJobStatus),
                                            alignof(UpdateJobStatus));
}
constexpr auto UpdateJobStatus::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_UpdateJobStatus_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &UpdateJobStatus::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<UpdateJobStatus>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &UpdateJobStatus::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<UpdateJobStatus>(), &UpdateJobStatus::ByteSizeLong,
              &UpdateJobStatus::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(UpdateJobStatus, _impl_._cached_size_),
          false,
      },
      &UpdateJobStatus::kDescriptorMethods,
      &descriptor_table_livekit_5fagent_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        UpdateJobStatus_class_data_ =
            UpdateJobStatus::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL UpdateJobStatus::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&UpdateJobStatus_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(UpdateJobStatus_class_data_.tc_table);
  return UpdateJobStatus_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 43, 2>
UpdateJobStatus::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(UpdateJobStatus, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    UpdateJobStatus_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::livekit::UpdateJobStatus>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string job_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(UpdateJobStatus, _impl_.job_id_)}},
    // .livekit.JobStatus status = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(UpdateJobStatus, _impl_.status_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(UpdateJobStatus, _impl_.status_)}},
    // string error = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 1, 0, PROTOBUF_FIELD_OFFSET(UpdateJobStatus, _impl_.error_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string job_id = 1;
    {PROTOBUF_FIELD_OFFSET(UpdateJobStatus, _impl_.job_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .livekit.JobStatus status = 2;
    {PROTOBUF_FIELD_OFFSET(UpdateJobStatus, _impl_.status_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // string error = 3;
    {PROTOBUF_FIELD_OFFSET(UpdateJobStatus, _impl_.error_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\27\6\0\5\0\0\0\0"
    "livekit.UpdateJobStatus"
    "job_id"
    "error"
  }},
};
PROTOBUF_NOINLINE void UpdateJobStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:livekit.UpdateJobStatus)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.job_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.error_.ClearNonDefaultToEmpty();
    }
  }
  _impl_.status_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL UpdateJobStatus::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const UpdateJobStatus& this_ = static_cast<const UpdateJobStatus&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL UpdateJobStatus::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const UpdateJobStatus& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:livekit.UpdateJobStatus)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string job_id = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_job_id().empty()) {
      const std::string& _s = this_._internal_job_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "livekit.UpdateJobStatus.job_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // .livekit.JobStatus status = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (this_._internal_status() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          2, this_._internal_status(), target);
    }
  }

  // string error = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!this_._internal_error().empty()) {
      const std::string& _s = this_._internal_error();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "livekit.UpdateJobStatus.error");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:livekit.UpdateJobStatus)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t UpdateJobStatus::ByteSizeLong(const MessageLite& base) {
  const UpdateJobStatus& this_ = static_cast<const UpdateJobStatus&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t UpdateJobStatus::ByteSizeLong() const {
  const UpdateJobStatus& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:livekit.UpdateJobStatus)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // string job_id = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_job_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_job_id());
      }
    }
    // string error = 3;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!this_._internal_error().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_error());
      }
    }
    // .livekit.JobStatus status = 2;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_status() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_status());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void UpdateJobStatus::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UpdateJobStatus*>(&to_msg);
  auto& from = static_cast<const UpdateJobStatus&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:livekit.UpdateJobStatus)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_job_id().empty()) {
        _this->_internal_set_job_id(from._internal_job_id());
      } else {
        if (_this->_impl_.job_id_.IsDefault()) {
          _this->_internal_set_job_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!from._internal_error().empty()) {
        _this->_internal_set_error(from._internal_error());
      } else {
        if (_this->_impl_.error_.IsDefault()) {
          _this->_internal_set_error("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_status() != 0) {
        _this->_impl_.status_ = from._impl_.status_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateJobStatus::CopyFrom(const UpdateJobStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:livekit.UpdateJobStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void UpdateJobStatus::InternalSwap(UpdateJobStatus* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.job_id_, &other->_impl_.job_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.error_, &other->_impl_.error_, arena);
  swap(_impl_.status_, other->_impl_.status_);
}

::google::protobuf::Metadata UpdateJobStatus::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class UpdateWorkerStatus::_Internal {
 public:
  using HasBits =
      decltype(std::declval<UpdateWorkerStatus>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(UpdateWorkerStatus, _impl_._has_bits_);
};

UpdateWorkerStatus::UpdateWorkerStatus(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, UpdateWorkerStatus_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:livekit.UpdateWorkerStatus)
}
UpdateWorkerStatus::UpdateWorkerStatus(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const UpdateWorkerStatus& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, UpdateWorkerStatus_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE UpdateWorkerStatus::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void UpdateWorkerStatus::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, status_),
           0,
           offsetof(Impl_, job_count_) -
               offsetof(Impl_, status_) +
               sizeof(Impl_::job_count_));
}
UpdateWorkerStatus::~UpdateWorkerStatus() {
  // @@protoc_insertion_point(destructor:livekit.UpdateWorkerStatus)
  SharedDtor(*this);
}
inline void UpdateWorkerStatus::SharedDtor(MessageLite& self) {
  UpdateWorkerStatus& this_ = static_cast<UpdateWorkerStatus&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL UpdateWorkerStatus::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) UpdateWorkerStatus(arena);
}
constexpr auto UpdateWorkerStatus::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(UpdateWorkerStatus),
                                            alignof(UpdateWorkerStatus));
}
constexpr auto UpdateWorkerStatus::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_UpdateWorkerStatus_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &UpdateWorkerStatus::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<UpdateWorkerStatus>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &UpdateWorkerStatus::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<UpdateWorkerStatus>(), &UpdateWorkerStatus::ByteSizeLong,
              &UpdateWorkerStatus::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(UpdateWorkerStatus, _impl_._cached_size_),
          false,
      },
      &UpdateWorkerStatus::kDescriptorMethods,
      &descriptor_table_livekit_5fagent_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        UpdateWorkerStatus_class_data_ =
            UpdateWorkerStatus::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL UpdateWorkerStatus::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&UpdateWorkerStatus_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(UpdateWorkerStatus_class_data_.tc_table);
  return UpdateWorkerStatus_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2>
UpdateWorkerStatus::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(UpdateWorkerStatus, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967282,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    UpdateWorkerStatus_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::livekit::UpdateWorkerStatus>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint32 job_count = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(UpdateWorkerStatus, _impl_.job_count_), 2>(),
     {32, 2, 0, PROTOBUF_FIELD_OFFSET(UpdateWorkerStatus, _impl_.job_count_)}},
    // optional .livekit.WorkerStatus status = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(UpdateWorkerStatus, _impl_.status_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(UpdateWorkerStatus, _impl_.status_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // float load = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 1, 0, PROTOBUF_FIELD_OFFSET(UpdateWorkerStatus, _impl_.load_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .livekit.WorkerStatus status = 1;
    {PROTOBUF_FIELD_OFFSET(UpdateWorkerStatus, _impl_.status_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // float load = 3;
    {PROTOBUF_FIELD_OFFSET(UpdateWorkerStatus, _impl_.load_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // uint32 job_count = 4;
    {PROTOBUF_FIELD_OFFSET(UpdateWorkerStatus, _impl_.job_count_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void UpdateWorkerStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:livekit.UpdateWorkerStatus)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    ::memset(&_impl_.status_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.job_count_) -
        reinterpret_cast<char*>(&_impl_.status_)) + sizeof(_impl_.job_count_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL UpdateWorkerStatus::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const UpdateWorkerStatus& this_ = static_cast<const UpdateWorkerStatus&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL UpdateWorkerStatus::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const UpdateWorkerStatus& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:livekit.UpdateWorkerStatus)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional .livekit.WorkerStatus status = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this_._internal_status(), target);
  }

  // float load = 3;
  if ((cached_has_bits & 0x00000002u) != 0) {
    if (::absl::bit_cast<::uint32_t>(this_._internal_load()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteFloatToArray(
          3, this_._internal_load(), target);
    }
  }

  // uint32 job_count = 4;
  if ((cached_has_bits & 0x00000004u) != 0) {
    if (this_._internal_job_count() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          4, this_._internal_job_count(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:livekit.UpdateWorkerStatus)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t UpdateWorkerStatus::ByteSizeLong(const MessageLite& base) {
  const UpdateWorkerStatus& this_ = static_cast<const UpdateWorkerStatus&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t UpdateWorkerStatus::ByteSizeLong() const {
  const UpdateWorkerStatus& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:livekit.UpdateWorkerStatus)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // optional .livekit.WorkerStatus status = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this_._internal_status());
    }
    // float load = 3;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (::absl::bit_cast<::uint32_t>(this_._internal_load()) != 0) {
        total_size += 5;
      }
    }
    // uint32 job_count = 4;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_job_count() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_job_count());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void UpdateWorkerStatus::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UpdateWorkerStatus*>(&to_msg);
  auto& from = static_cast<const UpdateWorkerStatus&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:livekit.UpdateWorkerStatus)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_impl_.status_ = from._impl_.status_;
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (::absl::bit_cast<::uint32_t>(from._internal_load()) != 0) {
        _this->_impl_.load_ = from._impl_.load_;
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_job_count() != 0) {
        _this->_impl_.job_count_ = from._impl_.job_count_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateWorkerStatus::CopyFrom(const UpdateWorkerStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:livekit.UpdateWorkerStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void UpdateWorkerStatus::InternalSwap(UpdateWorkerStatus* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UpdateWorkerStatus, _impl_.job_count_)
      + sizeof(UpdateWorkerStatus::_impl_.job_count_)
      - PROTOBUF_FIELD_OFFSET(UpdateWorkerStatus, _impl_.status_)>(
          reinterpret_cast<char*>(&_impl_.status_),
          reinterpret_cast<char*>(&other->_impl_.status_));
}

::google::protobuf::Metadata UpdateWorkerStatus::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class JobAssignment::_Internal {
 public:
  using HasBits =
      decltype(std::declval<JobAssignment>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(JobAssignment, _impl_._has_bits_);
};

JobAssignment::JobAssignment(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, JobAssignment_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:livekit.JobAssignment)
}
PROTOBUF_NDEBUG_INLINE JobAssignment::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::livekit::JobAssignment& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        url_(arena, from.url_),
        token_(arena, from.token_) {}

JobAssignment::JobAssignment(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const JobAssignment& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, JobAssignment_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  JobAssignment* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.job_ = ((cached_has_bits & 0x00000004u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.job_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:livekit.JobAssignment)
}
PROTOBUF_NDEBUG_INLINE JobAssignment::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        url_(arena),
        token_(arena) {}

inline void JobAssignment::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.job_ = {};
}
JobAssignment::~JobAssignment() {
  // @@protoc_insertion_point(destructor:livekit.JobAssignment)
  SharedDtor(*this);
}
inline void JobAssignment::SharedDtor(MessageLite& self) {
  JobAssignment& this_ = static_cast<JobAssignment&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.url_.Destroy();
  this_._impl_.token_.Destroy();
  delete this_._impl_.job_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL JobAssignment::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) JobAssignment(arena);
}
constexpr auto JobAssignment::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(JobAssignment),
                                            alignof(JobAssignment));
}
constexpr auto JobAssignment::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_JobAssignment_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &JobAssignment::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<JobAssignment>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &JobAssignment::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<JobAssignment>(), &JobAssignment::ByteSizeLong,
              &JobAssignment::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(JobAssignment, _impl_._cached_size_),
          false,
      },
      &JobAssignment::kDescriptorMethods,
      &descriptor_table_livekit_5fagent_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        JobAssignment_class_data_ =
            JobAssignment::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL JobAssignment::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&JobAssignment_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(JobAssignment_class_data_.tc_table);
  return JobAssignment_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 38, 2>
JobAssignment::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(JobAssignment, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    JobAssignment_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::livekit::JobAssignment>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .livekit.Job job = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 2, 0, PROTOBUF_FIELD_OFFSET(JobAssignment, _impl_.job_)}},
    // optional string url = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(JobAssignment, _impl_.url_)}},
    // string token = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 1, 0, PROTOBUF_FIELD_OFFSET(JobAssignment, _impl_.token_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .livekit.Job job = 1;
    {PROTOBUF_FIELD_OFFSET(JobAssignment, _impl_.job_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional string url = 2;
    {PROTOBUF_FIELD_OFFSET(JobAssignment, _impl_.url_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string token = 3;
    {PROTOBUF_FIELD_OFFSET(JobAssignment, _impl_.token_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::livekit::Job>()},
  }},
  {{
    "\25\0\3\5\0\0\0\0"
    "livekit.JobAssignment"
    "url"
    "token"
  }},
};
PROTOBUF_NOINLINE void JobAssignment::Clear() {
// @@protoc_insertion_point(message_clear_start:livekit.JobAssignment)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.url_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.token_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(_impl_.job_ != nullptr);
      _impl_.job_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL JobAssignment::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const JobAssignment& this_ = static_cast<const JobAssignment&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL JobAssignment::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const JobAssignment& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:livekit.JobAssignment)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .livekit.Job job = 1;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.job_, this_._impl_.job_->GetCachedSize(), target,
        stream);
  }

  // optional string url = 2;
  if ((cached_has_bits & 0x00000001u) != 0) {
    const std::string& _s = this_._internal_url();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "livekit.JobAssignment.url");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string token = 3;
  if ((cached_has_bits & 0x00000002u) != 0) {
    if (!this_._internal_token().empty()) {
      const std::string& _s = this_._internal_token();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "livekit.JobAssignment.token");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:livekit.JobAssignment)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t JobAssignment::ByteSizeLong(const MessageLite& base) {
  const JobAssignment& this_ = static_cast<const JobAssignment&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t JobAssignment::ByteSizeLong() const {
  const JobAssignment& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:livekit.JobAssignment)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // optional string url = 2;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_url());
    }
    // string token = 3;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!this_._internal_token().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_token());
      }
    }
    // .livekit.Job job = 1;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.job_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void JobAssignment::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<JobAssignment*>(&to_msg);
  auto& from = static_cast<const JobAssignment&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:livekit.JobAssignment)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_internal_set_url(from._internal_url());
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!from._internal_token().empty()) {
        _this->_internal_set_token(from._internal_token());
      } else {
        if (_this->_impl_.token_.IsDefault()) {
          _this->_internal_set_token("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(from._impl_.job_ != nullptr);
      if (_this->_impl_.job_ == nullptr) {
        _this->_impl_.job_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.job_);
      } else {
        _this->_impl_.job_->MergeFrom(*from._impl_.job_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void JobAssignment::CopyFrom(const JobAssignment& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:livekit.JobAssignment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void JobAssignment::InternalSwap(JobAssignment* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.url_, &other->_impl_.url_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.token_, &other->_impl_.token_, arena);
  swap(_impl_.job_, other->_impl_.job_);
}

::google::protobuf::Metadata JobAssignment::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class JobTermination::_Internal {
 public:
  using HasBits =
      decltype(std::declval<JobTermination>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(JobTermination, _impl_._has_bits_);
};

JobTermination::JobTermination(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, JobTermination_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:livekit.JobTermination)
}
PROTOBUF_NDEBUG_INLINE JobTermination::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::livekit::JobTermination& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        job_id_(arena, from.job_id_) {}

JobTermination::JobTermination(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const JobTermination& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, JobTermination_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  JobTermination* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:livekit.JobTermination)
}
PROTOBUF_NDEBUG_INLINE JobTermination::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        job_id_(arena) {}

inline void JobTermination::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
JobTermination::~JobTermination() {
  // @@protoc_insertion_point(destructor:livekit.JobTermination)
  SharedDtor(*this);
}
inline void JobTermination::SharedDtor(MessageLite& self) {
  JobTermination& this_ = static_cast<JobTermination&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.job_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL JobTermination::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) JobTermination(arena);
}
constexpr auto JobTermination::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(JobTermination),
                                            alignof(JobTermination));
}
constexpr auto JobTermination::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_JobTermination_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &JobTermination::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<JobTermination>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &JobTermination::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<JobTermination>(), &JobTermination::ByteSizeLong,
              &JobTermination::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(JobTermination, _impl_._cached_size_),
          false,
      },
      &JobTermination::kDescriptorMethods,
      &descriptor_table_livekit_5fagent_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        JobTermination_class_data_ =
            JobTermination::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL JobTermination::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&JobTermination_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(JobTermination_class_data_.tc_table);
  return JobTermination_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 37, 2>
JobTermination::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(JobTermination, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    JobTermination_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::livekit::JobTermination>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string job_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(JobTermination, _impl_.job_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string job_id = 1;
    {PROTOBUF_FIELD_OFFSET(JobTermination, _impl_.job_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\26\6\0\0\0\0\0\0"
    "livekit.JobTermination"
    "job_id"
  }},
};
PROTOBUF_NOINLINE void JobTermination::Clear() {
// @@protoc_insertion_point(message_clear_start:livekit.JobTermination)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _impl_.job_id_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL JobTermination::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const JobTermination& this_ = static_cast<const JobTermination&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL JobTermination::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const JobTermination& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:livekit.JobTermination)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string job_id = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_job_id().empty()) {
      const std::string& _s = this_._internal_job_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "livekit.JobTermination.job_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:livekit.JobTermination)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t JobTermination::ByteSizeLong(const MessageLite& base) {
  const JobTermination& this_ = static_cast<const JobTermination&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t JobTermination::ByteSizeLong() const {
  const JobTermination& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:livekit.JobTermination)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // string job_id = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_job_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_job_id());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void JobTermination::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<JobTermination*>(&to_msg);
  auto& from = static_cast<const JobTermination&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:livekit.JobTermination)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    if (!from._internal_job_id().empty()) {
      _this->_internal_set_job_id(from._internal_job_id());
    } else {
      if (_this->_impl_.job_id_.IsDefault()) {
        _this->_internal_set_job_id("");
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void JobTermination::CopyFrom(const JobTermination& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:livekit.JobTermination)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void JobTermination::InternalSwap(JobTermination* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.job_id_, &other->_impl_.job_id_, arena);
}

::google::protobuf::Metadata JobTermination::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace livekit
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_livekit_5fagent_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
