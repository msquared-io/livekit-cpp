// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: livekit_webhook.proto
// Protobuf C++ Version: 6.30.1

#include "livekit_webhook.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace livekit {

inline constexpr WebhookEvent::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        event_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        room_{nullptr},
        participant_{nullptr},
        track_{nullptr},
        egress_info_{nullptr},
        ingress_info_{nullptr},
        created_at_{::int64_t{0}},
        num_dropped_{0} {}

template <typename>
PROTOBUF_CONSTEXPR WebhookEvent::WebhookEvent(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(WebhookEvent_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct WebhookEventDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WebhookEventDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WebhookEventDefaultTypeInternal() {}
  union {
    WebhookEvent _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WebhookEventDefaultTypeInternal _WebhookEvent_default_instance_;
}  // namespace livekit
static constexpr const ::_pb::EnumDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_enum_descriptors_livekit_5fwebhook_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_service_descriptors_livekit_5fwebhook_2eproto = nullptr;
const ::uint32_t
    TableStruct_livekit_5fwebhook_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::livekit::WebhookEvent, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::livekit::WebhookEvent, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::livekit::WebhookEvent, _impl_.event_),
        PROTOBUF_FIELD_OFFSET(::livekit::WebhookEvent, _impl_.room_),
        PROTOBUF_FIELD_OFFSET(::livekit::WebhookEvent, _impl_.participant_),
        PROTOBUF_FIELD_OFFSET(::livekit::WebhookEvent, _impl_.egress_info_),
        PROTOBUF_FIELD_OFFSET(::livekit::WebhookEvent, _impl_.ingress_info_),
        PROTOBUF_FIELD_OFFSET(::livekit::WebhookEvent, _impl_.track_),
        PROTOBUF_FIELD_OFFSET(::livekit::WebhookEvent, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::livekit::WebhookEvent, _impl_.created_at_),
        PROTOBUF_FIELD_OFFSET(::livekit::WebhookEvent, _impl_.num_dropped_),
        0,
        2,
        3,
        5,
        6,
        4,
        1,
        7,
        8,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 17, -1, sizeof(::livekit::WebhookEvent)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::livekit::_WebhookEvent_default_instance_._instance,
};
const char descriptor_table_protodef_livekit_5fwebhook_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\025livekit_webhook.proto\022\007livekit\032\024liveki"
    "t_models.proto\032\024livekit_egress.proto\032\025li"
    "vekit_ingress.proto\"\233\002\n\014WebhookEvent\022\r\n\005"
    "event\030\001 \001(\t\022\033\n\004room\030\002 \001(\0132\r.livekit.Room"
    "\022-\n\013participant\030\003 \001(\0132\030.livekit.Particip"
    "antInfo\022(\n\013egress_info\030\t \001(\0132\023.livekit.E"
    "gressInfo\022*\n\014ingress_info\030\n \001(\0132\024.liveki"
    "t.IngressInfo\022!\n\005track\030\010 \001(\0132\022.livekit.T"
    "rackInfo\022\n\n\002id\030\006 \001(\t\022\022\n\ncreated_at\030\007 \001(\003"
    "\022\027\n\013num_dropped\030\013 \001(\005B\002\030\001BFZ#github.com/"
    "livekit/protocol/livekit\252\002\rLiveKit.Proto"
    "\352\002\016LiveKit::Protob\006proto3"
};
static const ::_pbi::DescriptorTable* PROTOBUF_NONNULL const
    descriptor_table_livekit_5fwebhook_2eproto_deps[3] = {
        &::descriptor_table_livekit_5fegress_2eproto,
        &::descriptor_table_livekit_5fingress_2eproto,
        &::descriptor_table_livekit_5fmodels_2eproto,
};
static ::absl::once_flag descriptor_table_livekit_5fwebhook_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_livekit_5fwebhook_2eproto = {
    false,
    false,
    465,
    descriptor_table_protodef_livekit_5fwebhook_2eproto,
    "livekit_webhook.proto",
    &descriptor_table_livekit_5fwebhook_2eproto_once,
    descriptor_table_livekit_5fwebhook_2eproto_deps,
    3,
    1,
    schemas,
    file_default_instances,
    TableStruct_livekit_5fwebhook_2eproto::offsets,
    file_level_enum_descriptors_livekit_5fwebhook_2eproto,
    file_level_service_descriptors_livekit_5fwebhook_2eproto,
};
namespace livekit {
// ===================================================================

class WebhookEvent::_Internal {
 public:
  using HasBits =
      decltype(std::declval<WebhookEvent>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(WebhookEvent, _impl_._has_bits_);
};

void WebhookEvent::clear_room() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.room_ != nullptr) _impl_.room_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void WebhookEvent::clear_participant() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.participant_ != nullptr) _impl_.participant_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
void WebhookEvent::clear_egress_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.egress_info_ != nullptr) _impl_.egress_info_->Clear();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
void WebhookEvent::clear_ingress_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.ingress_info_ != nullptr) _impl_.ingress_info_->Clear();
  _impl_._has_bits_[0] &= ~0x00000040u;
}
void WebhookEvent::clear_track() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.track_ != nullptr) _impl_.track_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
WebhookEvent::WebhookEvent(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, WebhookEvent_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:livekit.WebhookEvent)
}
PROTOBUF_NDEBUG_INLINE WebhookEvent::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::livekit::WebhookEvent& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        event_(arena, from.event_),
        id_(arena, from.id_) {}

WebhookEvent::WebhookEvent(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const WebhookEvent& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, WebhookEvent_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  WebhookEvent* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.room_ = ((cached_has_bits & 0x00000004u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.room_)
                : nullptr;
  _impl_.participant_ = ((cached_has_bits & 0x00000008u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.participant_)
                : nullptr;
  _impl_.track_ = ((cached_has_bits & 0x00000010u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.track_)
                : nullptr;
  _impl_.egress_info_ = ((cached_has_bits & 0x00000020u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.egress_info_)
                : nullptr;
  _impl_.ingress_info_ = ((cached_has_bits & 0x00000040u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.ingress_info_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, created_at_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, created_at_),
           offsetof(Impl_, num_dropped_) -
               offsetof(Impl_, created_at_) +
               sizeof(Impl_::num_dropped_));

  // @@protoc_insertion_point(copy_constructor:livekit.WebhookEvent)
}
PROTOBUF_NDEBUG_INLINE WebhookEvent::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        event_(arena),
        id_(arena) {}

inline void WebhookEvent::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, room_),
           0,
           offsetof(Impl_, num_dropped_) -
               offsetof(Impl_, room_) +
               sizeof(Impl_::num_dropped_));
}
WebhookEvent::~WebhookEvent() {
  // @@protoc_insertion_point(destructor:livekit.WebhookEvent)
  SharedDtor(*this);
}
inline void WebhookEvent::SharedDtor(MessageLite& self) {
  WebhookEvent& this_ = static_cast<WebhookEvent&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.event_.Destroy();
  this_._impl_.id_.Destroy();
  delete this_._impl_.room_;
  delete this_._impl_.participant_;
  delete this_._impl_.track_;
  delete this_._impl_.egress_info_;
  delete this_._impl_.ingress_info_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL WebhookEvent::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) WebhookEvent(arena);
}
constexpr auto WebhookEvent::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(WebhookEvent),
                                            alignof(WebhookEvent));
}
constexpr auto WebhookEvent::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_WebhookEvent_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &WebhookEvent::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<WebhookEvent>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &WebhookEvent::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<WebhookEvent>(), &WebhookEvent::ByteSizeLong,
              &WebhookEvent::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(WebhookEvent, _impl_._cached_size_),
          false,
      },
      &WebhookEvent::kDescriptorMethods,
      &descriptor_table_livekit_5fwebhook_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        WebhookEvent_class_data_ =
            WebhookEvent::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL WebhookEvent::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&WebhookEvent_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(WebhookEvent_class_data_.tc_table);
  return WebhookEvent_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 9, 5, 44, 2>
WebhookEvent::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(WebhookEvent, _impl_._has_bits_),
    0, // no _extensions_
    11, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294965272,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    5,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    WebhookEvent_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::livekit::WebhookEvent>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string event = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(WebhookEvent, _impl_.event_)}},
    // .livekit.Room room = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 2, 0, PROTOBUF_FIELD_OFFSET(WebhookEvent, _impl_.room_)}},
    // .livekit.ParticipantInfo participant = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 3, 1, PROTOBUF_FIELD_OFFSET(WebhookEvent, _impl_.participant_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // string id = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 1, 0, PROTOBUF_FIELD_OFFSET(WebhookEvent, _impl_.id_)}},
    // int64 created_at = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(WebhookEvent, _impl_.created_at_), 7>(),
     {56, 7, 0, PROTOBUF_FIELD_OFFSET(WebhookEvent, _impl_.created_at_)}},
    // .livekit.TrackInfo track = 8;
    {::_pbi::TcParser::FastMtS1,
     {66, 4, 2, PROTOBUF_FIELD_OFFSET(WebhookEvent, _impl_.track_)}},
    // .livekit.EgressInfo egress_info = 9;
    {::_pbi::TcParser::FastMtS1,
     {74, 5, 3, PROTOBUF_FIELD_OFFSET(WebhookEvent, _impl_.egress_info_)}},
    // .livekit.IngressInfo ingress_info = 10;
    {::_pbi::TcParser::FastMtS1,
     {82, 6, 4, PROTOBUF_FIELD_OFFSET(WebhookEvent, _impl_.ingress_info_)}},
    // int32 num_dropped = 11 [deprecated = true];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(WebhookEvent, _impl_.num_dropped_), 8>(),
     {88, 8, 0, PROTOBUF_FIELD_OFFSET(WebhookEvent, _impl_.num_dropped_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string event = 1;
    {PROTOBUF_FIELD_OFFSET(WebhookEvent, _impl_.event_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .livekit.Room room = 2;
    {PROTOBUF_FIELD_OFFSET(WebhookEvent, _impl_.room_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .livekit.ParticipantInfo participant = 3;
    {PROTOBUF_FIELD_OFFSET(WebhookEvent, _impl_.participant_), _Internal::kHasBitsOffset + 3, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string id = 6;
    {PROTOBUF_FIELD_OFFSET(WebhookEvent, _impl_.id_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 created_at = 7;
    {PROTOBUF_FIELD_OFFSET(WebhookEvent, _impl_.created_at_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // .livekit.TrackInfo track = 8;
    {PROTOBUF_FIELD_OFFSET(WebhookEvent, _impl_.track_), _Internal::kHasBitsOffset + 4, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .livekit.EgressInfo egress_info = 9;
    {PROTOBUF_FIELD_OFFSET(WebhookEvent, _impl_.egress_info_), _Internal::kHasBitsOffset + 5, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .livekit.IngressInfo ingress_info = 10;
    {PROTOBUF_FIELD_OFFSET(WebhookEvent, _impl_.ingress_info_), _Internal::kHasBitsOffset + 6, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // int32 num_dropped = 11 [deprecated = true];
    {PROTOBUF_FIELD_OFFSET(WebhookEvent, _impl_.num_dropped_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::livekit::Room>()},
      {::_pbi::TcParser::GetTable<::livekit::ParticipantInfo>()},
      {::_pbi::TcParser::GetTable<::livekit::TrackInfo>()},
      {::_pbi::TcParser::GetTable<::livekit::EgressInfo>()},
      {::_pbi::TcParser::GetTable<::livekit::IngressInfo>()},
  }},
  {{
    "\24\5\0\0\2\0\0\0\0\0\0\0\0\0\0\0"
    "livekit.WebhookEvent"
    "event"
    "id"
  }},
};
PROTOBUF_NOINLINE void WebhookEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:livekit.WebhookEvent)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000007fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.event_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(_impl_.room_ != nullptr);
      _impl_.room_->Clear();
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      ABSL_DCHECK(_impl_.participant_ != nullptr);
      _impl_.participant_->Clear();
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      ABSL_DCHECK(_impl_.track_ != nullptr);
      _impl_.track_->Clear();
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      ABSL_DCHECK(_impl_.egress_info_ != nullptr);
      _impl_.egress_info_->Clear();
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      ABSL_DCHECK(_impl_.ingress_info_ != nullptr);
      _impl_.ingress_info_->Clear();
    }
  }
  _impl_.created_at_ = ::int64_t{0};
  _impl_.num_dropped_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL WebhookEvent::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const WebhookEvent& this_ = static_cast<const WebhookEvent&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL WebhookEvent::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const WebhookEvent& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:livekit.WebhookEvent)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string event = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_event().empty()) {
      const std::string& _s = this_._internal_event();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "livekit.WebhookEvent.event");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .livekit.Room room = 2;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.room_, this_._impl_.room_->GetCachedSize(), target,
        stream);
  }

  // .livekit.ParticipantInfo participant = 3;
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.participant_, this_._impl_.participant_->GetCachedSize(), target,
        stream);
  }

  // string id = 6;
  if ((cached_has_bits & 0x00000002u) != 0) {
    if (!this_._internal_id().empty()) {
      const std::string& _s = this_._internal_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "livekit.WebhookEvent.id");
      target = stream->WriteStringMaybeAliased(6, _s, target);
    }
  }

  // int64 created_at = 7;
  if ((cached_has_bits & 0x00000080u) != 0) {
    if (this_._internal_created_at() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<7>(
              stream, this_._internal_created_at(), target);
    }
  }

  // .livekit.TrackInfo track = 8;
  if ((cached_has_bits & 0x00000010u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        8, *this_._impl_.track_, this_._impl_.track_->GetCachedSize(), target,
        stream);
  }

  // .livekit.EgressInfo egress_info = 9;
  if ((cached_has_bits & 0x00000020u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        9, *this_._impl_.egress_info_, this_._impl_.egress_info_->GetCachedSize(), target,
        stream);
  }

  // .livekit.IngressInfo ingress_info = 10;
  if ((cached_has_bits & 0x00000040u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        10, *this_._impl_.ingress_info_, this_._impl_.ingress_info_->GetCachedSize(), target,
        stream);
  }

  // int32 num_dropped = 11 [deprecated = true];
  if ((cached_has_bits & 0x00000100u) != 0) {
    if (this_._internal_num_dropped() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<11>(
              stream, this_._internal_num_dropped(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:livekit.WebhookEvent)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t WebhookEvent::ByteSizeLong(const MessageLite& base) {
  const WebhookEvent& this_ = static_cast<const WebhookEvent&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t WebhookEvent::ByteSizeLong() const {
  const WebhookEvent& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:livekit.WebhookEvent)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    // string event = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_event().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_event());
      }
    }
    // string id = 6;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!this_._internal_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_id());
      }
    }
    // .livekit.Room room = 2;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.room_);
    }
    // .livekit.ParticipantInfo participant = 3;
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.participant_);
    }
    // .livekit.TrackInfo track = 8;
    if ((cached_has_bits & 0x00000010u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.track_);
    }
    // .livekit.EgressInfo egress_info = 9;
    if ((cached_has_bits & 0x00000020u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.egress_info_);
    }
    // .livekit.IngressInfo ingress_info = 10;
    if ((cached_has_bits & 0x00000040u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.ingress_info_);
    }
    // int64 created_at = 7;
    if ((cached_has_bits & 0x00000080u) != 0) {
      if (this_._internal_created_at() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_created_at());
      }
    }
  }
   {
    // int32 num_dropped = 11 [deprecated = true];
    if ((cached_has_bits & 0x00000100u) != 0) {
      if (this_._internal_num_dropped() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_num_dropped());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void WebhookEvent::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<WebhookEvent*>(&to_msg);
  auto& from = static_cast<const WebhookEvent&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:livekit.WebhookEvent)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_event().empty()) {
        _this->_internal_set_event(from._internal_event());
      } else {
        if (_this->_impl_.event_.IsDefault()) {
          _this->_internal_set_event("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!from._internal_id().empty()) {
        _this->_internal_set_id(from._internal_id());
      } else {
        if (_this->_impl_.id_.IsDefault()) {
          _this->_internal_set_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(from._impl_.room_ != nullptr);
      if (_this->_impl_.room_ == nullptr) {
        _this->_impl_.room_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.room_);
      } else {
        _this->_impl_.room_->MergeFrom(*from._impl_.room_);
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      ABSL_DCHECK(from._impl_.participant_ != nullptr);
      if (_this->_impl_.participant_ == nullptr) {
        _this->_impl_.participant_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.participant_);
      } else {
        _this->_impl_.participant_->MergeFrom(*from._impl_.participant_);
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      ABSL_DCHECK(from._impl_.track_ != nullptr);
      if (_this->_impl_.track_ == nullptr) {
        _this->_impl_.track_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.track_);
      } else {
        _this->_impl_.track_->MergeFrom(*from._impl_.track_);
      }
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      ABSL_DCHECK(from._impl_.egress_info_ != nullptr);
      if (_this->_impl_.egress_info_ == nullptr) {
        _this->_impl_.egress_info_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.egress_info_);
      } else {
        _this->_impl_.egress_info_->MergeFrom(*from._impl_.egress_info_);
      }
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      ABSL_DCHECK(from._impl_.ingress_info_ != nullptr);
      if (_this->_impl_.ingress_info_ == nullptr) {
        _this->_impl_.ingress_info_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.ingress_info_);
      } else {
        _this->_impl_.ingress_info_->MergeFrom(*from._impl_.ingress_info_);
      }
    }
    if ((cached_has_bits & 0x00000080u) != 0) {
      if (from._internal_created_at() != 0) {
        _this->_impl_.created_at_ = from._impl_.created_at_;
      }
    }
  }
  if ((cached_has_bits & 0x00000100u) != 0) {
    if (from._internal_num_dropped() != 0) {
      _this->_impl_.num_dropped_ = from._impl_.num_dropped_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void WebhookEvent::CopyFrom(const WebhookEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:livekit.WebhookEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void WebhookEvent::InternalSwap(WebhookEvent* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.event_, &other->_impl_.event_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(WebhookEvent, _impl_.num_dropped_)
      + sizeof(WebhookEvent::_impl_.num_dropped_)
      - PROTOBUF_FIELD_OFFSET(WebhookEvent, _impl_.room_)>(
          reinterpret_cast<char*>(&_impl_.room_),
          reinterpret_cast<char*>(&other->_impl_.room_));
}

::google::protobuf::Metadata WebhookEvent::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace livekit
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_livekit_5fwebhook_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
